--
-- PostgreSQL database dump
--

\restrict iyHyj1PZfhZddddIpmedwg8RUB6J2KY1vwhRHdebcOfnUpIVn5oQz7gWrEUg79L

-- Dumped from database version 17.6
-- Dumped by pg_dump version 17.6 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO supabase_admin;

--
-- Name: extensions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA extensions;


ALTER SCHEMA extensions OWNER TO postgres;

--
-- Name: graphql; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql;


ALTER SCHEMA graphql OWNER TO supabase_admin;

--
-- Name: graphql_public; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql_public;


ALTER SCHEMA graphql_public OWNER TO supabase_admin;

--
-- Name: pgbouncer; Type: SCHEMA; Schema: -; Owner: pgbouncer
--

CREATE SCHEMA pgbouncer;


ALTER SCHEMA pgbouncer OWNER TO pgbouncer;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO postgres;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'Phase 6 performance indexes applied (corrected) - 2025-01-23';


--
-- Name: realtime; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA realtime;


ALTER SCHEMA realtime OWNER TO supabase_admin;

--
-- Name: storage; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA storage;


ALTER SCHEMA storage OWNER TO supabase_admin;

--
-- Name: supabase_migrations; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA supabase_migrations;


ALTER SCHEMA supabase_migrations OWNER TO postgres;

--
-- Name: vault; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA vault;


ALTER SCHEMA vault OWNER TO supabase_admin;

--
-- Name: pg_graphql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_graphql WITH SCHEMA graphql;


--
-- Name: EXTENSION pg_graphql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_graphql IS 'pg_graphql: GraphQL support';


--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA extensions;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track planning and execution statistics of all SQL statements executed';


--
-- Name: pg_trgm; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_trgm WITH SCHEMA public;


--
-- Name: EXTENSION pg_trgm; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_trgm IS 'text similarity measurement and index searching based on trigrams';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA extensions;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: supabase_vault; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS supabase_vault WITH SCHEMA vault;


--
-- Name: EXTENSION supabase_vault; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION supabase_vault IS 'Supabase Vault Extension';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA extensions;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: aal_level; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.aal_level AS ENUM (
    'aal1',
    'aal2',
    'aal3'
);


ALTER TYPE auth.aal_level OWNER TO supabase_auth_admin;

--
-- Name: code_challenge_method; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.code_challenge_method AS ENUM (
    's256',
    'plain'
);


ALTER TYPE auth.code_challenge_method OWNER TO supabase_auth_admin;

--
-- Name: factor_status; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_status AS ENUM (
    'unverified',
    'verified'
);


ALTER TYPE auth.factor_status OWNER TO supabase_auth_admin;

--
-- Name: factor_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_type AS ENUM (
    'totp',
    'webauthn',
    'phone'
);


ALTER TYPE auth.factor_type OWNER TO supabase_auth_admin;

--
-- Name: oauth_registration_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.oauth_registration_type AS ENUM (
    'dynamic',
    'manual'
);


ALTER TYPE auth.oauth_registration_type OWNER TO supabase_auth_admin;

--
-- Name: one_time_token_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.one_time_token_type AS ENUM (
    'confirmation_token',
    'reauthentication_token',
    'recovery_token',
    'email_change_token_new',
    'email_change_token_current',
    'phone_change_token'
);


ALTER TYPE auth.one_time_token_type OWNER TO supabase_auth_admin;

--
-- Name: user_role; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.user_role AS ENUM (
    'admin',
    'user',
    'editor'
);


ALTER TYPE public.user_role OWNER TO postgres;

--
-- Name: action; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.action AS ENUM (
    'INSERT',
    'UPDATE',
    'DELETE',
    'TRUNCATE',
    'ERROR'
);


ALTER TYPE realtime.action OWNER TO supabase_admin;

--
-- Name: equality_op; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.equality_op AS ENUM (
    'eq',
    'neq',
    'lt',
    'lte',
    'gt',
    'gte',
    'in'
);


ALTER TYPE realtime.equality_op OWNER TO supabase_admin;

--
-- Name: user_defined_filter; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.user_defined_filter AS (
	column_name text,
	op realtime.equality_op,
	value text
);


ALTER TYPE realtime.user_defined_filter OWNER TO supabase_admin;

--
-- Name: wal_column; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_column AS (
	name text,
	type_name text,
	type_oid oid,
	value jsonb,
	is_pkey boolean,
	is_selectable boolean
);


ALTER TYPE realtime.wal_column OWNER TO supabase_admin;

--
-- Name: wal_rls; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_rls AS (
	wal jsonb,
	is_rls_enabled boolean,
	subscription_ids uuid[],
	errors text[]
);


ALTER TYPE realtime.wal_rls OWNER TO supabase_admin;

--
-- Name: buckettype; Type: TYPE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TYPE storage.buckettype AS ENUM (
    'STANDARD',
    'ANALYTICS'
);


ALTER TYPE storage.buckettype OWNER TO supabase_storage_admin;

--
-- Name: email(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.email() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.email', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')
  )::text
$$;


ALTER FUNCTION auth.email() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION email(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.email() IS 'Deprecated. Use auth.jwt() -> ''email'' instead.';


--
-- Name: jwt(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.jwt() RETURNS jsonb
    LANGUAGE sql STABLE
    AS $$
  select 
    coalesce(
        nullif(current_setting('request.jwt.claim', true), ''),
        nullif(current_setting('request.jwt.claims', true), '')
    )::jsonb
$$;


ALTER FUNCTION auth.jwt() OWNER TO supabase_auth_admin;

--
-- Name: role(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.role() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.role', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')
  )::text
$$;


ALTER FUNCTION auth.role() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION role(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.role() IS 'Deprecated. Use auth.jwt() -> ''role'' instead.';


--
-- Name: uid(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.uid() RETURNS uuid
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.sub', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')
  )::uuid
$$;


ALTER FUNCTION auth.uid() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION uid(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.uid() IS 'Deprecated. Use auth.jwt() -> ''sub'' instead.';


--
-- Name: grant_pg_cron_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_cron_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_cron'
  )
  THEN
    grant usage on schema cron to postgres with grant option;

    alter default privileges in schema cron grant all on tables to postgres with grant option;
    alter default privileges in schema cron grant all on functions to postgres with grant option;
    alter default privileges in schema cron grant all on sequences to postgres with grant option;

    alter default privileges for user supabase_admin in schema cron grant all
        on sequences to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on tables to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on functions to postgres with grant option;

    grant all privileges on all tables in schema cron to postgres with grant option;
    revoke all on table cron.job from postgres;
    grant select on table cron.job to postgres with grant option;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_cron_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_cron_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_cron_access() IS 'Grants access to pg_cron';


--
-- Name: grant_pg_graphql_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_graphql_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    func_is_graphql_resolve bool;
BEGIN
    func_is_graphql_resolve = (
        SELECT n.proname = 'resolve'
        FROM pg_event_trigger_ddl_commands() AS ev
        LEFT JOIN pg_catalog.pg_proc AS n
        ON ev.objid = n.oid
    );

    IF func_is_graphql_resolve
    THEN
        -- Update public wrapper to pass all arguments through to the pg_graphql resolve func
        DROP FUNCTION IF EXISTS graphql_public.graphql;
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language sql
        as $$
            select graphql.resolve(
                query := query,
                variables := coalesce(variables, '{}'),
                "operationName" := "operationName",
                extensions := extensions
            );
        $$;

        -- This hook executes when `graphql.resolve` is created. That is not necessarily the last
        -- function in the extension so we need to grant permissions on existing entities AND
        -- update default permissions to any others that are created after `graphql.resolve`
        grant usage on schema graphql to postgres, anon, authenticated, service_role;
        grant select on all tables in schema graphql to postgres, anon, authenticated, service_role;
        grant execute on all functions in schema graphql to postgres, anon, authenticated, service_role;
        grant all on all sequences in schema graphql to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on tables to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on functions to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on sequences to postgres, anon, authenticated, service_role;

        -- Allow postgres role to allow granting usage on graphql and graphql_public schemas to custom roles
        grant usage on schema graphql_public to postgres with grant option;
        grant usage on schema graphql to postgres with grant option;
    END IF;

END;
$_$;


ALTER FUNCTION extensions.grant_pg_graphql_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_graphql_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_graphql_access() IS 'Grants access to pg_graphql';


--
-- Name: grant_pg_net_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_net_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT 1
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_net'
  )
  THEN
    IF NOT EXISTS (
      SELECT 1
      FROM pg_roles
      WHERE rolname = 'supabase_functions_admin'
    )
    THEN
      CREATE USER supabase_functions_admin NOINHERIT CREATEROLE LOGIN NOREPLICATION;
    END IF;

    GRANT USAGE ON SCHEMA net TO supabase_functions_admin, postgres, anon, authenticated, service_role;

    IF EXISTS (
      SELECT FROM pg_extension
      WHERE extname = 'pg_net'
      -- all versions in use on existing projects as of 2025-02-20
      -- version 0.12.0 onwards don't need these applied
      AND extversion IN ('0.2', '0.6', '0.7', '0.7.1', '0.8', '0.10.0', '0.11.0')
    ) THEN
      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;

      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;

      REVOKE ALL ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;
      REVOKE ALL ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;

      GRANT EXECUTE ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
      GRANT EXECUTE ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
    END IF;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_net_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_net_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_net_access() IS 'Grants access to pg_net';


--
-- Name: pgrst_ddl_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_ddl_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  cmd record;
BEGIN
  FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()
  LOOP
    IF cmd.command_tag IN (
      'CREATE SCHEMA', 'ALTER SCHEMA'
    , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'
    , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'
    , 'CREATE VIEW', 'ALTER VIEW'
    , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'
    , 'CREATE FUNCTION', 'ALTER FUNCTION'
    , 'CREATE TRIGGER'
    , 'CREATE TYPE', 'ALTER TYPE'
    , 'CREATE RULE'
    , 'COMMENT'
    )
    -- don't notify in case of CREATE TEMP table or other objects created on pg_temp
    AND cmd.schema_name is distinct from 'pg_temp'
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_ddl_watch() OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_drop_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  obj record;
BEGIN
  FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
  LOOP
    IF obj.object_type IN (
      'schema'
    , 'table'
    , 'foreign table'
    , 'view'
    , 'materialized view'
    , 'function'
    , 'trigger'
    , 'type'
    , 'rule'
    )
    AND obj.is_temporary IS false -- no pg_temp objects
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_drop_watch() OWNER TO supabase_admin;

--
-- Name: set_graphql_placeholder(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.set_graphql_placeholder() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
    DECLARE
    graphql_is_dropped bool;
    BEGIN
    graphql_is_dropped = (
        SELECT ev.schema_name = 'graphql_public'
        FROM pg_event_trigger_dropped_objects() AS ev
        WHERE ev.schema_name = 'graphql_public'
    );

    IF graphql_is_dropped
    THEN
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language plpgsql
        as $$
            DECLARE
                server_version float;
            BEGIN
                server_version = (SELECT (SPLIT_PART((select version()), ' ', 2))::float);

                IF server_version >= 14 THEN
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql extension is not enabled.'
                            )
                        )
                    );
                ELSE
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql is only available on projects running Postgres 14 onwards.'
                            )
                        )
                    );
                END IF;
            END;
        $$;
    END IF;

    END;
$_$;


ALTER FUNCTION extensions.set_graphql_placeholder() OWNER TO supabase_admin;

--
-- Name: FUNCTION set_graphql_placeholder(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.set_graphql_placeholder() IS 'Reintroduces placeholder function for graphql_public.graphql';


--
-- Name: get_auth(text); Type: FUNCTION; Schema: pgbouncer; Owner: supabase_admin
--

CREATE FUNCTION pgbouncer.get_auth(p_usename text) RETURNS TABLE(username text, password text)
    LANGUAGE plpgsql SECURITY DEFINER
    AS $_$
begin
    raise debug 'PgBouncer auth request: %', p_usename;

    return query
    select 
        rolname::text, 
        case when rolvaliduntil < now() 
            then null 
            else rolpassword::text 
        end 
    from pg_authid 
    where rolname=$1 and rolcanlogin;
end;
$_$;


ALTER FUNCTION pgbouncer.get_auth(p_usename text) OWNER TO supabase_admin;

--
-- Name: cancel_invitation(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.cancel_invitation(p_invitation_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
BEGIN
    -- Check if user is admin
    IF NOT EXISTS (
        SELECT 1 FROM profiles
        WHERE id = auth.uid()
        AND role = 'admin'
    ) THEN
        RAISE EXCEPTION 'Unauthorized: Only admins can cancel invitations';
    END IF;

    -- Soft delete by expiring the invitation
    UPDATE user_invitations
    SET expires_at = NOW()
    WHERE id = p_invitation_id
    AND consumed_at IS NULL;

    RETURN FOUND;
END;
$$;


ALTER FUNCTION public.cancel_invitation(p_invitation_id uuid) OWNER TO postgres;

--
-- Name: cleanup_expired_invitations(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.cleanup_expired_invitations() RETURNS integer
    LANGUAGE plpgsql
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    deleted_count INTEGER;
BEGIN
    DELETE FROM invitations
    WHERE used = false
    AND expires_at < NOW() - INTERVAL '30 days';

    GET DIAGNOSTICS deleted_count = ROW_COUNT;

    RETURN deleted_count;
END;
$$;


ALTER FUNCTION public.cleanup_expired_invitations() OWNER TO postgres;

--
-- Name: FUNCTION cleanup_expired_invitations(); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.cleanup_expired_invitations() IS 'Removes expired invitations older than 30 days';


--
-- Name: consume_invitation(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.consume_invitation(p_invitation_id uuid, p_user_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
BEGIN
    UPDATE user_invitations
    SET
        consumed_at = NOW(),
        consumed_by = p_user_id
    WHERE id = p_invitation_id
    AND consumed_at IS NULL
    AND expires_at > NOW();

    RETURN FOUND;
END;
$$;


ALTER FUNCTION public.consume_invitation(p_invitation_id uuid, p_user_id uuid) OWNER TO postgres;

--
-- Name: count_profiles_estimated(text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.count_profiles_estimated(search_term text DEFAULT NULL::text, filter_role text DEFAULT NULL::text, filter_active boolean DEFAULT NULL::boolean) RETURNS bigint
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
  result BIGINT;
  total_rows BIGINT;
BEGIN
  -- For simple cases with no filters, use table statistics
  IF search_term IS NULL AND filter_role IS NULL AND filter_active IS NULL THEN
    SELECT COALESCE(reltuples::bigint, 0) INTO total_rows 
    FROM pg_class WHERE relname = 'profiles';
    RETURN total_rows;
  END IF;
  
  -- For filtered queries, use exact count (profiles table is expected to be small)
  SELECT COUNT(*)
  INTO result
  FROM profiles p
  WHERE 
    (filter_role IS NULL OR p.role = filter_role)
    AND (filter_active IS NULL OR p.is_active = filter_active)
    AND (
      search_term IS NULL 
      OR (
        length(search_term) < 3 AND (
          p.username ILIKE search_term || '%'
          OR p.email ILIKE search_term || '%'
          OR p.full_name ILIKE search_term || '%'
        )
      )
      OR (
        length(search_term) >= 3 AND (
          p.username % search_term
          OR p.email % search_term  
          OR p.full_name % search_term
          OR (COALESCE(p.username, '') || ' ' || COALESCE(p.email, '') || ' ' || COALESCE(p.full_name, '')) % search_term
        )
      )
    );
    
  RETURN COALESCE(result, 0);
END;
$$;


ALTER FUNCTION public.count_profiles_estimated(search_term text, filter_role text, filter_active boolean) OWNER TO postgres;

--
-- Name: create_user_invitation(character varying, character varying, public.user_role, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_user_invitation(p_email character varying, p_full_name character varying, p_role public.user_role, p_message text DEFAULT NULL::text) RETURNS TABLE(invitation_id uuid, token text, expires_at timestamp with time zone)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    v_token_data RECORD;
    v_invitation_id UUID;
    v_expires TIMESTAMPTZ;
BEGIN
    -- Check if user is admin
    IF NOT EXISTS (
        SELECT 1 FROM profiles
        WHERE id = auth.uid()
        AND role = 'admin'
    ) THEN
        RAISE EXCEPTION 'Unauthorized: Only admins can create invitations';
    END IF;

    -- Check for existing pending invitation
    IF EXISTS (
        SELECT 1 FROM user_invitations
        WHERE email = p_email
        AND consumed_at IS NULL
        AND expires_at > NOW()
    ) THEN
        RAISE EXCEPTION 'An active invitation already exists for this email';
    END IF;

    -- Generate secure token
    SELECT * INTO v_token_data FROM generate_invitation_token();

    -- Calculate expiration
    v_expires := NOW() + INTERVAL '48 hours';

    -- Create invitation
    INSERT INTO user_invitations (
        email,
        full_name,
        role,
        token_hash,
        token_salt,
        created_by,
        expires_at,
        invitation_message
    ) VALUES (
        p_email,
        p_full_name,
        p_role,
        v_token_data.hash,
        v_token_data.salt,
        auth.uid(),
        v_expires,
        p_message
    ) RETURNING id INTO v_invitation_id;

    -- Return invitation details
    RETURN QUERY SELECT
        v_invitation_id,
        v_token_data.token,
        v_expires;
END;
$$;


ALTER FUNCTION public.create_user_invitation(p_email character varying, p_full_name character varying, p_role public.user_role, p_message text) OWNER TO postgres;

--
-- Name: generate_invitation_token(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.generate_invitation_token() RETURNS TABLE(token text, hash text, salt text)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    v_token TEXT;
    v_salt TEXT;
    v_hash TEXT;
BEGIN
    -- Generate 32 bytes of random data for token
    v_token := encode(gen_random_bytes(32), 'base64');
    -- Generate unique salt for this invitation
    v_salt := encode(gen_random_bytes(16), 'base64');
    -- Create salted hash
    v_hash := encode(digest(v_token || v_salt, 'sha256'), 'hex');
    RETURN QUERY SELECT v_token, v_hash, v_salt;
END;
$$;


ALTER FUNCTION public.generate_invitation_token() OWNER TO postgres;

--
-- Name: get_invitation_stats(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_invitation_stats() RETURNS TABLE(total_invitations bigint, active_invitations bigint, expired_invitations bigint, used_invitations bigint, conversion_rate numeric)
    LANGUAGE plpgsql
    SET search_path TO 'public', 'pg_catalog'
    AS $$
BEGIN
    RETURN QUERY
    SELECT
        COUNT(*) as total_invitations,
        COUNT(*) FILTER (WHERE used = false AND expires_at > NOW()) as active_invitations,
        COUNT(*) FILTER (WHERE used = false AND expires_at <= NOW()) as expired_invitations,
        COUNT(*) FILTER (WHERE used = true) as used_invitations,
        CASE
            WHEN COUNT(*) > 0 THEN
                ROUND((COUNT(*) FILTER (WHERE used = true) * 100.0 / COUNT(*)), 2)
            ELSE 0
        END as conversion_rate
    FROM invitations;
END;
$$;


ALTER FUNCTION public.get_invitation_stats() OWNER TO postgres;

--
-- Name: FUNCTION get_invitation_stats(); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.get_invitation_stats() IS 'Returns comprehensive invitation system statistics';


--
-- Name: handle_new_user(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_new_user() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  -- Insert into profiles table, ignore if already exists
  INSERT INTO public.profiles (
    id,
    email,
    full_name,
    username,
    role,
    is_active,
    account_status,
    created_at,
    updated_at
  )
  VALUES (
    NEW.id,
    NEW.email,
    COALESCE(NEW.raw_user_meta_data->>'full_name', ''),
    COALESCE(NEW.raw_user_meta_data->>'username', NULL),
    COALESCE(NEW.raw_user_meta_data->>'role', 'user'),
    true,
    'active',
    NOW(),
    NOW()
  )
  ON CONFLICT (id) DO NOTHING;
  
  RETURN NEW;
EXCEPTION
  WHEN OTHERS THEN
    -- Log error but don't fail the user creation
    RAISE WARNING 'Failed to create profile for user %: %', NEW.id, SQLERRM;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.handle_new_user() OWNER TO postgres;

--
-- Name: is_admin(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_admin() RETURNS boolean
    LANGUAGE sql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1 FROM profiles
    WHERE id = auth.uid()
    AND role = 'admin'
  );
$$;


ALTER FUNCTION public.is_admin() OWNER TO postgres;

--
-- Name: is_moderator(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_moderator() RETURNS boolean
    LANGUAGE sql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1 FROM profiles
    WHERE id = auth.uid()
    AND role IN ('admin', 'moderator')
  );
$$;


ALTER FUNCTION public.is_moderator() OWNER TO postgres;

--
-- Name: log_role_changes(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_role_changes() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF OLD.role IS DISTINCT FROM NEW.role THEN
    INSERT INTO security_audit_log (
      user_id,
      action,
      table_name,
      record_id,
      old_data,
      new_data
    ) VALUES (
      auth.uid(),
      'ROLE_CHANGE',
      'profiles',
      NEW.id::TEXT,
      jsonb_build_object('role', OLD.role),
      jsonb_build_object('role', NEW.role)
    );
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.log_role_changes() OWNER TO postgres;

--
-- Name: resend_invitation(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.resend_invitation(p_invitation_id uuid) RETURNS TABLE(token text, expires_at timestamp with time zone)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    v_token_data RECORD;
    v_expires TIMESTAMPTZ;
BEGIN
    -- Check if user is admin
    IF NOT EXISTS (
        SELECT 1 FROM profiles
        WHERE id = auth.uid()
        AND role = 'admin'
    ) THEN
        RAISE EXCEPTION 'Unauthorized: Only admins can resend invitations';
    END IF;

    -- Generate new token
    SELECT * INTO v_token_data FROM generate_invitation_token();

    -- Calculate new expiration
    v_expires := NOW() + INTERVAL '48 hours';

    -- Update invitation with new token
    UPDATE user_invitations
    SET
        token_hash = v_token_data.hash,
        token_salt = v_token_data.salt,
        expires_at = v_expires,
        attempts = 0,
        locked_until = NULL,
        last_attempt_at = NULL
    WHERE id = p_invitation_id
    AND consumed_at IS NULL;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Invitation not found or already consumed';
    END IF;

    -- Return new token
    RETURN QUERY SELECT
        v_token_data.token,
        v_expires;
END;
$$;


ALTER FUNCTION public.resend_invitation(p_invitation_id uuid) OWNER TO postgres;

--
-- Name: search_profiles_optimized(text, text, boolean, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.search_profiles_optimized(search_term text DEFAULT NULL::text, filter_role text DEFAULT NULL::text, filter_active boolean DEFAULT NULL::boolean, page_limit integer DEFAULT 20, page_offset integer DEFAULT 0) RETURNS TABLE(id uuid, username text, email text, full_name text, role text, is_active boolean, account_status text, created_at timestamp with time zone, updated_at timestamp with time zone, last_sign_in_at timestamp without time zone, search_rank real)
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
  RETURN QUERY
  SELECT 
    p.id,
    p.username,
    p.email,
    p.full_name,
    p.role,
    p.is_active,
    p.account_status,
    p.created_at,
    p.updated_at,
    p.last_sign_in_at,
    CASE 
      WHEN search_term IS NULL THEN 0::real
      ELSE GREATEST(
        similarity(COALESCE(p.username, ''), search_term),
        similarity(COALESCE(p.email, ''), search_term),
        similarity(COALESCE(p.full_name, ''), search_term)
      )
    END as search_rank
  FROM profiles p
  WHERE 
    (filter_role IS NULL OR p.role = filter_role)
    AND (filter_active IS NULL OR p.is_active = filter_active)
    AND (
      search_term IS NULL 
      OR (
        length(search_term) < 3 AND (
          p.username ILIKE search_term || '%'
          OR p.email ILIKE search_term || '%'
          OR p.full_name ILIKE search_term || '%'
        )
      )
      OR (
        length(search_term) >= 3 AND (
          p.username % search_term
          OR p.email % search_term  
          OR p.full_name % search_term
          OR (COALESCE(p.username, '') || ' ' || COALESCE(p.email, '') || ' ' || COALESCE(p.full_name, '')) % search_term
        )
      )
    )
  ORDER BY 
    CASE WHEN search_term IS NULL THEN p.created_at END DESC,
    CASE WHEN search_term IS NOT NULL THEN search_rank END DESC,
    p.created_at DESC
  LIMIT page_limit
  OFFSET page_offset;
END;
$$;


ALTER FUNCTION public.search_profiles_optimized(search_term text, filter_role text, filter_active boolean, page_limit integer, page_offset integer) OWNER TO postgres;

--
-- Name: update_charter_companies_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_charter_companies_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_charter_companies_updated_at() OWNER TO postgres;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_updated_at_column() OWNER TO postgres;

--
-- Name: update_user_role(uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_user_role(target_user_id uuid, new_role text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Check if current user is admin
  IF NOT EXISTS (
    SELECT 1 FROM profiles 
    WHERE id = auth.uid() 
    AND role = 'admin'
  ) THEN
    RAISE EXCEPTION 'Only admins can update user roles';
  END IF;

  -- Validate new role
  IF new_role NOT IN ('user', 'admin', 'content_manager') THEN
    RAISE EXCEPTION 'Invalid role: %', new_role;
  END IF;

  -- Update the role
  UPDATE profiles 
  SET role = new_role,
      updated_at = NOW()
  WHERE id = target_user_id;
  
  IF NOT FOUND THEN
    RAISE EXCEPTION 'User not found';
  END IF;
END;
$$;


ALTER FUNCTION public.update_user_role(target_user_id uuid, new_role text) OWNER TO postgres;

--
-- Name: validate_invitation_token(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.validate_invitation_token(p_token text) RETURNS TABLE(invitation_id uuid, email character varying, full_name character varying, role public.user_role, is_valid boolean, error_message text)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    v_invitation RECORD;
BEGIN
    -- Find invitation by computing hash with stored salt
    SELECT i.* INTO v_invitation
    FROM user_invitations i
    WHERE i.consumed_at IS NULL
    AND i.expires_at > NOW()
    AND encode(digest(p_token || i.token_salt, 'sha256'), 'hex') = i.token_hash
    LIMIT 1;

    -- Check if invitation exists
    IF v_invitation.id IS NULL THEN
        -- Intentional delay to prevent timing attacks
        PERFORM pg_sleep(0.1);
        RETURN QUERY SELECT
            NULL::UUID,
            NULL::VARCHAR(255),
            NULL::VARCHAR(255),
            NULL::user_role,
            false,
            'Invalid or expired invitation'::TEXT;
        RETURN;
    END IF;

    -- Check if locked
    IF v_invitation.locked_until IS NOT NULL AND v_invitation.locked_until > NOW() THEN
        RETURN QUERY SELECT
            v_invitation.id,
            v_invitation.email,
            v_invitation.full_name,
            v_invitation.role,
            false,
            'Too many attempts. Please try again later.'::TEXT;
        RETURN;
    END IF;

    -- Update attempt counter
    UPDATE user_invitations
    SET
        attempts = attempts + 1,
        last_attempt_at = NOW(),
        locked_until = CASE
            WHEN attempts >= 9 THEN NOW() + INTERVAL '1 hour'
            WHEN attempts >= 4 THEN NOW() + INTERVAL '15 minutes'
            ELSE NULL
        END
    WHERE id = v_invitation.id;

    -- Return valid invitation
    RETURN QUERY SELECT
        v_invitation.id,
        v_invitation.email,
        v_invitation.full_name,
        v_invitation.role,
        true,
        NULL::TEXT;
END;
$$;


ALTER FUNCTION public.validate_invitation_token(p_token text) OWNER TO postgres;

--
-- Name: validate_invitation_token(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.validate_invitation_token(p_email text, p_token_hash text, p_salt text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public', 'pg_catalog'
    AS $$
DECLARE
    invitation_count INTEGER;
BEGIN
    SELECT COUNT(*)
    INTO invitation_count
    FROM invitations
    WHERE email = LOWER(p_email)
    AND token_hash = p_token_hash
    AND salt = p_salt
    AND used = false
    AND expires_at > NOW();

    RETURN invitation_count > 0;
END;
$$;


ALTER FUNCTION public.validate_invitation_token(p_email text, p_token_hash text, p_salt text) OWNER TO postgres;

--
-- Name: FUNCTION validate_invitation_token(p_email text, p_token_hash text, p_salt text); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.validate_invitation_token(p_email text, p_token_hash text, p_salt text) IS 'Securely validates invitation tokens';


--
-- Name: apply_rls(jsonb, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer DEFAULT (1024 * 1024)) RETURNS SETOF realtime.wal_rls
    LANGUAGE plpgsql
    AS $$
declare
-- Regclass of the table e.g. public.notes
entity_ regclass = (quote_ident(wal ->> 'schema') || '.' || quote_ident(wal ->> 'table'))::regclass;

-- I, U, D, T: insert, update ...
action realtime.action = (
    case wal ->> 'action'
        when 'I' then 'INSERT'
        when 'U' then 'UPDATE'
        when 'D' then 'DELETE'
        else 'ERROR'
    end
);

-- Is row level security enabled for the table
is_rls_enabled bool = relrowsecurity from pg_class where oid = entity_;

subscriptions realtime.subscription[] = array_agg(subs)
    from
        realtime.subscription subs
    where
        subs.entity = entity_;

-- Subscription vars
roles regrole[] = array_agg(distinct us.claims_role::text)
    from
        unnest(subscriptions) us;

working_role regrole;
claimed_role regrole;
claims jsonb;

subscription_id uuid;
subscription_has_access bool;
visible_to_subscription_ids uuid[] = '{}';

-- structured info for wal's columns
columns realtime.wal_column[];
-- previous identity values for update/delete
old_columns realtime.wal_column[];

error_record_exceeds_max_size boolean = octet_length(wal::text) > max_record_bytes;

-- Primary jsonb output for record
output jsonb;

begin
perform set_config('role', null, true);

columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'columns') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

old_columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'identity') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

for working_role in select * from unnest(roles) loop

    -- Update `is_selectable` for columns and old_columns
    columns =
        array_agg(
            (
                c.name,
                c.type_name,
                c.type_oid,
                c.value,
                c.is_pkey,
                pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
            )::realtime.wal_column
        )
        from
            unnest(columns) c;

    old_columns =
            array_agg(
                (
                    c.name,
                    c.type_name,
                    c.type_oid,
                    c.value,
                    c.is_pkey,
                    pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
                )::realtime.wal_column
            )
            from
                unnest(old_columns) c;

    if action <> 'DELETE' and count(1) = 0 from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            -- subscriptions is already filtered by entity
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 400: Bad Request, no primary key']
        )::realtime.wal_rls;

    -- The claims role does not have SELECT permission to the primary key of entity
    elsif action <> 'DELETE' and sum(c.is_selectable::int) <> count(1) from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 401: Unauthorized']
        )::realtime.wal_rls;

    else
        output = jsonb_build_object(
            'schema', wal ->> 'schema',
            'table', wal ->> 'table',
            'type', action,
            'commit_timestamp', to_char(
                ((wal ->> 'timestamp')::timestamptz at time zone 'utc'),
                'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"'
            ),
            'columns', (
                select
                    jsonb_agg(
                        jsonb_build_object(
                            'name', pa.attname,
                            'type', pt.typname
                        )
                        order by pa.attnum asc
                    )
                from
                    pg_attribute pa
                    join pg_type pt
                        on pa.atttypid = pt.oid
                where
                    attrelid = entity_
                    and attnum > 0
                    and pg_catalog.has_column_privilege(working_role, entity_, pa.attname, 'SELECT')
            )
        )
        -- Add "record" key for insert and update
        || case
            when action in ('INSERT', 'UPDATE') then
                jsonb_build_object(
                    'record',
                    (
                        select
                            jsonb_object_agg(
                                -- if unchanged toast, get column name and value from old record
                                coalesce((c).name, (oc).name),
                                case
                                    when (c).name is null then (oc).value
                                    else (c).value
                                end
                            )
                        from
                            unnest(columns) c
                            full outer join unnest(old_columns) oc
                                on (c).name = (oc).name
                        where
                            coalesce((c).is_selectable, (oc).is_selectable)
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                    )
                )
            else '{}'::jsonb
        end
        -- Add "old_record" key for update and delete
        || case
            when action = 'UPDATE' then
                jsonb_build_object(
                        'old_record',
                        (
                            select jsonb_object_agg((c).name, (c).value)
                            from unnest(old_columns) c
                            where
                                (c).is_selectable
                                and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                        )
                    )
            when action = 'DELETE' then
                jsonb_build_object(
                    'old_record',
                    (
                        select jsonb_object_agg((c).name, (c).value)
                        from unnest(old_columns) c
                        where
                            (c).is_selectable
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                            and ( not is_rls_enabled or (c).is_pkey ) -- if RLS enabled, we can't secure deletes so filter to pkey
                    )
                )
            else '{}'::jsonb
        end;

        -- Create the prepared statement
        if is_rls_enabled and action <> 'DELETE' then
            if (select 1 from pg_prepared_statements where name = 'walrus_rls_stmt' limit 1) > 0 then
                deallocate walrus_rls_stmt;
            end if;
            execute realtime.build_prepared_statement_sql('walrus_rls_stmt', entity_, columns);
        end if;

        visible_to_subscription_ids = '{}';

        for subscription_id, claims in (
                select
                    subs.subscription_id,
                    subs.claims
                from
                    unnest(subscriptions) subs
                where
                    subs.entity = entity_
                    and subs.claims_role = working_role
                    and (
                        realtime.is_visible_through_filters(columns, subs.filters)
                        or (
                          action = 'DELETE'
                          and realtime.is_visible_through_filters(old_columns, subs.filters)
                        )
                    )
        ) loop

            if not is_rls_enabled or action = 'DELETE' then
                visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
            else
                -- Check if RLS allows the role to see the record
                perform
                    -- Trim leading and trailing quotes from working_role because set_config
                    -- doesn't recognize the role as valid if they are included
                    set_config('role', trim(both '"' from working_role::text), true),
                    set_config('request.jwt.claims', claims::text, true);

                execute 'execute walrus_rls_stmt' into subscription_has_access;

                if subscription_has_access then
                    visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
                end if;
            end if;
        end loop;

        perform set_config('role', null, true);

        return next (
            output,
            is_rls_enabled,
            visible_to_subscription_ids,
            case
                when error_record_exceeds_max_size then array['Error 413: Payload Too Large']
                else '{}'
            end
        )::realtime.wal_rls;

    end if;
end loop;

perform set_config('role', null, true);
end;
$$;


ALTER FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: broadcast_changes(text, text, text, text, text, record, record, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text DEFAULT 'ROW'::text) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    -- Declare a variable to hold the JSONB representation of the row
    row_data jsonb := '{}'::jsonb;
BEGIN
    IF level = 'STATEMENT' THEN
        RAISE EXCEPTION 'function can only be triggered for each row, not for each statement';
    END IF;
    -- Check the operation type and handle accordingly
    IF operation = 'INSERT' OR operation = 'UPDATE' OR operation = 'DELETE' THEN
        row_data := jsonb_build_object('old_record', OLD, 'record', NEW, 'operation', operation, 'table', table_name, 'schema', table_schema);
        PERFORM realtime.send (row_data, event_name, topic_name);
    ELSE
        RAISE EXCEPTION 'Unexpected operation type: %', operation;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Failed to process the row: %', SQLERRM;
END;

$$;


ALTER FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) OWNER TO supabase_admin;

--
-- Name: build_prepared_statement_sql(text, regclass, realtime.wal_column[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) RETURNS text
    LANGUAGE sql
    AS $$
      /*
      Builds a sql string that, if executed, creates a prepared statement to
      tests retrive a row from *entity* by its primary key columns.
      Example
          select realtime.build_prepared_statement_sql('public.notes', '{"id"}'::text[], '{"bigint"}'::text[])
      */
          select
      'prepare ' || prepared_statement_name || ' as
          select
              exists(
                  select
                      1
                  from
                      ' || entity || '
                  where
                      ' || string_agg(quote_ident(pkc.name) || '=' || quote_nullable(pkc.value #>> '{}') , ' and ') || '
              )'
          from
              unnest(columns) pkc
          where
              pkc.is_pkey
          group by
              entity
      $$;


ALTER FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) OWNER TO supabase_admin;

--
-- Name: cast(text, regtype); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime."cast"(val text, type_ regtype) RETURNS jsonb
    LANGUAGE plpgsql IMMUTABLE
    AS $$
    declare
      res jsonb;
    begin
      execute format('select to_jsonb(%L::'|| type_::text || ')', val)  into res;
      return res;
    end
    $$;


ALTER FUNCTION realtime."cast"(val text, type_ regtype) OWNER TO supabase_admin;

--
-- Name: check_equality_op(realtime.equality_op, regtype, text, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
      /*
      Casts *val_1* and *val_2* as type *type_* and check the *op* condition for truthiness
      */
      declare
          op_symbol text = (
              case
                  when op = 'eq' then '='
                  when op = 'neq' then '!='
                  when op = 'lt' then '<'
                  when op = 'lte' then '<='
                  when op = 'gt' then '>'
                  when op = 'gte' then '>='
                  when op = 'in' then '= any'
                  else 'UNKNOWN OP'
              end
          );
          res boolean;
      begin
          execute format(
              'select %L::'|| type_::text || ' ' || op_symbol
              || ' ( %L::'
              || (
                  case
                      when op = 'in' then type_::text || '[]'
                      else type_::text end
              )
              || ')', val_1, val_2) into res;
          return res;
      end;
      $$;


ALTER FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) OWNER TO supabase_admin;

--
-- Name: is_visible_through_filters(realtime.wal_column[], realtime.user_defined_filter[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$
    /*
    Should the record be visible (true) or filtered out (false) after *filters* are applied
    */
        select
            -- Default to allowed when no filters present
            $2 is null -- no filters. this should not happen because subscriptions has a default
            or array_length($2, 1) is null -- array length of an empty array is null
            or bool_and(
                coalesce(
                    realtime.check_equality_op(
                        op:=f.op,
                        type_:=coalesce(
                            col.type_oid::regtype, -- null when wal2json version <= 2.4
                            col.type_name::regtype
                        ),
                        -- cast jsonb to text
                        val_1:=col.value #>> '{}',
                        val_2:=f.value
                    ),
                    false -- if null, filter does not match
                )
            )
        from
            unnest(filters) f
            join unnest(columns) col
                on f.column_name = col.name;
    $_$;


ALTER FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) OWNER TO supabase_admin;

--
-- Name: list_changes(name, name, integer, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) RETURNS SETOF realtime.wal_rls
    LANGUAGE sql
    SET log_min_messages TO 'fatal'
    AS $$
      with pub as (
        select
          concat_ws(
            ',',
            case when bool_or(pubinsert) then 'insert' else null end,
            case when bool_or(pubupdate) then 'update' else null end,
            case when bool_or(pubdelete) then 'delete' else null end
          ) as w2j_actions,
          coalesce(
            string_agg(
              realtime.quote_wal2json(format('%I.%I', schemaname, tablename)::regclass),
              ','
            ) filter (where ppt.tablename is not null and ppt.tablename not like '% %'),
            ''
          ) w2j_add_tables
        from
          pg_publication pp
          left join pg_publication_tables ppt
            on pp.pubname = ppt.pubname
        where
          pp.pubname = publication
        group by
          pp.pubname
        limit 1
      ),
      w2j as (
        select
          x.*, pub.w2j_add_tables
        from
          pub,
          pg_logical_slot_get_changes(
            slot_name, null, max_changes,
            'include-pk', 'true',
            'include-transaction', 'false',
            'include-timestamp', 'true',
            'include-type-oids', 'true',
            'format-version', '2',
            'actions', pub.w2j_actions,
            'add-tables', pub.w2j_add_tables
          ) x
      )
      select
        xyz.wal,
        xyz.is_rls_enabled,
        xyz.subscription_ids,
        xyz.errors
      from
        w2j,
        realtime.apply_rls(
          wal := w2j.data::jsonb,
          max_record_bytes := max_record_bytes
        ) xyz(wal, is_rls_enabled, subscription_ids, errors)
      where
        w2j.w2j_add_tables <> ''
        and xyz.subscription_ids[1] is not null
    $$;


ALTER FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: quote_wal2json(regclass); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.quote_wal2json(entity regclass) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
      select
        (
          select string_agg('' || ch,'')
          from unnest(string_to_array(nsp.nspname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
        )
        || '.'
        || (
          select string_agg('' || ch,'')
          from unnest(string_to_array(pc.relname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
          )
      from
        pg_class pc
        join pg_namespace nsp
          on pc.relnamespace = nsp.oid
      where
        pc.oid = entity
    $$;


ALTER FUNCTION realtime.quote_wal2json(entity regclass) OWNER TO supabase_admin;

--
-- Name: send(jsonb, text, text, boolean); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean DEFAULT true) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  BEGIN
    -- Set the topic configuration
    EXECUTE format('SET LOCAL realtime.topic TO %L', topic);

    -- Attempt to insert the message
    INSERT INTO realtime.messages (payload, event, topic, private, extension)
    VALUES (payload, event, topic, private, 'broadcast');
  EXCEPTION
    WHEN OTHERS THEN
      -- Capture and notify the error
      RAISE WARNING 'ErrorSendingBroadcastMessage: %', SQLERRM;
  END;
END;
$$;


ALTER FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) OWNER TO supabase_admin;

--
-- Name: subscription_check_filters(); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.subscription_check_filters() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    /*
    Validates that the user defined filters for a subscription:
    - refer to valid columns that the claimed role may access
    - values are coercable to the correct column type
    */
    declare
        col_names text[] = coalesce(
                array_agg(c.column_name order by c.ordinal_position),
                '{}'::text[]
            )
            from
                information_schema.columns c
            where
                format('%I.%I', c.table_schema, c.table_name)::regclass = new.entity
                and pg_catalog.has_column_privilege(
                    (new.claims ->> 'role'),
                    format('%I.%I', c.table_schema, c.table_name)::regclass,
                    c.column_name,
                    'SELECT'
                );
        filter realtime.user_defined_filter;
        col_type regtype;

        in_val jsonb;
    begin
        for filter in select * from unnest(new.filters) loop
            -- Filtered column is valid
            if not filter.column_name = any(col_names) then
                raise exception 'invalid column for filter %', filter.column_name;
            end if;

            -- Type is sanitized and safe for string interpolation
            col_type = (
                select atttypid::regtype
                from pg_catalog.pg_attribute
                where attrelid = new.entity
                      and attname = filter.column_name
            );
            if col_type is null then
                raise exception 'failed to lookup type for column %', filter.column_name;
            end if;

            -- Set maximum number of entries for in filter
            if filter.op = 'in'::realtime.equality_op then
                in_val = realtime.cast(filter.value, (col_type::text || '[]')::regtype);
                if coalesce(jsonb_array_length(in_val), 0) > 100 then
                    raise exception 'too many values for `in` filter. Maximum 100';
                end if;
            else
                -- raises an exception if value is not coercable to type
                perform realtime.cast(filter.value, col_type);
            end if;

        end loop;

        -- Apply consistent order to filters so the unique constraint on
        -- (subscription_id, entity, filters) can't be tricked by a different filter order
        new.filters = coalesce(
            array_agg(f order by f.column_name, f.op, f.value),
            '{}'
        ) from unnest(new.filters) f;

        return new;
    end;
    $$;


ALTER FUNCTION realtime.subscription_check_filters() OWNER TO supabase_admin;

--
-- Name: to_regrole(text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.to_regrole(role_name text) RETURNS regrole
    LANGUAGE sql IMMUTABLE
    AS $$ select role_name::regrole $$;


ALTER FUNCTION realtime.to_regrole(role_name text) OWNER TO supabase_admin;

--
-- Name: topic(); Type: FUNCTION; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE FUNCTION realtime.topic() RETURNS text
    LANGUAGE sql STABLE
    AS $$
select nullif(current_setting('realtime.topic', true), '')::text;
$$;


ALTER FUNCTION realtime.topic() OWNER TO supabase_realtime_admin;

--
-- Name: add_prefixes(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.add_prefixes(_bucket_id text, _name text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    prefixes text[];
BEGIN
    prefixes := "storage"."get_prefixes"("_name");

    IF array_length(prefixes, 1) > 0 THEN
        INSERT INTO storage.prefixes (name, bucket_id)
        SELECT UNNEST(prefixes) as name, "_bucket_id" ON CONFLICT DO NOTHING;
    END IF;
END;
$$;


ALTER FUNCTION storage.add_prefixes(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: can_insert_object(text, text, uuid, jsonb); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  INSERT INTO "storage"."objects" ("bucket_id", "name", "owner", "metadata") VALUES (bucketid, name, owner, metadata);
  -- hack to rollback the successful insert
  RAISE sqlstate 'PT200' using
  message = 'ROLLBACK',
  detail = 'rollback successful insert';
END
$$;


ALTER FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) OWNER TO supabase_storage_admin;

--
-- Name: delete_leaf_prefixes(text[], text[]); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_leaf_prefixes(bucket_ids text[], names text[]) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    v_rows_deleted integer;
BEGIN
    LOOP
        WITH candidates AS (
            SELECT DISTINCT
                t.bucket_id,
                unnest(storage.get_prefixes(t.name)) AS name
            FROM unnest(bucket_ids, names) AS t(bucket_id, name)
        ),
        uniq AS (
             SELECT
                 bucket_id,
                 name,
                 storage.get_level(name) AS level
             FROM candidates
             WHERE name <> ''
             GROUP BY bucket_id, name
        ),
        leaf AS (
             SELECT
                 p.bucket_id,
                 p.name,
                 p.level
             FROM storage.prefixes AS p
                  JOIN uniq AS u
                       ON u.bucket_id = p.bucket_id
                           AND u.name = p.name
                           AND u.level = p.level
             WHERE NOT EXISTS (
                 SELECT 1
                 FROM storage.objects AS o
                 WHERE o.bucket_id = p.bucket_id
                   AND o.level = p.level + 1
                   AND o.name COLLATE "C" LIKE p.name || '/%'
             )
             AND NOT EXISTS (
                 SELECT 1
                 FROM storage.prefixes AS c
                 WHERE c.bucket_id = p.bucket_id
                   AND c.level = p.level + 1
                   AND c.name COLLATE "C" LIKE p.name || '/%'
             )
        )
        DELETE
        FROM storage.prefixes AS p
            USING leaf AS l
        WHERE p.bucket_id = l.bucket_id
          AND p.name = l.name
          AND p.level = l.level;

        GET DIAGNOSTICS v_rows_deleted = ROW_COUNT;
        EXIT WHEN v_rows_deleted = 0;
    END LOOP;
END;
$$;


ALTER FUNCTION storage.delete_leaf_prefixes(bucket_ids text[], names text[]) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix(_bucket_id text, _name text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
    -- Check if we can delete the prefix
    IF EXISTS(
        SELECT FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name") + 1
          AND "prefixes"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    )
    OR EXISTS(
        SELECT FROM "storage"."objects"
        WHERE "objects"."bucket_id" = "_bucket_id"
          AND "storage"."get_level"("objects"."name") = "storage"."get_level"("_name") + 1
          AND "objects"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    ) THEN
    -- There are sub-objects, skip deletion
    RETURN false;
    ELSE
        DELETE FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name")
          AND "prefixes"."name" = "_name";
        RETURN true;
    END IF;
END;
$$;


ALTER FUNCTION storage.delete_prefix(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix_hierarchy_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix_hierarchy_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    prefix text;
BEGIN
    prefix := "storage"."get_prefix"(OLD."name");

    IF coalesce(prefix, '') != '' THEN
        PERFORM "storage"."delete_prefix"(OLD."bucket_id", prefix);
    END IF;

    RETURN OLD;
END;
$$;


ALTER FUNCTION storage.delete_prefix_hierarchy_trigger() OWNER TO supabase_storage_admin;

--
-- Name: enforce_bucket_name_length(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.enforce_bucket_name_length() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if length(new.name) > 100 then
        raise exception 'bucket name "%" is too long (% characters). Max is 100.', new.name, length(new.name);
    end if;
    return new;
end;
$$;


ALTER FUNCTION storage.enforce_bucket_name_length() OWNER TO supabase_storage_admin;

--
-- Name: extension(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.extension(name text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
    _filename text;
BEGIN
    SELECT string_to_array(name, '/') INTO _parts;
    SELECT _parts[array_length(_parts,1)] INTO _filename;
    RETURN reverse(split_part(reverse(_filename), '.', 1));
END
$$;


ALTER FUNCTION storage.extension(name text) OWNER TO supabase_storage_admin;

--
-- Name: filename(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.filename(name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
_parts text[];
BEGIN
	select string_to_array(name, '/') into _parts;
	return _parts[array_length(_parts,1)];
END
$$;


ALTER FUNCTION storage.filename(name text) OWNER TO supabase_storage_admin;

--
-- Name: foldername(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.foldername(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
BEGIN
    -- Split on "/" to get path segments
    SELECT string_to_array(name, '/') INTO _parts;
    -- Return everything except the last segment
    RETURN _parts[1 : array_length(_parts,1) - 1];
END
$$;


ALTER FUNCTION storage.foldername(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_level(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_level(name text) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
SELECT array_length(string_to_array("name", '/'), 1);
$$;


ALTER FUNCTION storage.get_level(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefix(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefix(name text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT
    CASE WHEN strpos("name", '/') > 0 THEN
             regexp_replace("name", '[\/]{1}[^\/]+\/?$', '')
         ELSE
             ''
        END;
$_$;


ALTER FUNCTION storage.get_prefix(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefixes(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefixes(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    parts text[];
    prefixes text[];
    prefix text;
BEGIN
    -- Split the name into parts by '/'
    parts := string_to_array("name", '/');
    prefixes := '{}';

    -- Construct the prefixes, stopping one level below the last part
    FOR i IN 1..array_length(parts, 1) - 1 LOOP
            prefix := array_to_string(parts[1:i], '/');
            prefixes := array_append(prefixes, prefix);
    END LOOP;

    RETURN prefixes;
END;
$$;


ALTER FUNCTION storage.get_prefixes(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_size_by_bucket(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_size_by_bucket() RETURNS TABLE(size bigint, bucket_id text)
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    return query
        select sum((metadata->>'size')::bigint) as size, obj.bucket_id
        from "storage".objects as obj
        group by obj.bucket_id;
END
$$;


ALTER FUNCTION storage.get_size_by_bucket() OWNER TO supabase_storage_admin;

--
-- Name: list_multipart_uploads_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text) RETURNS TABLE(key text, id text, created_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(key COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))
                    ELSE
                        key
                END AS key, id, created_at
            FROM
                storage.s3_multipart_uploads
            WHERE
                bucket_id = $5 AND
                key ILIKE $1 || ''%'' AND
                CASE
                    WHEN $4 != '''' AND $6 = '''' THEN
                        CASE
                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                key COLLATE "C" > $4
                            END
                    ELSE
                        true
                END AND
                CASE
                    WHEN $6 != '''' THEN
                        id COLLATE "C" > $6
                    ELSE
                        true
                    END
            ORDER BY
                key COLLATE "C" ASC, created_at ASC) as e order by key COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;
END;
$_$;


ALTER FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, next_key_token text, next_upload_token text) OWNER TO supabase_storage_admin;

--
-- Name: list_objects_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text) RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(name COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))
                    ELSE
                        name
                END AS name, id, metadata, updated_at
            FROM
                storage.objects
            WHERE
                bucket_id = $5 AND
                name ILIKE $1 || ''%'' AND
                CASE
                    WHEN $6 != '''' THEN
                    name COLLATE "C" > $6
                ELSE true END
                AND CASE
                    WHEN $4 != '''' THEN
                        CASE
                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                name COLLATE "C" > $4
                            END
                    ELSE
                        true
                END
            ORDER BY
                name COLLATE "C" ASC) as e order by name COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;
END;
$_$;


ALTER FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, start_after text, next_token text) OWNER TO supabase_storage_admin;

--
-- Name: lock_top_prefixes(text[], text[]); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.lock_top_prefixes(bucket_ids text[], names text[]) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    v_bucket text;
    v_top text;
BEGIN
    FOR v_bucket, v_top IN
        SELECT DISTINCT t.bucket_id,
            split_part(t.name, '/', 1) AS top
        FROM unnest(bucket_ids, names) AS t(bucket_id, name)
        WHERE t.name <> ''
        ORDER BY 1, 2
        LOOP
            PERFORM pg_advisory_xact_lock(hashtextextended(v_bucket || '/' || v_top, 0));
        END LOOP;
END;
$$;


ALTER FUNCTION storage.lock_top_prefixes(bucket_ids text[], names text[]) OWNER TO supabase_storage_admin;

--
-- Name: objects_delete_cleanup(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_delete_cleanup() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    v_bucket_ids text[];
    v_names      text[];
BEGIN
    IF current_setting('storage.gc.prefixes', true) = '1' THEN
        RETURN NULL;
    END IF;

    PERFORM set_config('storage.gc.prefixes', '1', true);

    SELECT COALESCE(array_agg(d.bucket_id), '{}'),
           COALESCE(array_agg(d.name), '{}')
    INTO v_bucket_ids, v_names
    FROM deleted AS d
    WHERE d.name <> '';

    PERFORM storage.lock_top_prefixes(v_bucket_ids, v_names);
    PERFORM storage.delete_leaf_prefixes(v_bucket_ids, v_names);

    RETURN NULL;
END;
$$;


ALTER FUNCTION storage.objects_delete_cleanup() OWNER TO supabase_storage_admin;

--
-- Name: objects_insert_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_insert_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    NEW.level := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_insert_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_cleanup(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_cleanup() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    -- NEW - OLD (destinations to create prefixes for)
    v_add_bucket_ids text[];
    v_add_names      text[];

    -- OLD - NEW (sources to prune)
    v_src_bucket_ids text[];
    v_src_names      text[];
BEGIN
    IF TG_OP <> 'UPDATE' THEN
        RETURN NULL;
    END IF;

    -- 1) Compute NEW−OLD (added paths) and OLD−NEW (moved-away paths)
    WITH added AS (
        SELECT n.bucket_id, n.name
        FROM new_rows n
        WHERE n.name <> '' AND position('/' in n.name) > 0
        EXCEPT
        SELECT o.bucket_id, o.name FROM old_rows o WHERE o.name <> ''
    ),
    moved AS (
         SELECT o.bucket_id, o.name
         FROM old_rows o
         WHERE o.name <> ''
         EXCEPT
         SELECT n.bucket_id, n.name FROM new_rows n WHERE n.name <> ''
    )
    SELECT
        -- arrays for ADDED (dest) in stable order
        COALESCE( (SELECT array_agg(a.bucket_id ORDER BY a.bucket_id, a.name) FROM added a), '{}' ),
        COALESCE( (SELECT array_agg(a.name      ORDER BY a.bucket_id, a.name) FROM added a), '{}' ),
        -- arrays for MOVED (src) in stable order
        COALESCE( (SELECT array_agg(m.bucket_id ORDER BY m.bucket_id, m.name) FROM moved m), '{}' ),
        COALESCE( (SELECT array_agg(m.name      ORDER BY m.bucket_id, m.name) FROM moved m), '{}' )
    INTO v_add_bucket_ids, v_add_names, v_src_bucket_ids, v_src_names;

    -- Nothing to do?
    IF (array_length(v_add_bucket_ids, 1) IS NULL) AND (array_length(v_src_bucket_ids, 1) IS NULL) THEN
        RETURN NULL;
    END IF;

    -- 2) Take per-(bucket, top) locks: ALL prefixes in consistent global order to prevent deadlocks
    DECLARE
        v_all_bucket_ids text[];
        v_all_names text[];
    BEGIN
        -- Combine source and destination arrays for consistent lock ordering
        v_all_bucket_ids := COALESCE(v_src_bucket_ids, '{}') || COALESCE(v_add_bucket_ids, '{}');
        v_all_names := COALESCE(v_src_names, '{}') || COALESCE(v_add_names, '{}');

        -- Single lock call ensures consistent global ordering across all transactions
        IF array_length(v_all_bucket_ids, 1) IS NOT NULL THEN
            PERFORM storage.lock_top_prefixes(v_all_bucket_ids, v_all_names);
        END IF;
    END;

    -- 3) Create destination prefixes (NEW−OLD) BEFORE pruning sources
    IF array_length(v_add_bucket_ids, 1) IS NOT NULL THEN
        WITH candidates AS (
            SELECT DISTINCT t.bucket_id, unnest(storage.get_prefixes(t.name)) AS name
            FROM unnest(v_add_bucket_ids, v_add_names) AS t(bucket_id, name)
            WHERE name <> ''
        )
        INSERT INTO storage.prefixes (bucket_id, name)
        SELECT c.bucket_id, c.name
        FROM candidates c
        ON CONFLICT DO NOTHING;
    END IF;

    -- 4) Prune source prefixes bottom-up for OLD−NEW
    IF array_length(v_src_bucket_ids, 1) IS NOT NULL THEN
        -- re-entrancy guard so DELETE on prefixes won't recurse
        IF current_setting('storage.gc.prefixes', true) <> '1' THEN
            PERFORM set_config('storage.gc.prefixes', '1', true);
        END IF;

        PERFORM storage.delete_leaf_prefixes(v_src_bucket_ids, v_src_names);
    END IF;

    RETURN NULL;
END;
$$;


ALTER FUNCTION storage.objects_update_cleanup() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_level_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_level_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Ensure this is an update operation and the name has changed
    IF TG_OP = 'UPDATE' AND (NEW."name" <> OLD."name" OR NEW."bucket_id" <> OLD."bucket_id") THEN
        -- Set the new level
        NEW."level" := "storage"."get_level"(NEW."name");
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_update_level_trigger() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    old_prefixes TEXT[];
BEGIN
    -- Ensure this is an update operation and the name has changed
    IF TG_OP = 'UPDATE' AND (NEW."name" <> OLD."name" OR NEW."bucket_id" <> OLD."bucket_id") THEN
        -- Retrieve old prefixes
        old_prefixes := "storage"."get_prefixes"(OLD."name");

        -- Remove old prefixes that are only used by this object
        WITH all_prefixes as (
            SELECT unnest(old_prefixes) as prefix
        ),
        can_delete_prefixes as (
             SELECT prefix
             FROM all_prefixes
             WHERE NOT EXISTS (
                 SELECT 1 FROM "storage"."objects"
                 WHERE "bucket_id" = OLD."bucket_id"
                   AND "name" <> OLD."name"
                   AND "name" LIKE (prefix || '%')
             )
         )
        DELETE FROM "storage"."prefixes" WHERE name IN (SELECT prefix FROM can_delete_prefixes);

        -- Add new prefixes
        PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    END IF;
    -- Set the new level
    NEW."level" := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_update_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: operation(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.operation() RETURNS text
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    RETURN current_setting('storage.operation', true);
END;
$$;


ALTER FUNCTION storage.operation() OWNER TO supabase_storage_admin;

--
-- Name: prefixes_delete_cleanup(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.prefixes_delete_cleanup() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    v_bucket_ids text[];
    v_names      text[];
BEGIN
    IF current_setting('storage.gc.prefixes', true) = '1' THEN
        RETURN NULL;
    END IF;

    PERFORM set_config('storage.gc.prefixes', '1', true);

    SELECT COALESCE(array_agg(d.bucket_id), '{}'),
           COALESCE(array_agg(d.name), '{}')
    INTO v_bucket_ids, v_names
    FROM deleted AS d
    WHERE d.name <> '';

    PERFORM storage.lock_top_prefixes(v_bucket_ids, v_names);
    PERFORM storage.delete_leaf_prefixes(v_bucket_ids, v_names);

    RETURN NULL;
END;
$$;


ALTER FUNCTION storage.prefixes_delete_cleanup() OWNER TO supabase_storage_admin;

--
-- Name: prefixes_insert_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.prefixes_insert_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.prefixes_insert_trigger() OWNER TO supabase_storage_admin;

--
-- Name: search(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql
    AS $$
declare
    can_bypass_rls BOOLEAN;
begin
    SELECT rolbypassrls
    INTO can_bypass_rls
    FROM pg_roles
    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);

    IF can_bypass_rls THEN
        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    ELSE
        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    END IF;
end;
$$;


ALTER FUNCTION storage.search(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_legacy_v1(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select path_tokens[$1] as folder
           from storage.objects
             where objects.name ilike $2 || $3 || ''%''
               and bucket_id = $4
               and array_length(objects.path_tokens, 1) <> $1
           group by folder
           order by folder ' || v_sort_order || '
     )
     (select folder as "name",
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[$1] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where objects.name ilike $2 || $3 || ''%''
       and bucket_id = $4
       and array_length(objects.path_tokens, 1) = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v1_optimised(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select (string_to_array(name, ''/''))[level] as name
           from storage.prefixes
             where lower(prefixes.name) like lower($2 || $3) || ''%''
               and bucket_id = $4
               and level = $1
           order by name ' || v_sort_order || '
     )
     (select name,
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[level] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where lower(objects.name) like lower($2 || $3) || ''%''
       and bucket_id = $4
       and level = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v2(text, text, integer, integer, text, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text, sort_order text DEFAULT 'asc'::text, sort_column text DEFAULT 'name'::text, sort_column_after text DEFAULT ''::text) RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
DECLARE
    sort_col text;
    sort_ord text;
    cursor_op text;
    cursor_expr text;
    sort_expr text;
BEGIN
    -- Validate sort_order
    sort_ord := lower(sort_order);
    IF sort_ord NOT IN ('asc', 'desc') THEN
        sort_ord := 'asc';
    END IF;

    -- Determine cursor comparison operator
    IF sort_ord = 'asc' THEN
        cursor_op := '>';
    ELSE
        cursor_op := '<';
    END IF;
    
    sort_col := lower(sort_column);
    -- Validate sort column  
    IF sort_col IN ('updated_at', 'created_at') THEN
        cursor_expr := format(
            '($5 = '''' OR ROW(date_trunc(''milliseconds'', %I), name COLLATE "C") %s ROW(COALESCE(NULLIF($6, '''')::timestamptz, ''epoch''::timestamptz), $5))',
            sort_col, cursor_op
        );
        sort_expr := format(
            'COALESCE(date_trunc(''milliseconds'', %I), ''epoch''::timestamptz) %s, name COLLATE "C" %s',
            sort_col, sort_ord, sort_ord
        );
    ELSE
        cursor_expr := format('($5 = '''' OR name COLLATE "C" %s $5)', cursor_op);
        sort_expr := format('name COLLATE "C" %s', sort_ord);
    END IF;

    RETURN QUERY EXECUTE format(
        $sql$
        SELECT * FROM (
            (
                SELECT
                    split_part(name, '/', $4) AS key,
                    name,
                    NULL::uuid AS id,
                    updated_at,
                    created_at,
                    NULL::timestamptz AS last_accessed_at,
                    NULL::jsonb AS metadata
                FROM storage.prefixes
                WHERE name COLLATE "C" LIKE $1 || '%%'
                    AND bucket_id = $2
                    AND level = $4
                    AND %s
                ORDER BY %s
                LIMIT $3
            )
            UNION ALL
            (
                SELECT
                    split_part(name, '/', $4) AS key,
                    name,
                    id,
                    updated_at,
                    created_at,
                    last_accessed_at,
                    metadata
                FROM storage.objects
                WHERE name COLLATE "C" LIKE $1 || '%%'
                    AND bucket_id = $2
                    AND level = $4
                    AND %s
                ORDER BY %s
                LIMIT $3
            )
        ) obj
        ORDER BY %s
        LIMIT $3
        $sql$,
        cursor_expr,    -- prefixes WHERE
        sort_expr,      -- prefixes ORDER BY
        cursor_expr,    -- objects WHERE
        sort_expr,      -- objects ORDER BY
        sort_expr       -- final ORDER BY
    )
    USING prefix, bucket_name, limits, levels, start_after, sort_column_after;
END;
$_$;


ALTER FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer, levels integer, start_after text, sort_order text, sort_column text, sort_column_after text) OWNER TO supabase_storage_admin;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW; 
END;
$$;


ALTER FUNCTION storage.update_updated_at_column() OWNER TO supabase_storage_admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: audit_log_entries; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.audit_log_entries (
    instance_id uuid,
    id uuid NOT NULL,
    payload json,
    created_at timestamp with time zone,
    ip_address character varying(64) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE auth.audit_log_entries OWNER TO supabase_auth_admin;

--
-- Name: TABLE audit_log_entries; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.audit_log_entries IS 'Auth: Audit trail for user actions.';


--
-- Name: flow_state; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.flow_state (
    id uuid NOT NULL,
    user_id uuid,
    auth_code text NOT NULL,
    code_challenge_method auth.code_challenge_method NOT NULL,
    code_challenge text NOT NULL,
    provider_type text NOT NULL,
    provider_access_token text,
    provider_refresh_token text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    authentication_method text NOT NULL,
    auth_code_issued_at timestamp with time zone
);


ALTER TABLE auth.flow_state OWNER TO supabase_auth_admin;

--
-- Name: TABLE flow_state; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.flow_state IS 'stores metadata for pkce logins';


--
-- Name: identities; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.identities (
    provider_id text NOT NULL,
    user_id uuid NOT NULL,
    identity_data jsonb NOT NULL,
    provider text NOT NULL,
    last_sign_in_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    email text GENERATED ALWAYS AS (lower((identity_data ->> 'email'::text))) STORED,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE auth.identities OWNER TO supabase_auth_admin;

--
-- Name: TABLE identities; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.identities IS 'Auth: Stores identities associated to a user.';


--
-- Name: COLUMN identities.email; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.identities.email IS 'Auth: Email is a generated column that references the optional email property in the identity_data';


--
-- Name: instances; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.instances (
    id uuid NOT NULL,
    uuid uuid,
    raw_base_config text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE auth.instances OWNER TO supabase_auth_admin;

--
-- Name: TABLE instances; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.instances IS 'Auth: Manages users across multiple sites.';


--
-- Name: mfa_amr_claims; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_amr_claims (
    session_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    authentication_method text NOT NULL,
    id uuid NOT NULL
);


ALTER TABLE auth.mfa_amr_claims OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_amr_claims; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_amr_claims IS 'auth: stores authenticator method reference claims for multi factor authentication';


--
-- Name: mfa_challenges; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_challenges (
    id uuid NOT NULL,
    factor_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    verified_at timestamp with time zone,
    ip_address inet NOT NULL,
    otp_code text,
    web_authn_session_data jsonb
);


ALTER TABLE auth.mfa_challenges OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_challenges; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_challenges IS 'auth: stores metadata about challenge requests made';


--
-- Name: mfa_factors; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_factors (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    friendly_name text,
    factor_type auth.factor_type NOT NULL,
    status auth.factor_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    secret text,
    phone text,
    last_challenged_at timestamp with time zone,
    web_authn_credential jsonb,
    web_authn_aaguid uuid
);


ALTER TABLE auth.mfa_factors OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_factors; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_factors IS 'auth: stores metadata about factors';


--
-- Name: oauth_clients; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.oauth_clients (
    id uuid NOT NULL,
    client_id text NOT NULL,
    client_secret_hash text NOT NULL,
    registration_type auth.oauth_registration_type NOT NULL,
    redirect_uris text NOT NULL,
    grant_types text NOT NULL,
    client_name text,
    client_uri text,
    logo_uri text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    CONSTRAINT oauth_clients_client_name_length CHECK ((char_length(client_name) <= 1024)),
    CONSTRAINT oauth_clients_client_uri_length CHECK ((char_length(client_uri) <= 2048)),
    CONSTRAINT oauth_clients_logo_uri_length CHECK ((char_length(logo_uri) <= 2048))
);


ALTER TABLE auth.oauth_clients OWNER TO supabase_auth_admin;

--
-- Name: one_time_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.one_time_tokens (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    token_type auth.one_time_token_type NOT NULL,
    token_hash text NOT NULL,
    relates_to text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT one_time_tokens_token_hash_check CHECK ((char_length(token_hash) > 0))
);


ALTER TABLE auth.one_time_tokens OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.refresh_tokens (
    instance_id uuid,
    id bigint NOT NULL,
    token character varying(255),
    user_id character varying(255),
    revoked boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    parent character varying(255),
    session_id uuid
);


ALTER TABLE auth.refresh_tokens OWNER TO supabase_auth_admin;

--
-- Name: TABLE refresh_tokens; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.refresh_tokens IS 'Auth: Store of tokens used to refresh JWT tokens once they expire.';


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE; Schema: auth; Owner: supabase_auth_admin
--

CREATE SEQUENCE auth.refresh_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE auth.refresh_tokens_id_seq OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: auth; Owner: supabase_auth_admin
--

ALTER SEQUENCE auth.refresh_tokens_id_seq OWNED BY auth.refresh_tokens.id;


--
-- Name: saml_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_providers (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    entity_id text NOT NULL,
    metadata_xml text NOT NULL,
    metadata_url text,
    attribute_mapping jsonb,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name_id_format text,
    CONSTRAINT "entity_id not empty" CHECK ((char_length(entity_id) > 0)),
    CONSTRAINT "metadata_url not empty" CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0))),
    CONSTRAINT "metadata_xml not empty" CHECK ((char_length(metadata_xml) > 0))
);


ALTER TABLE auth.saml_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_providers IS 'Auth: Manages SAML Identity Provider connections.';


--
-- Name: saml_relay_states; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_relay_states (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    request_id text NOT NULL,
    for_email text,
    redirect_to text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    flow_state_id uuid,
    CONSTRAINT "request_id not empty" CHECK ((char_length(request_id) > 0))
);


ALTER TABLE auth.saml_relay_states OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_relay_states; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_relay_states IS 'Auth: Contains SAML Relay State information for each Service Provider initiated login.';


--
-- Name: schema_migrations; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE auth.schema_migrations OWNER TO supabase_auth_admin;

--
-- Name: TABLE schema_migrations; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.schema_migrations IS 'Auth: Manages updates to the auth system.';


--
-- Name: sessions; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sessions (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    factor_id uuid,
    aal auth.aal_level,
    not_after timestamp with time zone,
    refreshed_at timestamp without time zone,
    user_agent text,
    ip inet,
    tag text
);


ALTER TABLE auth.sessions OWNER TO supabase_auth_admin;

--
-- Name: TABLE sessions; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sessions IS 'Auth: Stores session data associated to a user.';


--
-- Name: COLUMN sessions.not_after; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sessions.not_after IS 'Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.';


--
-- Name: sso_domains; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_domains (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    domain text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT "domain not empty" CHECK ((char_length(domain) > 0))
);


ALTER TABLE auth.sso_domains OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_domains; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_domains IS 'Auth: Manages SSO email address domain mapping to an SSO Identity Provider.';


--
-- Name: sso_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_providers (
    id uuid NOT NULL,
    resource_id text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    disabled boolean,
    CONSTRAINT "resource_id not empty" CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))
);


ALTER TABLE auth.sso_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_providers IS 'Auth: Manages SSO identity provider information; see saml_providers for SAML.';


--
-- Name: COLUMN sso_providers.resource_id; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sso_providers.resource_id IS 'Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.';


--
-- Name: users; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.users (
    instance_id uuid,
    id uuid NOT NULL,
    aud character varying(255),
    role character varying(255),
    email character varying(255),
    encrypted_password character varying(255),
    email_confirmed_at timestamp with time zone,
    invited_at timestamp with time zone,
    confirmation_token character varying(255),
    confirmation_sent_at timestamp with time zone,
    recovery_token character varying(255),
    recovery_sent_at timestamp with time zone,
    email_change_token_new character varying(255),
    email_change character varying(255),
    email_change_sent_at timestamp with time zone,
    last_sign_in_at timestamp with time zone,
    raw_app_meta_data jsonb,
    raw_user_meta_data jsonb,
    is_super_admin boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    phone text DEFAULT NULL::character varying,
    phone_confirmed_at timestamp with time zone,
    phone_change text DEFAULT ''::character varying,
    phone_change_token character varying(255) DEFAULT ''::character varying,
    phone_change_sent_at timestamp with time zone,
    confirmed_at timestamp with time zone GENERATED ALWAYS AS (LEAST(email_confirmed_at, phone_confirmed_at)) STORED,
    email_change_token_current character varying(255) DEFAULT ''::character varying,
    email_change_confirm_status smallint DEFAULT 0,
    banned_until timestamp with time zone,
    reauthentication_token character varying(255) DEFAULT ''::character varying,
    reauthentication_sent_at timestamp with time zone,
    is_sso_user boolean DEFAULT false NOT NULL,
    deleted_at timestamp with time zone,
    is_anonymous boolean DEFAULT false NOT NULL,
    CONSTRAINT users_email_change_confirm_status_check CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))
);


ALTER TABLE auth.users OWNER TO supabase_auth_admin;

--
-- Name: TABLE users; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.users IS 'Auth: Stores user login data within a secure schema.';


--
-- Name: COLUMN users.is_sso_user; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.users.is_sso_user IS 'Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.';


--
-- Name: events_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.events_id_seq OWNER TO postgres;

--
-- Name: events; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.events (
    id integer DEFAULT nextval('public.events_id_seq'::regclass) NOT NULL,
    trip_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    "time" text NOT NULL,
    title text NOT NULL,
    type text NOT NULL,
    venue text NOT NULL,
    talent_ids jsonb,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    party_theme_id integer,
    CONSTRAINT events_type_check CHECK ((type = ANY (ARRAY['party'::text, 'show'::text, 'dining'::text, 'lounge'::text, 'fun'::text, 'club'::text, 'after'::text, 'social'::text])))
);


ALTER TABLE public.events OWNER TO postgres;

--
-- Name: ships; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ships (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    cruise_line character varying(255) NOT NULL,
    capacity integer,
    decks integer,
    image_url text,
    description text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    deck_plans_url text
);


ALTER TABLE public.ships OWNER TO postgres;

--
-- Name: talent_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.talent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.talent_id_seq OWNER TO postgres;

--
-- Name: talent; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.talent (
    id integer DEFAULT nextval('public.talent_id_seq'::regclass) NOT NULL,
    name text NOT NULL,
    bio text,
    known_for text,
    profile_image_url text,
    social_links jsonb,
    website text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    talent_category_id integer NOT NULL
);


ALTER TABLE public.talent OWNER TO postgres;

--
-- Name: talent_categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.talent_categories (
    id integer NOT NULL,
    category character varying(100) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.talent_categories OWNER TO postgres;

--
-- Name: trips_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.trips_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.trips_id_seq OWNER TO postgres;

--
-- Name: trips; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trips (
    id integer DEFAULT nextval('public.trips_id_seq'::regclass) NOT NULL,
    name text NOT NULL,
    slug character varying(255) NOT NULL,
    ship_name text NOT NULL,
    cruise_line text,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL,
    status text DEFAULT 'upcoming'::text,
    hero_image_url text,
    description text,
    highlights jsonb,
    includes_info jsonb,
    pricing jsonb,
    created_by character varying,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    ship_id integer,
    trip_type_id integer NOT NULL,
    trip_status_id integer NOT NULL,
    resort_id integer,
    charter_company_id integer,
    CONSTRAINT cruises_status_check CHECK ((status = ANY (ARRAY['upcoming'::text, 'ongoing'::text, 'past'::text]))),
    CONSTRAINT trips_property_check CHECK ((((ship_id IS NOT NULL) AND (resort_id IS NULL)) OR ((ship_id IS NULL) AND (resort_id IS NOT NULL))))
);


ALTER TABLE public.trips OWNER TO postgres;

--
-- Name: admin_dashboard_stats; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.admin_dashboard_stats AS
 SELECT 'cruises'::text AS entity_type,
    count(*) AS total_count,
    count(*) FILTER (WHERE (trips.status = 'upcoming'::text)) AS metric_1,
    count(*) FILTER (WHERE (trips.status = 'ongoing'::text)) AS metric_2,
    count(*) FILTER (WHERE (trips.status = 'past'::text)) AS metric_3
   FROM public.trips
UNION ALL
 SELECT 'events'::text AS entity_type,
    count(*) AS total_count,
    count(*) FILTER (WHERE (events.type = 'party'::text)) AS metric_1,
    count(*) FILTER (WHERE (events.type = 'show'::text)) AS metric_2,
    count(*) FILTER (WHERE (events.date >= (CURRENT_DATE - '30 days'::interval))) AS metric_3
   FROM public.events
UNION ALL
 SELECT 'talent'::text AS entity_type,
    count(*) AS total_count,
    count(*) FILTER (WHERE ((tc.category)::text = 'Drag & Variety'::text)) AS metric_1,
    count(*) FILTER (WHERE ((tc.category)::text = 'Headliners'::text)) AS metric_2,
    count(*) FILTER (WHERE ((tc.category)::text = 'Vocalists'::text)) AS metric_3
   FROM (public.talent t
     LEFT JOIN public.talent_categories tc ON ((t.talent_category_id = tc.id)))
UNION ALL
 SELECT 'ships'::text AS entity_type,
    count(*) AS total_count,
    count(*) FILTER (WHERE ((ships.cruise_line)::text = 'Virgin Voyages'::text)) AS metric_1,
    count(*) FILTER (WHERE ((ships.cruise_line)::text = 'Celebrity'::text)) AS metric_2,
    count(*) FILTER (WHERE ((ships.cruise_line IS NOT NULL) AND ((ships.cruise_line)::text <> ALL (ARRAY[('Virgin Voyages'::character varying)::text, ('Celebrity'::character varying)::text])))) AS metric_3
   FROM public.ships;


ALTER VIEW public.admin_dashboard_stats OWNER TO postgres;

--
-- Name: amenities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.amenities (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    description text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.amenities OWNER TO postgres;

--
-- Name: amenities_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.amenities_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.amenities_id_seq OWNER TO postgres;

--
-- Name: amenities_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.amenities_id_seq OWNED BY public.amenities.id;


--
-- Name: charter_companies; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.charter_companies (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.charter_companies OWNER TO postgres;

--
-- Name: charter_companies_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.charter_companies_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.charter_companies_id_seq OWNER TO postgres;

--
-- Name: charter_companies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.charter_companies_id_seq OWNED BY public.charter_companies.id;


--
-- Name: event_talent_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.event_talent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.event_talent_id_seq OWNER TO postgres;

--
-- Name: invitations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invitations (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    email text NOT NULL,
    role text NOT NULL,
    invited_by uuid NOT NULL,
    trip_id integer,
    metadata jsonb,
    token_hash text NOT NULL,
    salt text NOT NULL,
    expires_at timestamp with time zone NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    used boolean DEFAULT false,
    used_at timestamp with time zone,
    used_by uuid
);


ALTER TABLE public.invitations OWNER TO postgres;

--
-- Name: TABLE invitations; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.invitations IS 'Secure invitation system for user onboarding';


--
-- Name: COLUMN invitations.id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.id IS 'Unique invitation identifier';


--
-- Name: COLUMN invitations.email; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.email IS 'Email address of the invitee';


--
-- Name: COLUMN invitations.role; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.role IS 'Role to be assigned to the user upon acceptance';


--
-- Name: COLUMN invitations.invited_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.invited_by IS 'ID of the user who created the invitation';


--
-- Name: COLUMN invitations.trip_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.trip_id IS 'Optional cruise-specific invitation';


--
-- Name: COLUMN invitations.metadata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.metadata IS 'Additional invitation data (JSON)';


--
-- Name: COLUMN invitations.token_hash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.token_hash IS 'SHA-256 hash of the invitation token';


--
-- Name: COLUMN invitations.salt; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.salt IS 'Salt used for token hashing';


--
-- Name: COLUMN invitations.expires_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.expires_at IS 'When the invitation expires';


--
-- Name: COLUMN invitations.created_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.created_at IS 'When the invitation was created';


--
-- Name: COLUMN invitations.used; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.used IS 'Whether the invitation has been accepted';


--
-- Name: COLUMN invitations.used_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.used_at IS 'When the invitation was accepted';


--
-- Name: COLUMN invitations.used_by; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.invitations.used_by IS 'ID of the user who accepted the invitation';


--
-- Name: itinerary_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.itinerary_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.itinerary_id_seq OWNER TO postgres;

--
-- Name: itinerary; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.itinerary (
    id integer DEFAULT nextval('public.itinerary_id_seq'::regclass) NOT NULL,
    trip_id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    day integer NOT NULL,
    location_name text NOT NULL,
    arrival_time text,
    departure_time text,
    all_aboard_time text,
    location_image_url text,
    description text,
    highlights jsonb,
    order_index integer NOT NULL,
    segment text DEFAULT 'main'::text,
    location_id integer,
    location_type_id integer NOT NULL
);


ALTER TABLE public.itinerary OWNER TO postgres;

--
-- Name: location_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.location_types (
    id integer NOT NULL,
    type character varying(50) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.location_types OWNER TO postgres;

--
-- Name: location_types_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.location_types_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.location_types_id_seq OWNER TO postgres;

--
-- Name: location_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.location_types_id_seq OWNED BY public.location_types.id;


--
-- Name: locations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.locations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.locations_id_seq OWNER TO postgres;

--
-- Name: locations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.locations (
    id integer DEFAULT nextval('public.locations_id_seq'::regclass) NOT NULL,
    name character varying(255) NOT NULL,
    country character varying(100) NOT NULL,
    description text,
    image_url text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    city character varying,
    state_province character varying,
    country_code character varying(2),
    location character varying(255)
);


ALTER TABLE public.locations OWNER TO postgres;

--
-- Name: TABLE locations; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.locations IS 'Primary table for storing all location data (ports, destinations, etc). Replaces the obsolete ports view.';


--
-- Name: parties_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.parties_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.parties_id_seq OWNER TO postgres;

--
-- Name: party_themes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.party_themes (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    long_description text,
    short_description text,
    costume_ideas text,
    image_url text,
    amazon_shopping_list_url text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.party_themes OWNER TO postgres;

--
-- Name: party_themes_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.party_themes_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.party_themes_id_seq OWNER TO postgres;

--
-- Name: party_themes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.party_themes_id_seq OWNED BY public.party_themes.id;


--
-- Name: profiles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.profiles (
    id uuid NOT NULL,
    email text NOT NULL,
    username text,
    avatar_url text,
    role text DEFAULT 'user'::text,
    bio text,
    website text,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    phone_number text,
    communication_preferences jsonb,
    trip_updates_opt_in boolean DEFAULT false,
    marketing_emails boolean DEFAULT false,
    last_sign_in_at timestamp without time zone,
    account_status text DEFAULT 'active'::text,
    is_active boolean DEFAULT true,
    name jsonb,
    social_links jsonb,
    location_text character varying(255),
    city character varying(100),
    state_province character varying(100),
    country character varying(100),
    country_code character varying(2),
    CONSTRAINT valid_role CHECK (((role IS NULL) OR (role = ANY (ARRAY['user'::text, 'viewer'::text, 'content_manager'::text, 'admin'::text, 'super_admin'::text]))))
);


ALTER TABLE public.profiles OWNER TO postgres;

--
-- Name: COLUMN profiles.bio; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.bio IS 'User bio/description';


--
-- Name: COLUMN profiles.phone_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.phone_number IS 'User phone number for notifications';


--
-- Name: COLUMN profiles.communication_preferences; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.communication_preferences IS 'Communication preferences: {"email": true, "sms": false}';


--
-- Name: COLUMN profiles.trip_updates_opt_in; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.trip_updates_opt_in IS 'Whether the user has opted in to receive trip-related updates';


--
-- Name: COLUMN profiles.marketing_emails; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.marketing_emails IS 'Whether user wants marketing emails';


--
-- Name: COLUMN profiles.last_sign_in_at; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.last_sign_in_at IS 'Last successful sign-in timestamp';


--
-- Name: resort_amenities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resort_amenities (
    resort_id integer NOT NULL,
    amenity_id integer NOT NULL
);


ALTER TABLE public.resort_amenities OWNER TO postgres;

--
-- Name: resort_venues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resort_venues (
    resort_id integer NOT NULL,
    venue_id integer NOT NULL
);


ALTER TABLE public.resort_venues OWNER TO postgres;

--
-- Name: resorts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resorts (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    location character varying(255) NOT NULL,
    capacity integer,
    room_count integer,
    image_url text,
    description text,
    property_map_url text,
    check_in_time text,
    check_out_time text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    city character varying,
    state_province character varying,
    country character varying,
    country_code character varying(2)
);


ALTER TABLE public.resorts OWNER TO postgres;

--
-- Name: resorts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.resorts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.resorts_id_seq OWNER TO postgres;

--
-- Name: resorts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.resorts_id_seq OWNED BY public.resorts.id;


--
-- Name: security_audit_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.security_audit_log (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    user_id uuid,
    action text NOT NULL,
    table_name text,
    record_id text,
    old_data jsonb,
    new_data jsonb,
    ip_address inet,
    user_agent text,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.security_audit_log OWNER TO postgres;

--
-- Name: ship_amenities; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ship_amenities (
    ship_id integer NOT NULL,
    amenity_id integer NOT NULL
);


ALTER TABLE public.ship_amenities OWNER TO postgres;

--
-- Name: ship_venues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ship_venues (
    ship_id integer NOT NULL,
    venue_id integer NOT NULL
);


ALTER TABLE public.ship_venues OWNER TO postgres;

--
-- Name: ships_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ships_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.ships_id_seq OWNER TO postgres;

--
-- Name: ships_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ships_id_seq OWNED BY public.ships.id;


--
-- Name: talent_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.talent_categories_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.talent_categories_id_seq OWNER TO postgres;

--
-- Name: talent_categories_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.talent_categories_id_seq OWNED BY public.talent_categories.id;


--
-- Name: trip_info_sections_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.trip_info_sections_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.trip_info_sections_id_seq OWNER TO postgres;

--
-- Name: trip_info_sections; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trip_info_sections (
    id integer DEFAULT nextval('public.trip_info_sections_id_seq'::regclass) NOT NULL,
    trip_id integer,
    title text NOT NULL,
    content text,
    updated_by character varying,
    updated_at timestamp without time zone DEFAULT now(),
    section_type character varying(20) DEFAULT 'trip_specific'::character varying,
    CONSTRAINT trip_info_sections_section_type_check CHECK (((section_type)::text = ANY ((ARRAY['general'::character varying, 'trip_specific'::character varying])::text[])))
);


ALTER TABLE public.trip_info_sections OWNER TO postgres;

--
-- Name: COLUMN trip_info_sections.section_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.trip_info_sections.section_type IS 'Type of section: general (reusable across trips) or trip_specific (tied to one trip). Added during Phase 1 of redesign.';


--
-- Name: trip_section_assignments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trip_section_assignments (
    id integer NOT NULL,
    trip_id integer NOT NULL,
    section_id integer NOT NULL,
    order_index integer NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.trip_section_assignments OWNER TO postgres;

--
-- Name: TABLE trip_section_assignments; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.trip_section_assignments IS 'Junction table for many-to-many relationship between trips and info sections. Created during Phase 1 of trip info sections redesign.';


--
-- Name: trip_section_assignments_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.trip_section_assignments_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.trip_section_assignments_id_seq OWNER TO postgres;

--
-- Name: trip_section_assignments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.trip_section_assignments_id_seq OWNED BY public.trip_section_assignments.id;


--
-- Name: trip_status; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trip_status (
    id integer NOT NULL,
    status character varying(50) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.trip_status OWNER TO postgres;

--
-- Name: trip_status_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.trip_status_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.trip_status_id_seq OWNER TO postgres;

--
-- Name: trip_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.trip_status_id_seq OWNED BY public.trip_status.id;


--
-- Name: trip_talent; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trip_talent (
    trip_id integer NOT NULL,
    talent_id integer NOT NULL,
    role text,
    performance_count integer,
    notes text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.trip_talent OWNER TO postgres;

--
-- Name: trip_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.trip_types (
    id integer NOT NULL,
    trip_type character varying(50) NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.trip_types OWNER TO postgres;

--
-- Name: trip_types_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.trip_types_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.trip_types_id_seq OWNER TO postgres;

--
-- Name: trip_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.trip_types_id_seq OWNED BY public.trip_types.id;


--
-- Name: venue_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.venue_types (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.venue_types OWNER TO postgres;

--
-- Name: venue_types_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.venue_types_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.venue_types_id_seq OWNER TO postgres;

--
-- Name: venue_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.venue_types_id_seq OWNED BY public.venue_types.id;


--
-- Name: venues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.venues (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    venue_type_id integer NOT NULL,
    description text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.venues OWNER TO postgres;

--
-- Name: venues_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.venues_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.venues_id_seq OWNER TO postgres;

--
-- Name: venues_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.venues_id_seq OWNED BY public.venues.id;


--
-- Name: messages; Type: TABLE; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE TABLE realtime.messages (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
)
PARTITION BY RANGE (inserted_at);


ALTER TABLE realtime.messages OWNER TO supabase_realtime_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.schema_migrations (
    version bigint NOT NULL,
    inserted_at timestamp(0) without time zone
);


ALTER TABLE realtime.schema_migrations OWNER TO supabase_admin;

--
-- Name: subscription; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.subscription (
    id bigint NOT NULL,
    subscription_id uuid NOT NULL,
    entity regclass NOT NULL,
    filters realtime.user_defined_filter[] DEFAULT '{}'::realtime.user_defined_filter[] NOT NULL,
    claims jsonb NOT NULL,
    claims_role regrole GENERATED ALWAYS AS (realtime.to_regrole((claims ->> 'role'::text))) STORED NOT NULL,
    created_at timestamp without time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


ALTER TABLE realtime.subscription OWNER TO supabase_admin;

--
-- Name: subscription_id_seq; Type: SEQUENCE; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE realtime.subscription ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME realtime.subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: buckets; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets (
    id text NOT NULL,
    name text NOT NULL,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    public boolean DEFAULT false,
    avif_autodetection boolean DEFAULT false,
    file_size_limit bigint,
    allowed_mime_types text[],
    owner_id text,
    type storage.buckettype DEFAULT 'STANDARD'::storage.buckettype NOT NULL
);


ALTER TABLE storage.buckets OWNER TO supabase_storage_admin;

--
-- Name: COLUMN buckets.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.buckets.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: buckets_analytics; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets_analytics (
    id text NOT NULL,
    type storage.buckettype DEFAULT 'ANALYTICS'::storage.buckettype NOT NULL,
    format text DEFAULT 'ICEBERG'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.buckets_analytics OWNER TO supabase_storage_admin;

--
-- Name: migrations; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.migrations (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    hash character varying(40) NOT NULL,
    executed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE storage.migrations OWNER TO supabase_storage_admin;

--
-- Name: objects; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.objects (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    bucket_id text,
    name text,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    last_accessed_at timestamp with time zone DEFAULT now(),
    metadata jsonb,
    path_tokens text[] GENERATED ALWAYS AS (string_to_array(name, '/'::text)) STORED,
    version text,
    owner_id text,
    user_metadata jsonb,
    level integer
);


ALTER TABLE storage.objects OWNER TO supabase_storage_admin;

--
-- Name: COLUMN objects.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.objects.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: prefixes; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.prefixes (
    bucket_id text NOT NULL,
    name text NOT NULL COLLATE pg_catalog."C",
    level integer GENERATED ALWAYS AS (storage.get_level(name)) STORED NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);


ALTER TABLE storage.prefixes OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads (
    id text NOT NULL,
    in_progress_size bigint DEFAULT 0 NOT NULL,
    upload_signature text NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    version text NOT NULL,
    owner_id text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    user_metadata jsonb
);


ALTER TABLE storage.s3_multipart_uploads OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads_parts; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads_parts (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    upload_id text NOT NULL,
    size bigint DEFAULT 0 NOT NULL,
    part_number integer NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    etag text NOT NULL,
    owner_id text,
    version text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.s3_multipart_uploads_parts OWNER TO supabase_storage_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: supabase_migrations; Owner: postgres
--

CREATE TABLE supabase_migrations.schema_migrations (
    version text NOT NULL,
    statements text[],
    name text,
    created_by text,
    idempotency_key text
);


ALTER TABLE supabase_migrations.schema_migrations OWNER TO postgres;

--
-- Name: refresh_tokens id; Type: DEFAULT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens ALTER COLUMN id SET DEFAULT nextval('auth.refresh_tokens_id_seq'::regclass);


--
-- Name: amenities id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.amenities ALTER COLUMN id SET DEFAULT nextval('public.amenities_id_seq'::regclass);


--
-- Name: charter_companies id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.charter_companies ALTER COLUMN id SET DEFAULT nextval('public.charter_companies_id_seq'::regclass);


--
-- Name: location_types id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location_types ALTER COLUMN id SET DEFAULT nextval('public.location_types_id_seq'::regclass);


--
-- Name: party_themes id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.party_themes ALTER COLUMN id SET DEFAULT nextval('public.party_themes_id_seq'::regclass);


--
-- Name: resorts id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resorts ALTER COLUMN id SET DEFAULT nextval('public.resorts_id_seq'::regclass);


--
-- Name: ships id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ships ALTER COLUMN id SET DEFAULT nextval('public.ships_id_seq'::regclass);


--
-- Name: talent_categories id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.talent_categories ALTER COLUMN id SET DEFAULT nextval('public.talent_categories_id_seq'::regclass);


--
-- Name: trip_section_assignments id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_section_assignments ALTER COLUMN id SET DEFAULT nextval('public.trip_section_assignments_id_seq'::regclass);


--
-- Name: trip_status id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_status ALTER COLUMN id SET DEFAULT nextval('public.trip_status_id_seq'::regclass);


--
-- Name: trip_types id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_types ALTER COLUMN id SET DEFAULT nextval('public.trip_types_id_seq'::regclass);


--
-- Name: venue_types id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venue_types ALTER COLUMN id SET DEFAULT nextval('public.venue_types_id_seq'::regclass);


--
-- Name: venues id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venues ALTER COLUMN id SET DEFAULT nextval('public.venues_id_seq'::regclass);


--
-- Data for Name: audit_log_entries; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.audit_log_entries (instance_id, id, payload, created_at, ip_address) FROM stdin;
00000000-0000-0000-0000-000000000000	d034365a-3e94-45eb-8c4b-f08dbd8925a5	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"admin@kgay.com","user_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","user_phone":""}}	2025-09-16 03:40:55.473485+00	
00000000-0000-0000-0000-000000000000	2615c55c-ca54-48a0-8f84-16c3d42d2d4d	{"action":"login","actor_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","actor_username":"admin@kgay.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 03:44:17.12768+00	
00000000-0000-0000-0000-000000000000	03f84bff-815a-41c8-bc87-1c46841647db	{"action":"login","actor_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","actor_username":"admin@kgay.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 03:44:20.348726+00	
00000000-0000-0000-0000-000000000000	b3dcbf9b-1028-42db-8c6c-585a9fa0025e	{"action":"login","actor_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","actor_username":"admin@kgay.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 03:44:21.279504+00	
00000000-0000-0000-0000-000000000000	b26b488a-9e16-4be4-8603-75247468a73e	{"action":"login","actor_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","actor_username":"admin@kgay.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 03:44:34.93581+00	
00000000-0000-0000-0000-000000000000	8cb8732c-b4dd-4caa-a2be-da788a0e4c71	{"action":"login","actor_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","actor_username":"admin@kgay.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 03:48:14.035862+00	
00000000-0000-0000-0000-000000000000	319e0f67-0ea9-4e53-89b3-a75ae2adf75a	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-16 04:06:16.987739+00	
00000000-0000-0000-0000-000000000000	663290dd-92af-470a-82ba-041aaf164031	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:07:37.098759+00	
00000000-0000-0000-0000-000000000000	b1c03c86-90b6-4501-bfc9-f6b198a86e74	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:09:16.684695+00	
00000000-0000-0000-0000-000000000000	32d08535-f4d6-41ec-89cd-310839f2dcf3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:10:31.132246+00	
00000000-0000-0000-0000-000000000000	4174d07b-0643-4ad7-8978-d3fd0a4f25a0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:12:07.832709+00	
00000000-0000-0000-0000-000000000000	a3af3a84-c62e-4729-ba87-12c864cbcb81	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:13:28.336241+00	
00000000-0000-0000-0000-000000000000	baca37bb-4a62-4c5d-a653-ad2cb4765dfc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:16:36.755738+00	
00000000-0000-0000-0000-000000000000	9961b100-0ba6-489b-a4bf-0ebe60e0e35f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:21:28.662594+00	
00000000-0000-0000-0000-000000000000	1fe01694-6556-4a81-908e-bf07906e604b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:22:15.750467+00	
00000000-0000-0000-0000-000000000000	03104103-f6ff-49b7-8d3d-9bb4f424edd0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:22:47.603025+00	
00000000-0000-0000-0000-000000000000	e9d7b924-de37-4020-9629-d4e86e1b545b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:26:45.959427+00	
00000000-0000-0000-0000-000000000000	2a2373e1-fbc7-4759-8511-99062c80b9b9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:27:45.57743+00	
00000000-0000-0000-0000-000000000000	eae25762-db4e-41ec-b673-bc98aa8e9335	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:27:57.13384+00	
00000000-0000-0000-0000-000000000000	fac895ce-5608-491d-97c4-6b3da6aaa948	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:30:09.49512+00	
00000000-0000-0000-0000-000000000000	b5006db7-a2e0-4705-b37e-a5f2a3917c9c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:30:34.432416+00	
00000000-0000-0000-0000-000000000000	d499efbf-7f91-4941-b58a-56804d707f41	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:31:11.603849+00	
00000000-0000-0000-0000-000000000000	9a946787-6294-443f-a489-f95e2320c3cf	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-16 04:31:13.969457+00	
00000000-0000-0000-0000-000000000000	15b2e189-7249-4efc-97e5-9a4cb5a843dc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 04:31:16.643142+00	
00000000-0000-0000-0000-000000000000	f06f0ce6-4861-41ed-ab9b-d4e7ad67645b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 05:08:10.696496+00	
00000000-0000-0000-0000-000000000000	a94d4749-1fa3-4579-b396-77e97c65c6de	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-16 05:08:15.841364+00	
00000000-0000-0000-0000-000000000000	445f5d40-dee3-442b-a840-18600ecd5c06	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 05:08:18.4314+00	
00000000-0000-0000-0000-000000000000	46fcdc35-6b4c-4411-ab9b-95dadbd94f11	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 11:52:26.993684+00	
00000000-0000-0000-0000-000000000000	479dcc5a-cc14-4792-9d2f-844c3c0d1cf0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 11:57:26.290592+00	
00000000-0000-0000-0000-000000000000	d0e26e6b-10a9-43b6-9c7a-b4ae9686957a	{"action":"user_repeated_signup","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-16 12:20:30.322426+00	
00000000-0000-0000-0000-000000000000	8d91a43c-cd51-4204-9e1d-d4455a2e40d0	{"action":"user_repeated_signup","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-16 12:20:32.454293+00	
00000000-0000-0000-0000-000000000000	bfd03a19-42c2-4971-8170-54b56b8d2625	{"action":"user_repeated_signup","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-16 12:20:39.731399+00	
00000000-0000-0000-0000-000000000000	60f8e30f-d482-4423-9c67-1e729134659f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:30:43.486134+00	
00000000-0000-0000-0000-000000000000	b05a9b1f-12f7-4857-9861-cf93cf728d2f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:31:02.729808+00	
00000000-0000-0000-0000-000000000000	e5aef4c0-5280-42f8-9c8a-45f52c393796	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"test@example.com","user_id":"5850e09f-9f27-4ab0-b150-3ae6531adb83","user_phone":""}}	2025-09-16 12:38:15.825798+00	
00000000-0000-0000-0000-000000000000	830df3cf-2db0-4b5e-b16f-e5edcf20ee87	{"action":"login","actor_id":"5850e09f-9f27-4ab0-b150-3ae6531adb83","actor_username":"test@example.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:38:30.733179+00	
00000000-0000-0000-0000-000000000000	e0986424-7274-40f4-bd18-0f71013b7ad2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:44:25.564052+00	
00000000-0000-0000-0000-000000000000	bd778be0-8ba4-4d91-9950-34a3f45da4d3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:57:02.31394+00	
00000000-0000-0000-0000-000000000000	06f002c0-df22-42c7-892b-2f178ffdc6c6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 12:59:14.008763+00	
00000000-0000-0000-0000-000000000000	a5fab66f-939a-44fd-a0a0-208cba6d5f98	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 13:01:19.702154+00	
00000000-0000-0000-0000-000000000000	c19eac51-e858-4b0d-86b3-c2eef700ac44	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 13:29:45.615095+00	
00000000-0000-0000-0000-000000000000	365816a2-f2af-4488-a4c2-783dfe4ef46a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-16 23:42:33.311215+00	
00000000-0000-0000-0000-000000000000	68aadf05-1cdd-4675-a8a9-edf5a40db078	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-16 23:42:33.312637+00	
00000000-0000-0000-0000-000000000000	539b5e4e-b839-493d-8737-b58ad01382ad	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-16 23:42:37.914844+00	
00000000-0000-0000-0000-000000000000	d5268349-6d1d-4873-b108-64353bbc7f52	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 00:47:00.384434+00	
00000000-0000-0000-0000-000000000000	f0e7b7f3-35af-4bf7-809b-6a7aaa65a15e	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 00:47:00.385603+00	
00000000-0000-0000-0000-000000000000	cef67cc7-946f-4cc5-bf0d-4f7849fa6400	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 02:29:15.055594+00	
00000000-0000-0000-0000-000000000000	fb414e1f-6726-4313-a3cd-fea1dc336378	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 02:29:15.056924+00	
00000000-0000-0000-0000-000000000000	6fcd0cf9-c15f-4018-a7ec-e75856aafebe	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 02:34:11.301544+00	
00000000-0000-0000-0000-000000000000	f2f71b9b-19d6-4868-a9c0-c3ad19c40769	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 02:43:26.810612+00	
00000000-0000-0000-0000-000000000000	6e185053-d484-4b6f-83cb-a038a024c979	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 02:43:26.811641+00	
00000000-0000-0000-0000-000000000000	2ad5aa8b-0e64-4509-8f22-ac284cbb5e09	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 02:51:16.581475+00	
00000000-0000-0000-0000-000000000000	1c34a0d4-1001-4ef6-8fb8-8cc26f60d799	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 12:27:14.372892+00	
00000000-0000-0000-0000-000000000000	2470544b-5ae8-4f35-84dc-2c62966c3253	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 12:27:14.374006+00	
00000000-0000-0000-0000-000000000000	ca002eca-38d0-453d-8a56-91a68cdec20a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 12:27:51.723823+00	
00000000-0000-0000-0000-000000000000	ca7429d7-0770-48f2-82db-b0e61f3543af	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 12:28:10.940308+00	
00000000-0000-0000-0000-000000000000	5f1eba9e-8eab-4bad-aec4-7885afec68ee	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 12:28:10.941336+00	
00000000-0000-0000-0000-000000000000	088c5dd9-6344-481f-a0ec-88bad532991b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 12:28:14.452422+00	
00000000-0000-0000-0000-000000000000	341defc2-6490-483f-b7d9-11cc385b7a53	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 12:36:43.043819+00	
00000000-0000-0000-0000-000000000000	44970e72-6abf-47f8-8947-319b48062b63	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 13:55:36.402371+00	
00000000-0000-0000-0000-000000000000	17141f85-e47b-4b39-bb31-48c1c7c583bb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 13:55:36.403767+00	
00000000-0000-0000-0000-000000000000	f0e86dff-5e12-45c4-af7e-597bbd81740c	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 16:04:00.307258+00	
00000000-0000-0000-0000-000000000000	6741d5ea-012b-41b5-946e-61449d1562a4	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 16:04:00.308877+00	
00000000-0000-0000-0000-000000000000	da75f9bf-389f-4386-a52e-64de07e246a5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 17:29:39.588095+00	
00000000-0000-0000-0000-000000000000	685965cd-56bd-4f99-ae29-5cf1fe993101	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 17:29:39.589646+00	
00000000-0000-0000-0000-000000000000	801b5ebb-248e-4da6-91ac-2870ff09f4ac	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 18:30:54.853584+00	
00000000-0000-0000-0000-000000000000	6162b4bb-da4f-48ae-8c31-4b9cd4498f04	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 18:30:54.854589+00	
00000000-0000-0000-0000-000000000000	74fd1f27-ccff-4cc3-8d7c-305ff27e0810	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 18:48:16.132856+00	
00000000-0000-0000-0000-000000000000	9f3a9add-26cf-423b-918c-c09c75258c3e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 18:51:35.700048+00	
00000000-0000-0000-0000-000000000000	d23e3dd5-d3ed-49e2-ab87-848d0a55b002	{"action":"token_refreshed","actor_id":"5850e09f-9f27-4ab0-b150-3ae6531adb83","actor_username":"test@example.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 18:55:47.529267+00	
00000000-0000-0000-0000-000000000000	c886fcb3-3598-45b1-9f75-faa4dc47a260	{"action":"token_revoked","actor_id":"5850e09f-9f27-4ab0-b150-3ae6531adb83","actor_username":"test@example.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 18:55:47.530712+00	
00000000-0000-0000-0000-000000000000	7db9af76-152a-41cb-8bbd-cc1be94ee653	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 19:05:42.665734+00	
00000000-0000-0000-0000-000000000000	20fdda26-96c5-4d11-8ee6-0624c234c26a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 19:05:42.666815+00	
00000000-0000-0000-0000-000000000000	0e89943c-d70e-4885-a560-58b81a31a9d1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 19:05:53.683443+00	
00000000-0000-0000-0000-000000000000	9ba65666-584b-4c04-8b3e-4113fffa1988	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 19:50:28.531701+00	
00000000-0000-0000-0000-000000000000	dcb68e15-9f60-448d-9456-b141f5b8a804	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 19:52:12.886801+00	
00000000-0000-0000-0000-000000000000	69583baf-d1f5-462e-bf5b-7088a3e9f0e4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 19:54:21.242423+00	
00000000-0000-0000-0000-000000000000	157e33f0-ae8b-4f88-ad2d-7c16e86c5e76	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 20:05:47.801454+00	
00000000-0000-0000-0000-000000000000	4bb629c1-0c66-4455-ad1a-a7ba1c752766	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 20:05:47.802582+00	
00000000-0000-0000-0000-000000000000	a00a8444-4d8d-4926-8128-48098c87c259	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-17 20:26:23.068759+00	
00000000-0000-0000-0000-000000000000	8be6aa27-d236-4681-b2b7-ff7054b7a0e1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 20:27:14.937095+00	
00000000-0000-0000-0000-000000000000	74e6bae3-78d9-4771-9386-374927e013f6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 20:28:04.326096+00	
00000000-0000-0000-0000-000000000000	58942e9c-f07e-48d5-822a-dd55f3adf51c	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-17 20:28:39.570388+00	
00000000-0000-0000-0000-000000000000	f12b76e3-6714-4863-96ef-3ea5d237cf04	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 20:28:51.704301+00	
00000000-0000-0000-0000-000000000000	05d64601-7e38-4522-8fae-4de5af523bce	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-17 20:28:54.467342+00	
00000000-0000-0000-0000-000000000000	b0bc1ccf-bb89-4572-b0bb-79c850f3a9f2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 20:42:15.061811+00	
00000000-0000-0000-0000-000000000000	ee41e47e-5661-4dd2-ab0a-a45c8e8f1654	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:02:02.023522+00	
00000000-0000-0000-0000-000000000000	1ede364a-7b00-4b29-9653-433013e327a7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:02:27.681931+00	
00000000-0000-0000-0000-000000000000	db521d91-8a90-43d9-a370-dcd5fabda50c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:06:34.823215+00	
00000000-0000-0000-0000-000000000000	1839cd71-e83b-423f-8e31-f5d460af32ae	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:08:24.951919+00	
00000000-0000-0000-0000-000000000000	8b9258e9-ae3c-4ae1-8366-a5bf43c7445a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:11:32.343607+00	
00000000-0000-0000-0000-000000000000	1b953e1c-532d-4316-b5da-1c5ac003f1ea	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:12:22.821558+00	
00000000-0000-0000-0000-000000000000	4ad01c3c-836d-43fd-a2ed-9ef3bba799b8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-17 22:12:36.592054+00	
00000000-0000-0000-0000-000000000000	e78a1d5b-96c0-4e01-b01c-d6c9645f99af	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 23:00:30.155552+00	
00000000-0000-0000-0000-000000000000	9db4421a-ad80-48ae-902d-b0fcd4c4d5c0	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 23:00:30.15674+00	
00000000-0000-0000-0000-000000000000	d19f6b4e-d528-4b99-a205-77ff09764446	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 23:30:04.678073+00	
00000000-0000-0000-0000-000000000000	36bfe5d6-5fa5-40e2-9faa-4d4b131be0eb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-17 23:30:04.679889+00	
00000000-0000-0000-0000-000000000000	26f2bde9-7162-4fef-9814-7340c9a63759	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:08.058267+00	
00000000-0000-0000-0000-000000000000	db9dc4d8-a7af-48c9-bde6-1c9471a437f5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:08.058127+00	
00000000-0000-0000-0000-000000000000	884bcb56-79f1-4e6b-aff8-1d663b0def5f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:08.059604+00	
00000000-0000-0000-0000-000000000000	b6f08989-2124-4127-bbdf-22be75ae8dfc	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:08.059471+00	
00000000-0000-0000-0000-000000000000	71363214-95f9-4f12-9454-57ddeb0a6cf3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:34.402856+00	
00000000-0000-0000-0000-000000000000	0bf7b1df-68bc-4157-82e4-f07687ac9664	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 01:05:34.403928+00	
00000000-0000-0000-0000-000000000000	0b07bda5-6c6b-441a-b32c-ff0fde135186	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 01:07:03.651713+00	
00000000-0000-0000-0000-000000000000	f618cfae-7e70-497c-86ae-43bffdc35bf8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 01:12:23.798606+00	
00000000-0000-0000-0000-000000000000	b00f75db-3dcb-4d86-ada4-84102d087efd	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 02:01:44.68101+00	
00000000-0000-0000-0000-000000000000	c57af837-66dd-4380-b83f-1f0a9f92bfe3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 02:01:57.923338+00	
00000000-0000-0000-0000-000000000000	d42a0a42-790b-4480-bae1-75e4618fea3f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 03:00:53.370611+00	
00000000-0000-0000-0000-000000000000	292c6fc2-b346-4e18-925b-2f3932d9d10d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 03:00:53.37194+00	
00000000-0000-0000-0000-000000000000	dc9a16ba-d63e-4e96-8631-d2cadc8899de	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 13:31:15.905229+00	
00000000-0000-0000-0000-000000000000	5e782641-f5dd-4ea5-8ecb-a11c81d86816	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 13:31:15.907431+00	
00000000-0000-0000-0000-000000000000	afe58ff1-2cb8-4732-b7f5-23fa074a147d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 13:55:05.325524+00	
00000000-0000-0000-0000-000000000000	aa780802-926f-4feb-a40d-2593b2841c95	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 14:29:35.886219+00	
00000000-0000-0000-0000-000000000000	a687de08-6f09-44fc-a85a-eec028b9b634	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 14:29:35.887267+00	
00000000-0000-0000-0000-000000000000	818a0764-e60e-4ebc-8312-4a02053f3bdf	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 15:28:56.494145+00	
00000000-0000-0000-0000-000000000000	3cd98a5d-e972-4b00-a810-7e8b25ccac1d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 15:28:56.495568+00	
00000000-0000-0000-0000-000000000000	ed630909-6cd9-4453-ae45-5bb9f5d730b9	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 15:29:24.757396+00	
00000000-0000-0000-0000-000000000000	555c3842-7714-4821-a429-f8933d6f59ed	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 15:29:24.758863+00	
00000000-0000-0000-0000-000000000000	fa6181b4-06cb-4607-932e-c1478f7d1b93	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 16:35:24.797239+00	
00000000-0000-0000-0000-000000000000	4f99aa85-0e9f-4d66-9c02-8a3a7363a445	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 16:35:24.798699+00	
00000000-0000-0000-0000-000000000000	c03cb0e7-241c-431f-a325-997eec1df6d7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 16:35:24.821507+00	
00000000-0000-0000-0000-000000000000	bbe0e9c5-349d-4bb9-9eaa-93b12ae437a4	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 16:35:24.822973+00	
00000000-0000-0000-0000-000000000000	fa508812-38a1-4211-b868-2138df8fb9ba	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 17:34:00.441887+00	
00000000-0000-0000-0000-000000000000	21bff345-a305-46e6-8845-ef91fb88105f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 17:34:00.444544+00	
00000000-0000-0000-0000-000000000000	da6ab2d0-6224-4026-8d8e-bcb282168f06	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 17:49:19.744794+00	
00000000-0000-0000-0000-000000000000	0a91448b-360c-4221-89ee-c88be909a986	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 17:54:52.587006+00	
00000000-0000-0000-0000-000000000000	b8638e54-91ea-4a0a-8d48-5889861d8fdf	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:02:00.64792+00	
00000000-0000-0000-0000-000000000000	5a3f4c2f-e805-454d-ba2f-aa6d431f0c84	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:02:18.191185+00	
00000000-0000-0000-0000-000000000000	0444ce5e-e877-467f-9bee-862d89c46a7e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:05:43.128041+00	
00000000-0000-0000-0000-000000000000	64ee1c40-e365-4f4f-87df-ec3e017b43ff	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:06:02.272742+00	
00000000-0000-0000-0000-000000000000	05b635a9-940a-4e57-a220-f43bf246d00e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:06:36.231053+00	
00000000-0000-0000-0000-000000000000	65d1d872-b380-4c0f-881b-c2cde3865c80	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:07:11.901915+00	
00000000-0000-0000-0000-000000000000	5d2040c4-d412-4e93-9009-a25e6c407b88	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:09:22.70193+00	
00000000-0000-0000-0000-000000000000	6046991c-aa1e-4be0-9aba-cf6d0a8ac459	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:10:42.1098+00	
00000000-0000-0000-0000-000000000000	23d199c4-1cce-4507-8a7d-5380bb7ab481	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:10:50.36504+00	
00000000-0000-0000-0000-000000000000	4fa8378e-f016-4727-ba91-dc03eae90151	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:10:52.160375+00	
00000000-0000-0000-0000-000000000000	33d57af1-d126-4aad-a8b7-f2fc48bc5d84	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:10:53.983292+00	
00000000-0000-0000-0000-000000000000	5561b17c-de88-4c9d-810f-def322a82388	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:11:01.622993+00	
00000000-0000-0000-0000-000000000000	33fc896b-80c5-4c77-85e1-de903dd56f1b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:11:03.264911+00	
00000000-0000-0000-0000-000000000000	9393ef25-a685-4b34-9550-df8870c2c4a8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:11:04.946926+00	
00000000-0000-0000-0000-000000000000	d04cdb4d-e094-4a09-9aef-3d846184d705	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 18:31:20.475897+00	
00000000-0000-0000-0000-000000000000	805e7ac5-33dc-49ea-b6d2-e35fdf21bc64	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 18:31:20.477413+00	
00000000-0000-0000-0000-000000000000	7fe4fdc9-04d0-4a7d-b929-f04c16994044	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 18:32:23.304644+00	
00000000-0000-0000-0000-000000000000	3a8ee427-87c0-46d8-8513-7d114bdef982	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 18:32:23.306233+00	
00000000-0000-0000-0000-000000000000	f9a9ffd3-ae22-4ece-b17f-1689a6577cf8	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 18:39:47.558007+00	
00000000-0000-0000-0000-000000000000	5d8ea6d4-7274-460e-a3e2-ac5d3362c19a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 18:39:50.552081+00	
00000000-0000-0000-0000-000000000000	b99ca23e-c1ae-453e-b6c9-c9fe0b50a840	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 19:25:29.108144+00	
00000000-0000-0000-0000-000000000000	ae8a37e2-f652-4486-91e0-22f5e32d61b9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 19:25:32.123041+00	
00000000-0000-0000-0000-000000000000	967242e2-8b46-45cd-b76a-606e1c4d33f4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 20:23:52.589124+00	
00000000-0000-0000-0000-000000000000	c89c6712-68b5-4f03-8b37-80593622620f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 20:23:52.590151+00	
00000000-0000-0000-0000-000000000000	17f8c788-5e07-4233-8e9b-8d64a6f2f06e	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:11:19.36677+00	
00000000-0000-0000-0000-000000000000	67655dd0-3c47-4e5c-a489-e0fa3369ea67	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:11:22.449232+00	
00000000-0000-0000-0000-000000000000	2277e1c2-1bb9-407e-921e-e680417d727f	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:12:45.390706+00	
00000000-0000-0000-0000-000000000000	4a675de8-ac6c-4b15-8471-61d1a4c164bc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:12:55.935509+00	
00000000-0000-0000-0000-000000000000	bbd7f1c8-57c7-4371-afac-504f09590b8e	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:14:53.650183+00	
00000000-0000-0000-0000-000000000000	5dd7979c-5413-40f6-acca-21b694748e00	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:15:03.400887+00	
00000000-0000-0000-0000-000000000000	a8e27fc2-f4fa-42f5-9dff-44c91196d865	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:34:14.891495+00	
00000000-0000-0000-0000-000000000000	c8ae3e99-6e13-4430-a7b2-3994ee10a347	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:34:17.914355+00	
00000000-0000-0000-0000-000000000000	9a676c05-6e32-4d28-83d7-4b432ffdef2d	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:38:50.522028+00	
00000000-0000-0000-0000-000000000000	4d0ee0ac-8328-48f4-9c11-ac25075a4eb4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:39:42.140648+00	
00000000-0000-0000-0000-000000000000	57ad827c-8c0e-4480-bafe-3f33dba9a332	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:49:54.20819+00	
00000000-0000-0000-0000-000000000000	558e989d-7f0e-48f9-b75c-c6313c9ff57a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:49:56.670397+00	
00000000-0000-0000-0000-000000000000	91942d59-42de-4342-b087-c23651fc696f	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 21:53:24.286302+00	
00000000-0000-0000-0000-000000000000	268b3af5-1fc5-4c11-a628-5f197a1b758a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 21:54:19.248589+00	
00000000-0000-0000-0000-000000000000	0b45c88f-99d1-449c-87f0-056dfd8e19ab	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 22:01:18.072887+00	
00000000-0000-0000-0000-000000000000	9584a01b-d0de-4dad-bb92-256267f397a8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:01:20.493515+00	
00000000-0000-0000-0000-000000000000	71334116-6ad0-4d84-9bf5-d8ec97998a69	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 22:06:49.059403+00	
00000000-0000-0000-0000-000000000000	cbb6ac0a-0a8b-4df5-86e7-90398ac94d8c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:06:51.361961+00	
00000000-0000-0000-0000-000000000000	61b51d7c-316b-4cd8-98e3-1a8cbc191ea0	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"test@example.com","user_id":"5850e09f-9f27-4ab0-b150-3ae6531adb83","user_phone":""}}	2025-09-19 22:21:34.261217+00	
00000000-0000-0000-0000-000000000000	20c25964-3657-4e87-93c2-96fc29ac9e6b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:26:13.931521+00	
00000000-0000-0000-0000-000000000000	ead9b262-46bd-45f7-944f-378226274e9e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:26:20.839085+00	
00000000-0000-0000-0000-000000000000	a4678737-eb28-425d-90a8-8ff1c96cfb39	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:26:52.216655+00	
00000000-0000-0000-0000-000000000000	d99db8c5-1ad1-4268-b1b4-4ad131cf6b58	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:26:58.947779+00	
00000000-0000-0000-0000-000000000000	58c22267-dc2c-4b4f-aa0e-42d0adcb79f3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:31:16.650622+00	
00000000-0000-0000-0000-000000000000	30958f46-014e-413f-a2f2-8dae5e6804ad	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:34:36.733364+00	
00000000-0000-0000-0000-000000000000	9f988e01-dd83-4d66-a50b-b5c1242356c2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 22:37:14.096629+00	
00000000-0000-0000-0000-000000000000	e547e2d6-c93a-4128-86cf-fb96cbbe715c	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 23:05:27.853515+00	
00000000-0000-0000-0000-000000000000	328df2db-d47f-40bc-bdf6-fd056c23526e	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-19 23:05:27.854912+00	
00000000-0000-0000-0000-000000000000	20efc3d8-576b-468d-9318-011785f13ad0	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:10:01.598908+00	
00000000-0000-0000-0000-000000000000	ef9adb4d-af32-45e5-9b74-7a5d2db96c91	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:10:04.019146+00	
00000000-0000-0000-0000-000000000000	97b4fd9a-1bee-410d-8645-b9f60063b1d2	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:13:46.930056+00	
00000000-0000-0000-0000-000000000000	34518372-6462-457a-aa52-5f8424fcef78	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:13:49.709203+00	
00000000-0000-0000-0000-000000000000	74d8f628-6d75-46a5-a357-c315b7f757ec	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:37:25.020645+00	
00000000-0000-0000-0000-000000000000	df9152cc-82f3-471e-93d2-9c1ca6a6dc4e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:37:26.99507+00	
00000000-0000-0000-0000-000000000000	808796e3-006d-4732-b00b-fdd619155f31	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:41:22.436499+00	
00000000-0000-0000-0000-000000000000	f88ceb12-0050-4a4c-a4f9-fb02737eb86a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:41:25.275374+00	
00000000-0000-0000-0000-000000000000	c4445f6b-c05d-4809-8076-d1390c95af75	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:52:03.201481+00	
00000000-0000-0000-0000-000000000000	c74694cf-5d43-424b-a522-0af4f8a67618	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:52:05.636757+00	
00000000-0000-0000-0000-000000000000	b80a061f-4892-4278-a941-893e955ba429	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:54:41.436754+00	
00000000-0000-0000-0000-000000000000	f5b4e765-db75-4b8d-b6b7-173cad7be199	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:54:43.676145+00	
00000000-0000-0000-0000-000000000000	71acbb62-3aae-4cb7-877d-5113020b47a8	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:56:09.135361+00	
00000000-0000-0000-0000-000000000000	30bdcdb0-4df5-4116-8bff-770e70ae2a67	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:56:11.210533+00	
00000000-0000-0000-0000-000000000000	fb3e6fcc-754a-49c4-a0d7-c0b94a762ab5	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-19 23:58:12.996695+00	
00000000-0000-0000-0000-000000000000	1a8bf719-cd83-45e9-b230-f3d75245144c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-19 23:58:16.179204+00	
00000000-0000-0000-0000-000000000000	85b2b365-f139-4625-b7f8-d4aff584ce81	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 00:01:30.935909+00	
00000000-0000-0000-0000-000000000000	e55d7313-4984-45cd-83ec-a31b39697393	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 00:03:04.519921+00	
00000000-0000-0000-0000-000000000000	187f0d94-26ac-496b-8ba6-73261b15feac	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@kgay.com","user_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","user_phone":""}}	2025-09-20 00:03:39.481169+00	
00000000-0000-0000-0000-000000000000	69bf3fd9-cb5e-467b-9cf6-30b62893e312	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@kgay.com","user_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","user_phone":""}}	2025-09-20 00:04:06.695341+00	
00000000-0000-0000-0000-000000000000	93940f17-62be-45ec-879d-00a8a39eedb7	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@kgay.com","user_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","user_phone":""}}	2025-09-20 00:04:16.886214+00	
00000000-0000-0000-0000-000000000000	db78e5ad-2037-4810-a144-3b463866b10d	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@kgay.com","user_id":"c39b6edd-41bc-4b17-8d5c-375ef0f8d453","user_phone":""}}	2025-09-20 00:06:10.703211+00	
00000000-0000-0000-0000-000000000000	1d091665-f2bf-4f79-a846-69c7d7e4102d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 02:11:33.598145+00	
00000000-0000-0000-0000-000000000000	029bade6-d9ed-494c-9077-a13fd73197e5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 02:11:33.599404+00	
00000000-0000-0000-0000-000000000000	2f011ac4-6aec-4021-871f-882c68f6bb0a	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 02:11:37.94265+00	
00000000-0000-0000-0000-000000000000	b1d68127-60e3-4023-b01f-e0434c8b5385	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 02:11:40.030025+00	
00000000-0000-0000-0000-000000000000	4390d91f-d495-43a2-afea-b982e9f8109b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 02:37:15.474268+00	
00000000-0000-0000-0000-000000000000	a3631f72-74ba-4b9e-963a-e24ef0ea991f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 12:38:40.701786+00	
00000000-0000-0000-0000-000000000000	ec149027-2777-42a9-9366-3e29789324c7	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 12:38:40.704421+00	
00000000-0000-0000-0000-000000000000	55635744-821c-456e-a7c0-0e1e85a50fab	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 13:08:15.237415+00	
00000000-0000-0000-0000-000000000000	dd50d4c1-a321-4732-bd56-22a77a91699c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 13:08:17.669381+00	
00000000-0000-0000-0000-000000000000	0e79aa99-044b-4a72-8d8f-e7da83e77ea9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 13:32:51.225223+00	
00000000-0000-0000-0000-000000000000	fb0656c2-a638-4748-852e-c7d1d0832765	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 13:35:36.91293+00	
00000000-0000-0000-0000-000000000000	1fce620e-e007-4497-a79c-c3afe10d7006	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 13:35:40.145238+00	
00000000-0000-0000-0000-000000000000	a12b7e68-ec40-456f-91e3-115133a87e60	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 13:42:01.584779+00	
00000000-0000-0000-0000-000000000000	8918df20-51dd-44c0-9a2a-38bd22175bc1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 13:46:43.635409+00	
00000000-0000-0000-0000-000000000000	7f9686e8-e35d-435c-8d54-dba094a67893	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 14:39:40.237412+00	
00000000-0000-0000-0000-000000000000	5459c73d-a698-4922-9a36-06e7e59edd5c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 14:39:40.238573+00	
00000000-0000-0000-0000-000000000000	46665a81-c77a-4897-bfee-1a17db5654ea	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 14:54:15.131039+00	
00000000-0000-0000-0000-000000000000	6b15ab40-21c5-4ed7-8d40-170a369161b7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:15:55.176657+00	
00000000-0000-0000-0000-000000000000	963f8446-44de-4554-95ba-033a3e6caec7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:15:55.836773+00	
00000000-0000-0000-0000-000000000000	2416936b-617c-4995-be61-abc6d6bea202	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:15:55.879396+00	
00000000-0000-0000-0000-000000000000	6966be3b-a36b-4658-977f-c4c9697202b7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:15:56.82337+00	
00000000-0000-0000-0000-000000000000	088362a1-c496-4433-ba7f-b31da70b5ced	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:15:57.171438+00	
00000000-0000-0000-0000-000000000000	81318a54-5c4f-489d-b5f0-5e350feb9aac	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:16:24.92519+00	
00000000-0000-0000-0000-000000000000	30aef8be-598a-4c70-bda0-20dc9305c5a7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:16:46.534279+00	
00000000-0000-0000-0000-000000000000	0ef7d690-ce5b-4d58-96cb-a527299144fc	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:16:46.535032+00	
00000000-0000-0000-0000-000000000000	ca9556fa-e082-4a38-ac64-1e2b7c597d47	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:17:59.282624+00	
00000000-0000-0000-0000-000000000000	08b60215-2ba3-4199-bb73-15a50b3d86e9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:18:29.380138+00	
00000000-0000-0000-0000-000000000000	2b22d158-7bd5-4999-93e2-cf926f889fde	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:18:59.710917+00	
00000000-0000-0000-0000-000000000000	a8a5fe1d-e6c4-498c-b597-eacdd2e0d124	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:37:54.368361+00	
00000000-0000-0000-0000-000000000000	62ed5ce0-821f-4483-be89-9e2760ec5fca	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:37:54.369847+00	
00000000-0000-0000-0000-000000000000	e96ebe4b-74bd-4a70-9920-21d1260fabdf	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:41:07.832275+00	
00000000-0000-0000-0000-000000000000	db3d65fd-b233-4e89-920d-50840e5eff55	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 15:41:07.833362+00	
00000000-0000-0000-0000-000000000000	4f8de641-cb4b-415b-a6f8-467b39fa4bb6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 15:56:11.343063+00	
00000000-0000-0000-0000-000000000000	b0d36a6e-2fec-4f1e-823a-d0c4109c9904	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 16:36:00.442714+00	
00000000-0000-0000-0000-000000000000	cb6aed16-b6d0-44a1-b8e8-38d640339bb5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 16:36:00.444004+00	
00000000-0000-0000-0000-000000000000	31a87660-139c-4435-b735-5bbf3e1bbebe	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"test1758386607901@example.com","user_id":"2c115a00-c671-45d4-9110-708666034d5d","user_phone":""}}	2025-09-20 16:43:28.218505+00	
00000000-0000-0000-0000-000000000000	e429e44a-5da4-47ae-95da-10802ff1dcd3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"test1758386607901@example.com","user_id":"2c115a00-c671-45d4-9110-708666034d5d","user_phone":""}}	2025-09-20 16:43:28.322601+00	
00000000-0000-0000-0000-000000000000	2b30ce45-6227-42af-b7fe-e7f90a2f562e	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-20 16:44:44.478421+00	
00000000-0000-0000-0000-000000000000	5859f5fc-eed7-4d2d-9a3f-0159ec47d27d	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 16:44:51.789468+00	
00000000-0000-0000-0000-000000000000	797c8824-61dd-4fa8-98c4-4602aee1cf38	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 16:45:04.89779+00	
00000000-0000-0000-0000-000000000000	7ebedcc6-fb0b-4659-a811-8e8261fa4dc7	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 16:52:53.595152+00	
00000000-0000-0000-0000-000000000000	69122dcd-0b4a-4043-b1a3-33ced649c3bb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 16:53:03.866519+00	
00000000-0000-0000-0000-000000000000	ed1e3826-0965-4b5e-aa23-03b28f97d8c9	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 16:53:06.482059+00	
00000000-0000-0000-0000-000000000000	fb85ebe2-15fe-4b0c-920a-4681601165b3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 16:56:54.852777+00	
00000000-0000-0000-0000-000000000000	b14549bf-8ee6-4d61-8437-7c6a8dec28b5	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 16:57:14.447608+00	
00000000-0000-0000-0000-000000000000	ba65c34f-f9e6-4728-b65e-acb8af3181fe	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 16:57:29.219082+00	
00000000-0000-0000-0000-000000000000	0f3e46c2-0163-4e70-9d16-622120254395	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 17:27:33.02779+00	
00000000-0000-0000-0000-000000000000	a2baecb1-f85e-4c74-b46a-83a7065431bd	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 17:27:36.606049+00	
00000000-0000-0000-0000-000000000000	c5a89f20-5687-461e-a98e-ab1560be23f1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 17:31:05.796134+00	
00000000-0000-0000-0000-000000000000	47dbd600-9b98-44f9-b695-064c8c25af36	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 17:40:26.38585+00	
00000000-0000-0000-0000-000000000000	c65f68bb-af87-4f58-8f05-380cd275e1c2	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 17:49:50.842458+00	
00000000-0000-0000-0000-000000000000	96fd1cff-ea93-447b-9d97-3ccfe93628d5	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 17:50:00.773438+00	
00000000-0000-0000-0000-000000000000	13c0fb0d-2510-4653-af07-06824b11d681	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 17:50:13.397097+00	
00000000-0000-0000-0000-000000000000	303e0166-3ca0-4a1b-afaa-221fa2a1bfd6	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 17:50:52.394726+00	
00000000-0000-0000-0000-000000000000	814d829e-b0e8-4cd6-860a-cb553f08aab0	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 17:52:17.685499+00	
00000000-0000-0000-0000-000000000000	cde8c7d5-eb57-408c-983b-7f05946d7e52	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:01:37.150441+00	
00000000-0000-0000-0000-000000000000	5a634392-f561-47b5-a23b-6f15292cde73	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 19:07:52.756251+00	
00000000-0000-0000-0000-000000000000	71255828-162e-4d45-abc1-dd0961bc4fb2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:07:55.847479+00	
00000000-0000-0000-0000-000000000000	b1a3ddb2-cb62-44f5-997d-f34713c10ae5	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:14:44.315375+00	
00000000-0000-0000-0000-000000000000	898fc4cb-7ebd-42fa-8f97-f074acbccd7d	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 19:23:23.486276+00	
00000000-0000-0000-0000-000000000000	323610a7-584b-43a7-8bc6-bbb209e1a528	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:23:27.453452+00	
00000000-0000-0000-0000-000000000000	56603b16-ad81-4749-89fe-c6bdcf95e6e3	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-20 19:41:25.327476+00	
00000000-0000-0000-0000-000000000000	ac996156-7235-4567-9b5f-7fc01702fbca	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:41:28.06111+00	
00000000-0000-0000-0000-000000000000	82ddba0f-9cbc-42a0-9169-f4b8924d5828	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-20 19:47:20.694783+00	
00000000-0000-0000-0000-000000000000	2fdc68e7-bf32-46c4-8be3-e3cfa3d3b3d3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 20:39:30.880619+00	
00000000-0000-0000-0000-000000000000	92af73df-862d-48a8-8195-b8631b582fc7	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 20:39:30.88222+00	
00000000-0000-0000-0000-000000000000	0c54bb35-f8ca-466a-ac20-52d9897b48f0	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 21:37:50.754404+00	
00000000-0000-0000-0000-000000000000	70e39b5c-69a0-4a32-aaf9-4a3a4cdfdfac	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 21:37:50.755829+00	
00000000-0000-0000-0000-000000000000	c837d2a8-eeeb-4c6e-8734-02cc99cce6a2	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 22:35:50.794493+00	
00000000-0000-0000-0000-000000000000	008b72bf-7c79-4a1d-80a0-71f1fb94761c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-20 22:35:50.795583+00	
00000000-0000-0000-0000-000000000000	f091f0ed-b34d-4eae-9f44-35feac58dcff	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 03:47:20.939282+00	
00000000-0000-0000-0000-000000000000	b90dc617-4304-409d-a722-a19854edf70f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 03:47:20.9404+00	
00000000-0000-0000-0000-000000000000	8f7422ab-9bcf-467d-baf2-c6bef979e24c	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 12:48:29.105442+00	
00000000-0000-0000-0000-000000000000	95d2a3ac-3bb7-4f5b-a4bc-0e4718bfa869	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 12:48:29.106846+00	
00000000-0000-0000-0000-000000000000	1745b7e5-279d-4ba0-8ce9-5ba563a9098e	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 14:11:37.383214+00	
00000000-0000-0000-0000-000000000000	79935add-bf39-490e-9635-8aa9179d81f2	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 14:11:37.384737+00	
00000000-0000-0000-0000-000000000000	4d2d17c2-dae2-4d2e-8215-1ef53bc568b8	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 15:09:38.798371+00	
00000000-0000-0000-0000-000000000000	9fd5dabe-efb0-408a-9aba-1ee5f3e50a6c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 15:09:38.799828+00	
00000000-0000-0000-0000-000000000000	f76fa630-edb6-456d-a760-3b4c2b97b60a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 16:07:38.700032+00	
00000000-0000-0000-0000-000000000000	ee3c90bd-01ed-4e71-ba1b-d8f040ee5627	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 16:07:38.70114+00	
00000000-0000-0000-0000-000000000000	ddb7d4b2-8ae5-41e6-8f08-1824fbf6a531	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 16:50:20.140781+00	
00000000-0000-0000-0000-000000000000	bb67ff84-710f-4cdd-9153-60d8eba00779	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 16:50:59.528955+00	
00000000-0000-0000-0000-000000000000	cabfd5f9-299d-48d7-b019-d1173e518139	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 16:51:02.778658+00	
00000000-0000-0000-0000-000000000000	bc831ab0-963c-4676-bcc7-af10c2eccdf9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 17:22:39.083132+00	
00000000-0000-0000-0000-000000000000	a3475fa7-3ade-47ad-9565-3dfe9fa4dd93	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 17:35:03.820558+00	
00000000-0000-0000-0000-000000000000	e93dbd82-54fd-4227-9c0c-47d97626f0aa	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 18:15:39.898249+00	
00000000-0000-0000-0000-000000000000	c3eb70fa-2f22-49b7-a1e4-05d4f39abd72	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 18:15:41.921816+00	
00000000-0000-0000-0000-000000000000	577f260b-1699-4a47-8c7c-8cd01b07f7bb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 18:15:41.922478+00	
00000000-0000-0000-0000-000000000000	8df5ea6e-e64f-4afd-b98f-db24ad1685f7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 18:44:24.028034+00	
00000000-0000-0000-0000-000000000000	56ced7f3-01e8-49d2-b605-2e2d540408c4	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-21 18:44:24.029152+00	
00000000-0000-0000-0000-000000000000	0d8f1456-4abe-40f1-ba77-817b6d6e44bb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 18:57:07.643803+00	
00000000-0000-0000-0000-000000000000	7f6cbdd2-bc88-484a-82a6-8ff1259993aa	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:03:23.239889+00	
00000000-0000-0000-0000-000000000000	b9534efa-e0bb-40f7-8732-4265daddb47b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:03:40.781502+00	
00000000-0000-0000-0000-000000000000	6bd3031b-f7d2-483d-8f8c-95bd25cfb8a8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:04:12.30875+00	
00000000-0000-0000-0000-000000000000	4c36f09b-a8c8-4652-bdb6-4331819ccbea	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:05:24.405771+00	
00000000-0000-0000-0000-000000000000	00a8a355-ef47-4679-8217-fd0efe7d74fe	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 19:09:15.536504+00	
00000000-0000-0000-0000-000000000000	94628309-1424-4d49-a3d1-ac215db7798f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:09:18.820597+00	
00000000-0000-0000-0000-000000000000	71e5c9de-d824-4ffc-8f8e-b63f75ad0d80	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 19:29:26.48902+00	
00000000-0000-0000-0000-000000000000	5d49182d-47d0-45bc-b395-de8fab67a0a8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:29:29.419828+00	
00000000-0000-0000-0000-000000000000	8ddeb40c-0507-46f3-96de-903328790900	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 19:29:39.891962+00	
00000000-0000-0000-0000-000000000000	0f86b123-2c31-4770-926b-6eb1a77d651c	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:30:07.683706+00	
00000000-0000-0000-0000-000000000000	be204797-ec64-4e2d-98ad-d45f9bacec66	{"action":"logout","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 19:30:27.107198+00	
00000000-0000-0000-0000-000000000000	a6411aa5-0bc1-40f6-8566-5124c3f8be8f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:30:32.112939+00	
00000000-0000-0000-0000-000000000000	6e236776-87ec-4e3e-ad79-75be12ac2811	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:35:53.925063+00	
00000000-0000-0000-0000-000000000000	60b245c6-a83b-400c-a87c-74e43ce96ab3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:38:56.463548+00	
00000000-0000-0000-0000-000000000000	aa14a985-3114-4d13-a01d-b7e49a15cfa1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:40:40.773244+00	
00000000-0000-0000-0000-000000000000	4ce781e9-5a28-4216-a3fb-3b6ce4256257	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-21 19:41:33.285643+00	
00000000-0000-0000-0000-000000000000	094f72fe-e364-46fe-b869-be1a86f29bc5	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:41:36.229567+00	
00000000-0000-0000-0000-000000000000	e9825a8d-842d-4e39-a5d8-136ef118bf71	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-21 19:47:51.764092+00	
00000000-0000-0000-0000-000000000000	ee8a15bd-ff9d-40d1-97e2-aee05d9aa8b7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 12:27:07.155867+00	
00000000-0000-0000-0000-000000000000	c19103ab-cf48-4411-9aff-e0ec999ca54a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 12:27:07.156854+00	
00000000-0000-0000-0000-000000000000	a1ce0719-d5f4-4635-a5f8-49a7175b2b1f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 12:39:32.010512+00	
00000000-0000-0000-0000-000000000000	ec588c8c-d453-4338-9e9c-824c1a10b1bc	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 12:39:32.196957+00	
00000000-0000-0000-0000-000000000000	7fae1e72-8664-4b22-81b8-29d12746696c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 12:49:50.322674+00	
00000000-0000-0000-0000-000000000000	3bc7fd59-2285-4e15-afd5-6a3e3556d7ef	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 12:58:40.131211+00	
00000000-0000-0000-0000-000000000000	85c11957-5a0b-4f66-af08-ad66ed5025dc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 12:58:42.644138+00	
00000000-0000-0000-0000-000000000000	601181e8-a0de-436e-980b-e34d9bf868e8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:10:04.979686+00	
00000000-0000-0000-0000-000000000000	6729960f-1cf8-49a4-a556-c973b860c158	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:14:33.966065+00	
00000000-0000-0000-0000-000000000000	c274365b-fa00-4aac-8557-e70f16fe9d4d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:14:36.402036+00	
00000000-0000-0000-0000-000000000000	d5161d41-7adf-47fe-aca9-ea613b31ffff	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:34:49.841461+00	
00000000-0000-0000-0000-000000000000	b1d59306-34db-4696-a951-1b91fd294523	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:34:50.291201+00	
00000000-0000-0000-0000-000000000000	2abc8523-c93f-4ae0-85ef-e754bf9650e0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:37:07.264747+00	
00000000-0000-0000-0000-000000000000	6477bc3d-6913-4f7e-ba34-4faae24e4de7	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:37:07.632646+00	
00000000-0000-0000-0000-000000000000	22ea9a5a-fbeb-4d6c-b190-1035bb6b3f9e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:38:47.535798+00	
00000000-0000-0000-0000-000000000000	0f46831e-0875-4a3a-8041-ca60546240bc	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:38:47.97095+00	
00000000-0000-0000-0000-000000000000	c3070965-21cd-45f0-9997-8885d171da45	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:43:28.663067+00	
00000000-0000-0000-0000-000000000000	8d754514-b517-4b6a-8031-ee0fd54ff728	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:43:28.826412+00	
00000000-0000-0000-0000-000000000000	05c3fe8a-0193-4fbe-a934-6dcfacc1b954	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:43:47.089695+00	
00000000-0000-0000-0000-000000000000	d419fe9e-292c-4fce-9f11-a6d51ecc98a1	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:43:47.274452+00	
00000000-0000-0000-0000-000000000000	b11f2a54-a02f-4bd0-9bf5-7402c889db67	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:44:11.874509+00	
00000000-0000-0000-0000-000000000000	f5ef844c-b985-47ae-8eb5-99e22db930cc	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:44:12.079819+00	
00000000-0000-0000-0000-000000000000	0b6024e1-17b3-4a28-8c8f-1945fd88a754	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:45:08.507325+00	
00000000-0000-0000-0000-000000000000	ad477460-94a3-4f7e-b091-86ace47c875c	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:45:08.738782+00	
00000000-0000-0000-0000-000000000000	759a6eea-4413-4efd-b04d-26951ed713a9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:47:15.518521+00	
00000000-0000-0000-0000-000000000000	8f5f7c90-0288-4911-9a74-b6b4d897754d	{"action":"logout","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account"}	2025-09-22 13:47:15.632089+00	
00000000-0000-0000-0000-000000000000	c8f495be-3293-43f5-a750-9a8139063416	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:49:03.088809+00	
00000000-0000-0000-0000-000000000000	3e83058c-1060-4d41-82d9-5cfe7a4e709b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 13:49:12.965482+00	
00000000-0000-0000-0000-000000000000	439d0159-7bbd-477a-af07-611bba61c2c9	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 13:49:23.445638+00	
00000000-0000-0000-0000-000000000000	f71666a9-e412-4b0e-80d6-40fe66337092	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 13:54:46.055991+00	
00000000-0000-0000-0000-000000000000	784985fe-1c5c-4458-915a-f697b8812a9f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 13:56:49.723881+00	
00000000-0000-0000-0000-000000000000	c05be822-a100-4c56-8766-dbd72f58662e	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testuser1758549513463@example.com","user_id":"9598cf0b-64c5-49c2-8cf9-70c73fbf9885","user_phone":""}}	2025-09-22 13:58:33.763574+00	
00000000-0000-0000-0000-000000000000	05333b42-a64a-47e8-af67-ad87700ad7d1	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testuser1758549513463@example.com","user_id":"9598cf0b-64c5-49c2-8cf9-70c73fbf9885","user_phone":""}}	2025-09-22 13:58:33.947468+00	
00000000-0000-0000-0000-000000000000	e30b0b9e-ee23-4b6a-a12a-958e846a83c6	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"bryhearnchi@gmail.com","user_id":"e10b0620-dee7-4dd5-8a10-16099a093c0b","user_phone":""}}	2025-09-22 13:59:14.200602+00	
00000000-0000-0000-0000-000000000000	81911d0f-761f-4c2a-9aaf-e53f072ae0a1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 13:59:30.851534+00	
00000000-0000-0000-0000-000000000000	06ce968d-1dad-434f-99ec-45ffc262022b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:00:05.494581+00	
00000000-0000-0000-0000-000000000000	c436ed91-ddf1-4bc2-91bb-836f3b0864e1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 14:01:48.101917+00	
00000000-0000-0000-0000-000000000000	99b4e1c4-911a-4ea5-93d7-421b434c644a	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:01:59.728185+00	
00000000-0000-0000-0000-000000000000	fa3f924e-322f-43cd-8618-35caf9113bda	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:02:04.498941+00	
00000000-0000-0000-0000-000000000000	28b921d0-a2c8-4b3d-b5d5-2aa687cd9243	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:03:08.778626+00	
00000000-0000-0000-0000-000000000000	9435cec9-420b-46ba-ba80-f423def476b9	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:04:29.561212+00	
00000000-0000-0000-0000-000000000000	7f934bb9-fc0f-476c-970f-943447ed5773	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:07:20.551771+00	
00000000-0000-0000-0000-000000000000	42d5222c-8193-4cff-8a60-366a9a649fc8	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:07:27.577851+00	
00000000-0000-0000-0000-000000000000	1e85193c-f245-4320-9e05-b56167f48467	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:08:45.952103+00	
00000000-0000-0000-0000-000000000000	17b70ccf-596c-4ba4-83d5-479373ebebc6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 14:09:06.138228+00	
00000000-0000-0000-0000-000000000000	b0053e3b-cbff-4248-9598-72f3cbbbb79f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:09:13.346393+00	
00000000-0000-0000-0000-000000000000	6034ea7b-e8b6-493f-9ae3-fbb3a25ded03	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:09:39.668525+00	
00000000-0000-0000-0000-000000000000	2cd1e300-7414-4394-b5da-12a42dfd269b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 14:11:13.495728+00	
00000000-0000-0000-0000-000000000000	c617156a-7a21-402f-be27-4b9b52d1f668	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 14:13:37.748505+00	
00000000-0000-0000-0000-000000000000	9c44b745-cf5d-481d-afb4-94bb774fe573	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testuser123@example.com","user_id":"254f34d8-7e9d-473b-86ba-29169fd22ba2","user_phone":""}}	2025-09-22 14:13:54.916982+00	
00000000-0000-0000-0000-000000000000	98ac1c4c-f93d-4d9c-ae10-824c9de1a47a	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"e10b0620-dee7-4dd5-8a10-16099a093c0b","user_phone":""}}	2025-09-22 14:15:44.2214+00	
00000000-0000-0000-0000-000000000000	f4aa370d-fb08-4e53-acac-a0daccf990b0	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 14:16:31.806186+00	
00000000-0000-0000-0000-000000000000	931205d1-0d84-4221-ad78-5939622b22c5	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 14:20:26.67822+00	
00000000-0000-0000-0000-000000000000	5116311e-de28-45c7-8e0d-4135e90c0b66	{"action":"login","actor_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","actor_name":"Bryan 2","actor_username":"bryhearnchi@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 14:20:43.426571+00	
00000000-0000-0000-0000-000000000000	5867eba2-b67a-44d0-837d-9cea0ca2ac4f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 14:21:04.819762+00	
00000000-0000-0000-0000-000000000000	f601f14a-6409-4d89-98b0-4721a6f1d716	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 14:21:13.287108+00	
00000000-0000-0000-0000-000000000000	56578d6e-1127-44b9-90cd-27c3fb6d7b3d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 16:35:19.116722+00	
00000000-0000-0000-0000-000000000000	981c3b4c-eb2a-4307-b192-1792fa45f597	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 16:35:19.120684+00	
00000000-0000-0000-0000-000000000000	147bce15-7edf-4999-8068-0406c19c4924	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 18:01:09.119703+00	
00000000-0000-0000-0000-000000000000	b7286f4b-1af2-4c21-ab3f-77cad135e433	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 19:51:36.114836+00	
00000000-0000-0000-0000-000000000000	1e643cdd-2728-4d1c-b3a4-e58fcc2b8620	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 19:51:36.116041+00	
00000000-0000-0000-0000-000000000000	616d3557-b517-467e-a528-a0fb9d22a688	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:08:37.431104+00	
00000000-0000-0000-0000-000000000000	ab97e6bd-cb8f-4cdf-a259-4d0900494651	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:08:37.45952+00	
00000000-0000-0000-0000-000000000000	11eaec83-f857-477e-ab57-439688bd8f8b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:10:24.591648+00	
00000000-0000-0000-0000-000000000000	705cfcf1-2890-4865-aa37-5cb74ce29d9f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:10:56.393403+00	
00000000-0000-0000-0000-000000000000	fb64cc7c-d8b1-4dcc-a9c6-987ecb276bac	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 21:11:06.421292+00	
00000000-0000-0000-0000-000000000000	677c0608-e926-4cb7-8ef9-9454bad2d865	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:13:30.843061+00	
00000000-0000-0000-0000-000000000000	617f111c-8425-4247-aa7c-137b3838c043	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:13:30.847445+00	
00000000-0000-0000-0000-000000000000	fe5fdffe-b3d4-4e6f-b449-60f0152c55e3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:29:58.022299+00	
00000000-0000-0000-0000-000000000000	e7d4e9a6-1cc2-4569-8215-fc53d44f9f1a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:29:58.032702+00	
00000000-0000-0000-0000-000000000000	c6c9f8ee-6a10-4dfa-8272-80b7f17f9831	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:31:53.770191+00	
00000000-0000-0000-0000-000000000000	c68b33e8-6d4d-4d23-a839-15f89f4ea2c3	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:31:53.783113+00	
00000000-0000-0000-0000-000000000000	90920a55-3f14-4392-8423-76c95a65db27	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:31:53.969085+00	
00000000-0000-0000-0000-000000000000	c4b176cb-6587-47a5-8786-aa1f30265863	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:31:53.975625+00	
00000000-0000-0000-0000-000000000000	54c597d4-f7dd-47e8-8359-536e28ac4ed6	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758576714081@example.com","user_id":"20147095-67ad-42aa-81b2-6700894da376","user_phone":""}}	2025-09-22 21:31:54.894799+00	
00000000-0000-0000-0000-000000000000	b784f55d-f2be-4eeb-af0c-79f4cf8318c5	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:33:59.508131+00	
00000000-0000-0000-0000-000000000000	f816de79-d947-4758-8448-51ba1fa7fb75	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:33:59.525152+00	
00000000-0000-0000-0000-000000000000	56d946d8-d2e1-4a76-80d0-f9770c7a9d90	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:33:59.652708+00	
00000000-0000-0000-0000-000000000000	91f2243f-9230-4fe1-a3b0-94fd7a460d74	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:33:59.703779+00	
00000000-0000-0000-0000-000000000000	50bb4646-b1cc-44fc-a10b-6915862fbaff	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758576839734@example.com","user_id":"e557e2f2-9627-4eb0-9277-e080e6a0d601","user_phone":""}}	2025-09-22 21:34:00.760325+00	
00000000-0000-0000-0000-000000000000	41882f4b-ae16-46d6-a83d-34d509cb9784	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758576839734@example.com","user_id":"e557e2f2-9627-4eb0-9277-e080e6a0d601","user_phone":""}}	2025-09-22 21:34:02.558851+00	
00000000-0000-0000-0000-000000000000	0c7f2ad5-762e-4d8c-b6f0-973581e58901	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758576714081@example.com","user_id":"20147095-67ad-42aa-81b2-6700894da376","user_phone":""}}	2025-09-22 21:35:01.427402+00	
00000000-0000-0000-0000-000000000000	4e049e6a-088c-4862-8033-2a7df85f8e90	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:46:17.507089+00	
00000000-0000-0000-0000-000000000000	b9846d95-0d55-4754-89ee-42c717c8cac0	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 21:46:17.530584+00	
00000000-0000-0000-0000-000000000000	cf36aa8a-48b2-4d99-b73d-e7bfb90619ad	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:46:17.675299+00	
00000000-0000-0000-0000-000000000000	ac51e431-6887-4863-a592-6dbf33bf04ab	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 21:46:17.715016+00	
00000000-0000-0000-0000-000000000000	c5a02212-6048-41e4-a9ff-654f869baeaa	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758577577710@example.com","user_id":"80eda2b0-91fa-426f-ada7-be84f8c3bae8","user_phone":""}}	2025-09-22 21:46:18.5039+00	
00000000-0000-0000-0000-000000000000	bcf24cdb-6e0c-45cb-84fc-d897bfb725ec	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758577577710@example.com","user_id":"80eda2b0-91fa-426f-ada7-be84f8c3bae8","user_phone":""}}	2025-09-22 21:46:20.25794+00	
00000000-0000-0000-0000-000000000000	8f24cb4f-32cb-4d38-9738-e4ed44189224	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 22:03:15.013724+00	
00000000-0000-0000-0000-000000000000	710810f4-e62f-482c-a48d-a4143674ba28	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 22:06:20.084543+00	
00000000-0000-0000-0000-000000000000	96c3ecc7-37dd-4d55-8010-323d4c2d71f0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 22:06:40.172383+00	
00000000-0000-0000-0000-000000000000	d1d52c59-29b3-44a5-ad37-db35ec24cf17	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 22:06:49.778209+00	
00000000-0000-0000-0000-000000000000	1cbe118e-c280-4507-8177-2eb8ad1d042e	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 22:18:44.067487+00	
00000000-0000-0000-0000-000000000000	c8f8299f-c4ea-4331-8769-18002b33bbc0	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 22:21:01.493765+00	
00000000-0000-0000-0000-000000000000	8033fc8e-85ff-4eed-ac4d-dcb08203c40c	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-22 22:24:01.126941+00	
00000000-0000-0000-0000-000000000000	a6b132b1-b8c8-4771-96e4-1b16a8a0f60e	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testuser123@example.com","user_id":"254f34d8-7e9d-473b-86ba-29169fd22ba2","user_phone":""}}	2025-09-22 22:24:06.703362+00	
00000000-0000-0000-0000-000000000000	5991e8e6-277c-4714-adfd-5a0793bb4aa3	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"my@example.com","user_id":"5b2c59b8-95b0-4ece-94ef-bee0aa82c5b4","user_phone":""}}	2025-09-22 22:27:10.838003+00	
00000000-0000-0000-0000-000000000000	907112f7-6228-4b77-a391-7e540055741f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"my@example.com","user_id":"5b2c59b8-95b0-4ece-94ef-bee0aa82c5b4","user_phone":""}}	2025-09-22 22:27:23.168114+00	
00000000-0000-0000-0000-000000000000	37bff1fb-e48d-424e-a7e3-cb4811585876	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"my@example.com","user_id":"5b2c59b8-95b0-4ece-94ef-bee0aa82c5b4","user_phone":""}}	2025-09-22 22:27:27.354481+00	
00000000-0000-0000-0000-000000000000	b13dfd4e-f4e1-49c8-98c8-b38cb683a93a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 22:40:38.107686+00	
00000000-0000-0000-0000-000000000000	840b0f2e-5934-499e-9d71-6364d09f7da2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 22:40:45.538152+00	
00000000-0000-0000-0000-000000000000	18d27342-40b1-4c69-8b62-c8b950218c93	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-22 22:40:51.956066+00	
00000000-0000-0000-0000-000000000000	4f24f36b-d5b1-4e88-8026-048b09acf0fe	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 22:51:54.212698+00	
00000000-0000-0000-0000-000000000000	67099391-ced4-421c-b7bb-9b51c0d68a1b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 22:51:54.213807+00	
00000000-0000-0000-0000-000000000000	c70241f0-b441-406a-9739-d65317493a81	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:00:44.252024+00	
00000000-0000-0000-0000-000000000000	c27bf5ff-8268-4de0-8841-2e6ccfb403d4	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:00:44.257167+00	
00000000-0000-0000-0000-000000000000	3fc6b08f-f607-479d-8b4c-44c62b3d2642	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:00:44.433319+00	
00000000-0000-0000-0000-000000000000	aee5f2bc-e826-473a-898f-24daa495cf1b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:00:44.441115+00	
00000000-0000-0000-0000-000000000000	f82979b2-7464-4641-b498-f3f76e3d1e85	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:00:45.495818+00	
00000000-0000-0000-0000-000000000000	86ed193f-8740-484e-8996-d84af76b8935	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758582044442@example.com","user_id":"c52182b7-f7d9-45c6-a051-e4c0eabc5b9f","user_phone":""}}	2025-09-22 23:00:45.617818+00	
00000000-0000-0000-0000-000000000000	72c77c0f-3367-42bb-ac62-31d298d7ae33	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758582044442@example.com","user_id":"c52182b7-f7d9-45c6-a051-e4c0eabc5b9f","user_phone":""}}	2025-09-22 23:00:47.37993+00	
00000000-0000-0000-0000-000000000000	6ba33247-c3f9-4591-9959-ec3fdd0e6bc9	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:15:34.210643+00	
00000000-0000-0000-0000-000000000000	8b11d9ae-3273-43fb-af17-2faec0eef914	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:15:34.212078+00	
00000000-0000-0000-0000-000000000000	d150f1a2-4574-4e4d-b13e-a196bc0da133	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:31:04.114743+00	
00000000-0000-0000-0000-000000000000	f524708b-1c81-4ae3-97d7-de8b45c0a94f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:31:04.653795+00	
00000000-0000-0000-0000-000000000000	08486367-7ab6-4e1e-ae86-9c7d90aaef1b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:31:04.783167+00	
00000000-0000-0000-0000-000000000000	c6ee51f1-e680-4ff3-aa4f-3a6b8cb6f00f	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758583865451@example.com","user_id":"17615429-94a5-4e26-b58a-b2ba2a873581","user_phone":""}}	2025-09-22 23:31:05.80848+00	
00000000-0000-0000-0000-000000000000	82402848-9fd3-4355-893f-ca49915cab8b	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758583865451@example.com","user_id":"17615429-94a5-4e26-b58a-b2ba2a873581","user_phone":""}}	2025-09-22 23:31:07.440925+00	
00000000-0000-0000-0000-000000000000	2629bc21-544b-4ad3-8a1f-cd3de1987896	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:39:54.293532+00	
00000000-0000-0000-0000-000000000000	ce69b393-e882-46a8-977a-07fc8da7e86e	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:39:54.860903+00	
00000000-0000-0000-0000-000000000000	1c1600ee-e9b1-430d-aa88-e71dc5eba8b4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:39:55.021284+00	
00000000-0000-0000-0000-000000000000	25c17965-5c71-4c7c-95aa-b31413e962db	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758584395677@example.com","user_id":"dbc396a7-5b0b-4695-93fe-b2010a173322","user_phone":""}}	2025-09-22 23:39:56.027579+00	
00000000-0000-0000-0000-000000000000	f2da1bdd-ae0f-422b-8f15-e4006fb224ad	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758584395677@example.com","user_id":"dbc396a7-5b0b-4695-93fe-b2010a173322","user_phone":""}}	2025-09-22 23:39:57.570237+00	
00000000-0000-0000-0000-000000000000	9189fd58-55f1-48d4-b05f-7ff4ef80a0f1	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:40:44.6036+00	
00000000-0000-0000-0000-000000000000	09ea313d-9159-42c2-8221-3960c93598fb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:40:44.604726+00	
00000000-0000-0000-0000-000000000000	d9b438fd-6359-451e-90d6-ac6dc43547a2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:47:27.644473+00	
00000000-0000-0000-0000-000000000000	4cdb36ec-19ed-4a39-830d-891b1f030e3e	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:47:28.397942+00	
00000000-0000-0000-0000-000000000000	18292c35-2050-4832-8fbd-ae98194d8f04	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:47:28.546415+00	
00000000-0000-0000-0000-000000000000	abb98330-66f3-4074-831f-1d4aa538a3f9	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758584849406@example.com","user_id":"4e95c9aa-9f2e-449c-96ec-6f5cdb3fd1f7","user_phone":""}}	2025-09-22 23:47:29.949432+00	
00000000-0000-0000-0000-000000000000	33714308-c8b3-451f-9a62-aaa8a1625021	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758584849406@example.com","user_id":"4e95c9aa-9f2e-449c-96ec-6f5cdb3fd1f7","user_phone":""}}	2025-09-22 23:47:31.867872+00	
00000000-0000-0000-0000-000000000000	814023fc-c179-4609-be9a-83ac6b9a1cd7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:49:55.599827+00	
00000000-0000-0000-0000-000000000000	449dd97b-4a28-42a8-8405-c2927dbe27ec	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-22 23:49:55.600888+00	
00000000-0000-0000-0000-000000000000	4843230e-780c-4d34-83b3-fdf692dde508	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:54:43.150257+00	
00000000-0000-0000-0000-000000000000	97c4750f-af6b-4091-a8e1-2864ddf071ce	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-22 23:54:43.728795+00	
00000000-0000-0000-0000-000000000000	6c683ffe-53ea-40d7-9510-2801811faecb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-22 23:54:43.888334+00	
00000000-0000-0000-0000-000000000000	7a45ed2a-5212-4440-90bb-66de8c19ce2f	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758585284585@example.com","user_id":"423ce8bb-bb79-4837-9e00-9539894b5107","user_phone":""}}	2025-09-22 23:54:44.93408+00	
00000000-0000-0000-0000-000000000000	4bc91d98-964a-437e-aeb8-d3594973a0f8	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758585284585@example.com","user_id":"423ce8bb-bb79-4837-9e00-9539894b5107","user_phone":""}}	2025-09-22 23:54:46.430786+00	
00000000-0000-0000-0000-000000000000	b0435c52-4285-4723-bcbd-62f0d9fe598e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:06:47.342404+00	
00000000-0000-0000-0000-000000000000	f754a7c7-b368-4340-b370-4503cb64b2ec	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:06:48.427261+00	
00000000-0000-0000-0000-000000000000	810c82a9-4188-409b-8148-eb8902f422d2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:06:48.735523+00	
00000000-0000-0000-0000-000000000000	f1a3786b-909f-4259-9000-f3c9801b1528	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758586009843@example.com","user_id":"e12da201-1094-4d12-abe5-dd8dd91ec3ab","user_phone":""}}	2025-09-23 00:06:50.785444+00	
00000000-0000-0000-0000-000000000000	2430c554-19a8-49f0-8cf2-dc5bdb43dced	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758586009843@example.com","user_id":"e12da201-1094-4d12-abe5-dd8dd91ec3ab","user_phone":""}}	2025-09-23 00:06:53.470412+00	
00000000-0000-0000-0000-000000000000	488b0e1b-101a-4ef5-a39a-b7f4a86e3488	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:10:13.919905+00	
00000000-0000-0000-0000-000000000000	485d6e93-56dc-44d5-8751-346adf08a608	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:10:14.925074+00	
00000000-0000-0000-0000-000000000000	2f3b0065-cd99-43e2-9a18-6c0dd90ba4ad	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:10:15.237229+00	
00000000-0000-0000-0000-000000000000	38a28898-4f41-48df-9ff5-da3146956ccb	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758586216249@example.com","user_id":"4214df32-a16f-4277-bad4-55cfbded68e4","user_phone":""}}	2025-09-23 00:10:17.065902+00	
00000000-0000-0000-0000-000000000000	df7a56a0-456f-4fd6-bc4a-f3b0e956de71	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758586216249@example.com","user_id":"4214df32-a16f-4277-bad4-55cfbded68e4","user_phone":""}}	2025-09-23 00:10:19.627694+00	
00000000-0000-0000-0000-000000000000	0601335a-e370-4dd6-b722-4ac6822acdbc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:11:21.933147+00	
00000000-0000-0000-0000-000000000000	fa2e7b78-2bc6-4201-8fbe-4a03b3db7634	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:11:22.527501+00	
00000000-0000-0000-0000-000000000000	d8625adf-3a6e-4c4b-b2cb-d068d5067d55	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:11:22.686217+00	
00000000-0000-0000-0000-000000000000	4cc87703-db5e-4ee4-b991-7e6e5245c5e9	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758586283324@example.com","user_id":"92d2bcbc-65cf-410d-b6fc-eb01f25cfe5b","user_phone":""}}	2025-09-23 00:11:23.650566+00	
00000000-0000-0000-0000-000000000000	9e4599d8-6a25-4545-a76b-8960e75a0e60	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758586283324@example.com","user_id":"92d2bcbc-65cf-410d-b6fc-eb01f25cfe5b","user_phone":""}}	2025-09-23 00:11:25.177801+00	
00000000-0000-0000-0000-000000000000	e17b1391-00ec-4b96-b01e-cbcb99ad8db4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 00:13:36.829247+00	
00000000-0000-0000-0000-000000000000	29e9d99c-4d0c-403c-b678-42615ac4981d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 00:13:36.830303+00	
00000000-0000-0000-0000-000000000000	7854fafb-1e62-4ced-b9ce-5fa8e5a75409	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:15:26.456498+00	
00000000-0000-0000-0000-000000000000	972999b7-1587-4537-8a36-d4593f3b0ef9	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:15:27.138657+00	
00000000-0000-0000-0000-000000000000	9b8c8434-6f51-4620-a275-781a1bceb778	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:15:27.299218+00	
00000000-0000-0000-0000-000000000000	4a8dee3b-3833-4d19-8fb4-5c1d40132315	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758586527940@example.com","user_id":"35a0a0e4-c5e4-4ab7-b543-c9c84d36bc5a","user_phone":""}}	2025-09-23 00:15:28.321623+00	
00000000-0000-0000-0000-000000000000	77addbe0-2bf2-48d9-8a13-e94c267c4b6d	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758586527940@example.com","user_id":"35a0a0e4-c5e4-4ab7-b543-c9c84d36bc5a","user_phone":""}}	2025-09-23 00:15:30.005545+00	
00000000-0000-0000-0000-000000000000	c527115c-2ae1-40d4-972a-04ce74b415e0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:22:26.612505+00	
00000000-0000-0000-0000-000000000000	4eebf67a-5f30-4996-9f72-4e53afc9d049	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:22:27.21742+00	
00000000-0000-0000-0000-000000000000	b7e36a49-e62d-4c4a-8fd1-1231741a3e30	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:22:27.364561+00	
00000000-0000-0000-0000-000000000000	4d147b1a-264e-4a3d-8553-be3a15474b84	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758586948029@example.com","user_id":"19f16c15-9e12-41e5-9974-9b490b726cfe","user_phone":""}}	2025-09-23 00:22:28.43977+00	
00000000-0000-0000-0000-000000000000	dbdc4ecd-6b45-4278-817d-4d347c495d12	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758586948029@example.com","user_id":"19f16c15-9e12-41e5-9974-9b490b726cfe","user_phone":""}}	2025-09-23 00:22:30.052525+00	
00000000-0000-0000-0000-000000000000	2dfff1e2-9790-479e-9296-45b9d5661249	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:29:07.243837+00	
00000000-0000-0000-0000-000000000000	45fd9ff5-c718-4406-a223-8e6a6b3e3981	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:29:08.231857+00	
00000000-0000-0000-0000-000000000000	adfe367c-5ce5-4225-9a48-c11f0980a281	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:29:08.486806+00	
00000000-0000-0000-0000-000000000000	30575763-5b66-4563-b220-ff588263b469	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758587349441@example.com","user_id":"757f122f-8bcd-431a-a9d0-6a70b450e8af","user_phone":""}}	2025-09-23 00:29:10.09935+00	
00000000-0000-0000-0000-000000000000	b1994c44-cbb7-4d5e-9540-424d6f83ed9c	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758587349441@example.com","user_id":"757f122f-8bcd-431a-a9d0-6a70b450e8af","user_phone":""}}	2025-09-23 00:29:12.043837+00	
00000000-0000-0000-0000-000000000000	6e45ba61-f05d-4c82-a78e-4363ade57b52	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:33:34.969569+00	
00000000-0000-0000-0000-000000000000	e5c4298d-508d-430e-b7cd-4e67d5436fba	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:33:35.486121+00	
00000000-0000-0000-0000-000000000000	624cc75f-5bae-4dcb-9bba-a289930a3a10	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:33:35.639023+00	
00000000-0000-0000-0000-000000000000	47d3d3a0-af72-496b-bdd2-0e123369d280	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758587616273@example.com","user_id":"f566635e-9aa6-41ee-bed9-7f81582264eb","user_phone":""}}	2025-09-23 00:33:36.595731+00	
00000000-0000-0000-0000-000000000000	b9fab235-5075-45d3-9621-c1814bb422d7	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758587616273@example.com","user_id":"f566635e-9aa6-41ee-bed9-7f81582264eb","user_phone":""}}	2025-09-23 00:33:38.128571+00	
00000000-0000-0000-0000-000000000000	b280b6ed-747e-4142-a98b-c19057d4334c	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 00:39:03.196107+00	
00000000-0000-0000-0000-000000000000	d6179a94-ef49-4482-b8b7-586702ebf8f8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 00:39:03.197563+00	
00000000-0000-0000-0000-000000000000	742f0729-520e-4d77-b7a7-9aa6382305cb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:40:27.858739+00	
00000000-0000-0000-0000-000000000000	437fdfe0-afc9-443f-ba53-9392fc283258	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:40:28.76426+00	
00000000-0000-0000-0000-000000000000	570335fb-4e6d-482b-b98d-83bc12493c32	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:40:29.09801+00	
00000000-0000-0000-0000-000000000000	d9f87a19-659f-4ead-8283-a5700179d8a6	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758588030170@example.com","user_id":"70daecc1-114d-42cf-a083-4064453d490d","user_phone":""}}	2025-09-23 00:40:31.083397+00	
00000000-0000-0000-0000-000000000000	3d38c04d-b6e7-4cac-b855-8b9a7ab21607	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758588030170@example.com","user_id":"70daecc1-114d-42cf-a083-4064453d490d","user_phone":""}}	2025-09-23 00:40:33.514847+00	
00000000-0000-0000-0000-000000000000	9e66e168-277c-4cf4-be1e-4861ffbbf655	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:41:55.176905+00	
00000000-0000-0000-0000-000000000000	be5fe316-0216-4ed3-9968-b9b475a94cbc	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:41:56.269948+00	
00000000-0000-0000-0000-000000000000	06e6f722-b6b8-4b6b-9e82-ba905a2a3bc1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:41:56.605767+00	
00000000-0000-0000-0000-000000000000	929244c5-44c3-4484-994a-153dc36c3e85	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758588117736@example.com","user_id":"e5ef060c-2879-4727-be38-5ab8f608d5aa","user_phone":""}}	2025-09-23 00:41:58.611347+00	
00000000-0000-0000-0000-000000000000	5dbf3ac2-645b-4b97-9223-71a273dcf1ee	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758588117736@example.com","user_id":"e5ef060c-2879-4727-be38-5ab8f608d5aa","user_phone":""}}	2025-09-23 00:42:00.950634+00	
00000000-0000-0000-0000-000000000000	86cea76c-5111-4829-b7b4-ab1043a70bfe	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:47:59.398223+00	
00000000-0000-0000-0000-000000000000	60eb7bcd-bc08-41d0-9697-3a6691ef5439	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:48:00.357702+00	
00000000-0000-0000-0000-000000000000	ac85b434-6a39-4608-8e4c-340bd8ba616e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:48:00.666948+00	
00000000-0000-0000-0000-000000000000	41fc8185-bc37-49fd-84ab-cc182b6c9f8e	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758588481647@example.com","user_id":"deefffff-83d1-4ab1-bc5e-8892657885c0","user_phone":""}}	2025-09-23 00:48:02.431461+00	
00000000-0000-0000-0000-000000000000	d60edf85-51e5-4012-952e-f6eaeb30df80	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758588481647@example.com","user_id":"deefffff-83d1-4ab1-bc5e-8892657885c0","user_phone":""}}	2025-09-23 00:48:04.761842+00	
00000000-0000-0000-0000-000000000000	77f9310c-53ea-4730-93ad-fb0bd25c20f8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:57:44.002125+00	
00000000-0000-0000-0000-000000000000	8f5d6dc8-4ee3-4c57-8bd1-63f166ba44ac	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 00:57:44.583337+00	
00000000-0000-0000-0000-000000000000	ae808042-aa54-4497-aa8d-2e9cfeaa7863	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 00:57:44.747125+00	
00000000-0000-0000-0000-000000000000	3ec359fe-1415-43f0-8056-d88f27d948bc	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758589065416@example.com","user_id":"396e942b-5d49-4a90-b298-b77f62158740","user_phone":""}}	2025-09-23 00:57:45.794615+00	
00000000-0000-0000-0000-000000000000	eff85e13-f7bb-45c5-8d1a-9bcd899efec3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758589065416@example.com","user_id":"396e942b-5d49-4a90-b298-b77f62158740","user_phone":""}}	2025-09-23 00:57:47.39259+00	
00000000-0000-0000-0000-000000000000	026d3cd4-9ab3-4ffb-a186-4bf45886306d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:04:34.988432+00	
00000000-0000-0000-0000-000000000000	a75312a5-a500-4ddd-93f7-1c0ca1948082	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:04:36.115777+00	
00000000-0000-0000-0000-000000000000	15c29454-0816-47a7-bbc2-b568961e8dfd	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:04:36.426896+00	
00000000-0000-0000-0000-000000000000	63f4d02a-f477-48d6-9ad7-c53c7945b750	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758589477537@example.com","user_id":"6efa2a64-a474-4c79-9719-980a24fc837b","user_phone":""}}	2025-09-23 01:04:38.427955+00	
00000000-0000-0000-0000-000000000000	5095a595-cf7b-4bca-921a-da55c7016390	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758589477537@example.com","user_id":"6efa2a64-a474-4c79-9719-980a24fc837b","user_phone":""}}	2025-09-23 01:04:40.755515+00	
00000000-0000-0000-0000-000000000000	9f8e4e5b-0dd5-4dbe-a9f1-0a8b561dd0d5	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:08:53.620969+00	
00000000-0000-0000-0000-000000000000	49ee0a48-9862-4737-8d27-2d3f66ae1ee6	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:08:54.384242+00	
00000000-0000-0000-0000-000000000000	f8934f5c-c887-4f8f-a5f9-cb950eeae807	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:08:54.518566+00	
00000000-0000-0000-0000-000000000000	82781305-d2d3-4914-97db-3840d068202f	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758589735176@example.com","user_id":"3df96a44-3b01-4fe7-9f78-9444de791814","user_phone":""}}	2025-09-23 01:08:55.559293+00	
00000000-0000-0000-0000-000000000000	926a092f-095f-4c0c-a049-dded35e37277	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758589735176@example.com","user_id":"3df96a44-3b01-4fe7-9f78-9444de791814","user_phone":""}}	2025-09-23 01:08:57.190921+00	
00000000-0000-0000-0000-000000000000	4b2b68fe-200f-493c-a8b8-b0ea07f2632c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:16:47.158019+00	
00000000-0000-0000-0000-000000000000	f040d7d3-a65b-4770-9422-f2222003e379	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:16:47.747884+00	
00000000-0000-0000-0000-000000000000	ef178b17-d9b4-4d87-9a2d-52fa3dfce884	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:16:47.906893+00	
00000000-0000-0000-0000-000000000000	c5730641-9e95-43fe-aa44-af5fafaeca99	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758590208554@example.com","user_id":"9bfc1aa6-f127-4e3d-9336-4c8c652a4ee2","user_phone":""}}	2025-09-23 01:16:48.893022+00	
00000000-0000-0000-0000-000000000000	ecc6dfc3-517b-4eed-912b-b3fb0c2297cb	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758590208554@example.com","user_id":"9bfc1aa6-f127-4e3d-9336-4c8c652a4ee2","user_phone":""}}	2025-09-23 01:16:50.473409+00	
00000000-0000-0000-0000-000000000000	05ba50a8-d4a9-4c33-8e2b-dbf36265adf1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:17:07.024693+00	
00000000-0000-0000-0000-000000000000	996c14df-1ca5-4b2b-94a2-cd16abb220f2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:17:07.618169+00	
00000000-0000-0000-0000-000000000000	cbb72832-7dfc-455e-88bc-01abe69b9d87	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:17:07.782989+00	
00000000-0000-0000-0000-000000000000	a40cec42-7718-4f20-bfb4-85069feb7788	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758590228417@example.com","user_id":"0bc37b54-b2a5-4524-b1e1-7b01e0384bd6","user_phone":""}}	2025-09-23 01:17:08.756991+00	
00000000-0000-0000-0000-000000000000	1bdc4dac-a55b-4113-979b-f39b5fa4e0a3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758590228417@example.com","user_id":"0bc37b54-b2a5-4524-b1e1-7b01e0384bd6","user_phone":""}}	2025-09-23 01:17:10.372787+00	
00000000-0000-0000-0000-000000000000	c80baf2a-82d1-40dd-8ddf-ec1896cfef17	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:20:48.349699+00	
00000000-0000-0000-0000-000000000000	6a327119-ff94-4fac-85ad-19e93a3edb73	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:49:45.670493+00	
00000000-0000-0000-0000-000000000000	1db66999-d03e-49b8-b56d-fd1d409d524c	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:20:48.970889+00	
00000000-0000-0000-0000-000000000000	d41e011b-36a0-4008-a927-ce44b09e8359	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:20:49.144271+00	
00000000-0000-0000-0000-000000000000	3187f5d6-8504-4c17-9206-c58978f6b7d4	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758590449814@example.com","user_id":"e39f3034-4bc9-44f5-9f2d-2015aa9108a5","user_phone":""}}	2025-09-23 01:20:50.185005+00	
00000000-0000-0000-0000-000000000000	1b127ac9-7d95-4270-a2ae-d879fb3eb7b7	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758590449814@example.com","user_id":"e39f3034-4bc9-44f5-9f2d-2015aa9108a5","user_phone":""}}	2025-09-23 01:20:51.852616+00	
00000000-0000-0000-0000-000000000000	61992bf0-c5f9-435b-956f-7a798eb5a43c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:29:12.466294+00	
00000000-0000-0000-0000-000000000000	611a9510-e952-4940-82b0-c12e92772026	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:29:13.040388+00	
00000000-0000-0000-0000-000000000000	69e260b0-0a99-4acd-8abc-b155c0f36f83	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:29:13.206239+00	
00000000-0000-0000-0000-000000000000	582ffff4-a709-4aad-a415-9eee51adf634	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758590953802@example.com","user_id":"78fef712-d67e-49dc-a794-5f24bb67c3fa","user_phone":""}}	2025-09-23 01:29:14.111685+00	
00000000-0000-0000-0000-000000000000	0f0593e3-30bd-43c3-8a4f-364571d76df8	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758590953802@example.com","user_id":"78fef712-d67e-49dc-a794-5f24bb67c3fa","user_phone":""}}	2025-09-23 01:29:15.6737+00	
00000000-0000-0000-0000-000000000000	375610f4-0d64-45d3-ad2a-cb2b599c2250	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:32:57.189594+00	
00000000-0000-0000-0000-000000000000	5f12e7f3-d1af-49ac-b30a-b304aa540e2f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:32:58.332867+00	
00000000-0000-0000-0000-000000000000	59d8c03f-f867-43f2-9158-742111f6196b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:32:58.641745+00	
00000000-0000-0000-0000-000000000000	58ef1657-2d58-4414-9842-172f3efff830	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758591179593@example.com","user_id":"e9875532-93e2-424a-9c0d-6d85578de233","user_phone":""}}	2025-09-23 01:33:00.542489+00	
00000000-0000-0000-0000-000000000000	ed019062-7283-4011-9ad4-22173992c2c4	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758591179593@example.com","user_id":"e9875532-93e2-424a-9c0d-6d85578de233","user_phone":""}}	2025-09-23 01:33:02.95103+00	
00000000-0000-0000-0000-000000000000	8316118b-772d-4d19-996c-043d319c7fda	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:36:38.724479+00	
00000000-0000-0000-0000-000000000000	c111b692-a736-48d7-b8cf-669288d74b56	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:36:39.322811+00	
00000000-0000-0000-0000-000000000000	a623d1f8-5021-44fa-b30c-31b77face1c9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:36:39.488329+00	
00000000-0000-0000-0000-000000000000	576c2407-ea25-43cd-a415-5da1afb26559	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758591400125@example.com","user_id":"0a5cc004-4539-42db-929f-23e212f68125","user_phone":""}}	2025-09-23 01:36:40.571772+00	
00000000-0000-0000-0000-000000000000	db469993-5a7d-41d9-8862-ca41d29b9383	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758591400125@example.com","user_id":"0a5cc004-4539-42db-929f-23e212f68125","user_phone":""}}	2025-09-23 01:36:42.136299+00	
00000000-0000-0000-0000-000000000000	6dd9e17f-e544-488f-a05f-0e07b40b3788	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 01:41:38.551395+00	
00000000-0000-0000-0000-000000000000	b462f366-d510-45f2-8051-29e51947f80d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 01:41:38.55269+00	
00000000-0000-0000-0000-000000000000	27edbdef-71e2-4566-a8cd-32500e4dba6a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:41:50.889098+00	
00000000-0000-0000-0000-000000000000	e73454f9-b596-42b1-9520-8c2c24e9baeb	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:41:51.470607+00	
00000000-0000-0000-0000-000000000000	8ea27bf7-b637-4b58-a55c-8c5ad4472d8a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:41:51.629172+00	
00000000-0000-0000-0000-000000000000	4949f7b8-cc42-4777-85bb-e9558257137d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758591712302@example.com","user_id":"83265d22-ce5e-462a-afda-e97d1ce54874","user_phone":""}}	2025-09-23 01:41:52.662283+00	
00000000-0000-0000-0000-000000000000	e1ebf86a-31d3-4004-ac82-42e7b63f94e7	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758591712302@example.com","user_id":"83265d22-ce5e-462a-afda-e97d1ce54874","user_phone":""}}	2025-09-23 01:41:54.25443+00	
00000000-0000-0000-0000-000000000000	ec66c0a6-301e-48c8-9bb9-34a52cb6760b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 01:49:46.269468+00	
00000000-0000-0000-0000-000000000000	84195efe-5a82-4e6b-b39d-fea36af9e569	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 01:49:46.435655+00	
00000000-0000-0000-0000-000000000000	2f2e1b0b-fd04-40ec-a4d5-9001ae617335	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758592187073@example.com","user_id":"61a56c8d-b8b8-4e80-a1f8-639b379a53bd","user_phone":""}}	2025-09-23 01:49:47.504487+00	
00000000-0000-0000-0000-000000000000	e1c52c33-097e-4cc2-bcd4-584efe2a7430	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758592187073@example.com","user_id":"61a56c8d-b8b8-4e80-a1f8-639b379a53bd","user_phone":""}}	2025-09-23 01:49:49.120346+00	
00000000-0000-0000-0000-000000000000	dc7598f6-c7cc-40ae-8c37-75b54012c6c9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:03:41.96196+00	
00000000-0000-0000-0000-000000000000	998da8cf-e5ae-4f3d-ab31-b05fba9b6940	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:03:43.165969+00	
00000000-0000-0000-0000-000000000000	45117e82-eb4a-49bb-9198-823a5d56f438	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:03:43.493149+00	
00000000-0000-0000-0000-000000000000	d90790b7-66b7-4406-97dc-e9cb6d01497c	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758593024593@example.com","user_id":"61267fbf-cc72-4b7f-b263-0eb49fb684f4","user_phone":""}}	2025-09-23 02:03:45.385862+00	
00000000-0000-0000-0000-000000000000	924702e8-af67-4d1c-b4ab-deaa6748b15b	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758593024593@example.com","user_id":"61267fbf-cc72-4b7f-b263-0eb49fb684f4","user_phone":""}}	2025-09-23 02:03:48.0341+00	
00000000-0000-0000-0000-000000000000	168ae241-22bd-4776-a04a-953c662d130b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:07:02.475894+00	
00000000-0000-0000-0000-000000000000	01749a97-300a-4135-a07a-c1941b649994	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:07:03.326471+00	
00000000-0000-0000-0000-000000000000	2eaefcab-3456-4245-8481-e9ecee868494	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:07:03.627975+00	
00000000-0000-0000-0000-000000000000	d21ca2c5-77e0-4db7-b1c9-d64d3bfbfa10	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758593224536@example.com","user_id":"581bafb2-a30a-4f8a-b5cd-a789873070ba","user_phone":""}}	2025-09-23 02:07:05.129238+00	
00000000-0000-0000-0000-000000000000	95e56d8e-88b2-47af-818c-d8b499031a39	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758593224536@example.com","user_id":"581bafb2-a30a-4f8a-b5cd-a789873070ba","user_phone":""}}	2025-09-23 02:07:07.338877+00	
00000000-0000-0000-0000-000000000000	843cfd15-82c6-46cb-802b-cbf2a95101a6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:12:47.618174+00	
00000000-0000-0000-0000-000000000000	89890342-a4d7-473f-8e61-b1ce151f1e90	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:12:48.581182+00	
00000000-0000-0000-0000-000000000000	53c710ad-f36e-41cb-a613-cdb4551df5db	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:12:48.908151+00	
00000000-0000-0000-0000-000000000000	f2958c7f-655b-40cc-93f4-5155c3bf1c3d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758593569999@example.com","user_id":"13771d06-751c-49e3-aa7c-0f06dcbd4f4e","user_phone":""}}	2025-09-23 02:12:50.565674+00	
00000000-0000-0000-0000-000000000000	7b040257-bdf2-4e06-a6d4-029ab70d579f	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758593569999@example.com","user_id":"13771d06-751c-49e3-aa7c-0f06dcbd4f4e","user_phone":""}}	2025-09-23 02:12:52.627344+00	
00000000-0000-0000-0000-000000000000	11654260-2347-4ebb-a15f-2d02df96bb35	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 02:19:30.569462+00	
00000000-0000-0000-0000-000000000000	5c1a290a-0b0b-4088-a1f9-38395f780e4c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 02:19:30.570702+00	
00000000-0000-0000-0000-000000000000	283dbc86-0a90-4a5e-af2d-46bf28ed588d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:21:33.022732+00	
00000000-0000-0000-0000-000000000000	28cfc414-ba68-4dea-8533-91a87076467f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:21:33.615444+00	
00000000-0000-0000-0000-000000000000	7de81bb1-2834-41d7-acb4-21cad7762cf8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:21:33.780477+00	
00000000-0000-0000-0000-000000000000	e31503ad-10c9-4221-88d1-8675e2950e5c	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758594094432@example.com","user_id":"a6949842-084d-4d01-a3ee-2013e0f66f0f","user_phone":""}}	2025-09-23 02:21:34.794768+00	
00000000-0000-0000-0000-000000000000	4b16a4bd-7120-4125-aad4-93b14d4c37b0	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758594094432@example.com","user_id":"a6949842-084d-4d01-a3ee-2013e0f66f0f","user_phone":""}}	2025-09-23 02:21:36.363151+00	
00000000-0000-0000-0000-000000000000	2b031f29-881c-4aee-812d-c0fec251974f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:33.817851+00	
00000000-0000-0000-0000-000000000000	4617a553-db99-45a2-882b-9ff2a961461c	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:34.906306+00	
00000000-0000-0000-0000-000000000000	724c46b1-c603-45bb-bf66-9dfae43dae00	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:35.236703+00	
00000000-0000-0000-0000-000000000000	c7940d08-cadb-4f24-9d6b-8c7159ab56f6	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:37.356995+00	
00000000-0000-0000-0000-000000000000	9d5b8361-d3dd-41b0-82b1-cc98c6486298	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:37.722986+00	
00000000-0000-0000-0000-000000000000	7c05eafb-74be-4968-921e-21f7be878bfc	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:39.657003+00	
00000000-0000-0000-0000-000000000000	56af9323-7f83-483b-9d8f-2dc1a9a05213	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:39.969009+00	
00000000-0000-0000-0000-000000000000	382b4f77-2e11-466c-8e9a-a718a587a9cf	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:41.752166+00	
00000000-0000-0000-0000-000000000000	43cc90b7-a2e2-4246-b96c-32daadb13fb9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:41.935078+00	
00000000-0000-0000-0000-000000000000	6b832900-8a9b-4060-816c-202c0292e3bf	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:43.858078+00	
00000000-0000-0000-0000-000000000000	c7af2990-13ee-441e-8485-477046421faf	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:44.178741+00	
00000000-0000-0000-0000-000000000000	9cced9c8-54c3-4923-b7ea-5acbc10574ca	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:32:46.128724+00	
00000000-0000-0000-0000-000000000000	1ec30a8c-748f-4397-bbbb-e77d73c8c969	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:32:46.464341+00	
00000000-0000-0000-0000-000000000000	22dfd944-c9ee-4ea9-8e9b-ac5b7ec1fc47	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:35:27.383905+00	
00000000-0000-0000-0000-000000000000	cecf526f-a9eb-47a3-ae48-cad3ec495eaf	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:35:27.965468+00	
00000000-0000-0000-0000-000000000000	29773576-22c3-404e-80af-99367fbdbb03	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:35:28.129017+00	
00000000-0000-0000-0000-000000000000	32adcdd0-0e89-479e-a5e1-87caa895d0a3	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758594928705@example.com","user_id":"fd6532d9-e78c-4fbb-a91d-0ff91e35cd69","user_phone":""}}	2025-09-23 02:35:28.941446+00	
00000000-0000-0000-0000-000000000000	bf4faaba-e408-4cf1-a0e8-8cc505db5108	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758594928705@example.com","user_id":"fd6532d9-e78c-4fbb-a91d-0ff91e35cd69","user_phone":""}}	2025-09-23 02:35:30.336473+00	
00000000-0000-0000-0000-000000000000	9917d86f-f92d-4cab-8771-c7d6f5af3e1c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:43:04.53276+00	
00000000-0000-0000-0000-000000000000	a639e4bc-038e-489b-832c-58d06ce1d8f6	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:43:05.095615+00	
00000000-0000-0000-0000-000000000000	6c484900-e8f5-43c8-9558-4972966c9425	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:43:05.255168+00	
00000000-0000-0000-0000-000000000000	acf13d4f-2210-46a8-96a3-f515924e9661	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758595385891@example.com","user_id":"c5a7e520-05e2-465a-bac1-c29a6b9f3d38","user_phone":""}}	2025-09-23 02:43:06.277216+00	
00000000-0000-0000-0000-000000000000	14aa4c88-f882-4ed8-8c1d-43a55d1b86cd	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758595385891@example.com","user_id":"c5a7e520-05e2-465a-bac1-c29a6b9f3d38","user_phone":""}}	2025-09-23 02:43:07.922691+00	
00000000-0000-0000-0000-000000000000	c4ac0ff1-f372-4aa5-8ec3-41dec6af4804	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 02:43:19.341118+00	
00000000-0000-0000-0000-000000000000	20f788fb-1f4a-4966-ae17-0a7ed7cac938	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 02:43:19.341787+00	
00000000-0000-0000-0000-000000000000	75c99549-5cf7-426e-bab9-2d819d80af3f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:46:10.551919+00	
00000000-0000-0000-0000-000000000000	c49d0a10-0041-48e7-aec3-980319e9e43b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:46:11.192706+00	
00000000-0000-0000-0000-000000000000	e91b848b-c402-47d6-9000-353087706bef	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:46:11.366926+00	
00000000-0000-0000-0000-000000000000	f6bc876f-39cb-4790-8b7f-24a19b13e98a	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758595572027@example.com","user_id":"3d2ed83b-2e0d-4c92-9b38-850d7b6b8c92","user_phone":""}}	2025-09-23 02:46:12.398434+00	
00000000-0000-0000-0000-000000000000	13f74207-16d2-4e44-b2cf-8ad2bafde4ce	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758595572027@example.com","user_id":"3d2ed83b-2e0d-4c92-9b38-850d7b6b8c92","user_phone":""}}	2025-09-23 02:46:13.962889+00	
00000000-0000-0000-0000-000000000000	b67f952f-bf5d-4cf0-947d-37172403816e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:59:52.653+00	
00000000-0000-0000-0000-000000000000	6649b3e3-8bdb-4cd9-abe8-0aa0dbeefc74	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 02:59:53.226772+00	
00000000-0000-0000-0000-000000000000	f21e0fc2-4515-47ea-8d43-fde62490c2c9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 02:59:53.357953+00	
00000000-0000-0000-0000-000000000000	9d9e685c-6d36-4902-a22e-dbeac64182df	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758596394012@example.com","user_id":"015e1768-ed4b-429e-aed7-24e5459a3c56","user_phone":""}}	2025-09-23 02:59:54.360398+00	
00000000-0000-0000-0000-000000000000	769cbaa3-e6e6-4d6b-b7fb-e11338b13ffc	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758596394012@example.com","user_id":"015e1768-ed4b-429e-aed7-24e5459a3c56","user_phone":""}}	2025-09-23 02:59:55.944551+00	
00000000-0000-0000-0000-000000000000	808f020c-e440-4717-8496-08ce6010f97c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 03:19:18.244239+00	
00000000-0000-0000-0000-000000000000	0d871e35-3d3b-451c-b090-1a6b8ff2a12c	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 03:19:19.29711+00	
00000000-0000-0000-0000-000000000000	8fc7604e-9d89-4a49-b74d-c10f4dd50da8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 03:19:19.556601+00	
00000000-0000-0000-0000-000000000000	f9eb9a33-cd97-4204-8cf4-f626d023502f	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758597560520@example.com","user_id":"f51c505c-eb6e-4d65-8bdd-5716a7acbc16","user_phone":""}}	2025-09-23 03:19:21.240959+00	
00000000-0000-0000-0000-000000000000	ca0492f1-6699-434e-bfd6-92dbc1ebbe1e	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758597560520@example.com","user_id":"f51c505c-eb6e-4d65-8bdd-5716a7acbc16","user_phone":""}}	2025-09-23 03:19:23.385875+00	
00000000-0000-0000-0000-000000000000	1d0f84f0-b16f-4069-a5ed-489c65c79b40	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 03:41:00.54038+00	
00000000-0000-0000-0000-000000000000	a7bc9ef2-996e-4580-a9eb-82de12d72274	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 12:27:46.550505+00	
00000000-0000-0000-0000-000000000000	7b5aacca-9226-418d-9a2e-15c727c4ac7a	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 12:27:47.087689+00	
00000000-0000-0000-0000-000000000000	559be38e-3a5d-4363-b660-7e7357e7b9eb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 12:27:47.216484+00	
00000000-0000-0000-0000-000000000000	f082f8e3-4fb2-4d1c-8233-0b8f07fb1ec1	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758630467850@example.com","user_id":"8955bc06-f422-431d-854c-4a931b32f5a7","user_phone":""}}	2025-09-23 12:27:48.18669+00	
00000000-0000-0000-0000-000000000000	4ecb0bbf-c147-4bf6-8556-6d0858961ea2	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758630467850@example.com","user_id":"8955bc06-f422-431d-854c-4a931b32f5a7","user_phone":""}}	2025-09-23 12:27:49.781963+00	
00000000-0000-0000-0000-000000000000	168ba881-5eeb-4231-8c22-007eb6f64063	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 12:32:53.056275+00	
00000000-0000-0000-0000-000000000000	84419fb4-2c67-4f23-ad43-0199883b0820	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 12:32:53.057335+00	
00000000-0000-0000-0000-000000000000	cfc90a11-8c39-4de4-bd1f-7ec02e43b26a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:31:28.144868+00	
00000000-0000-0000-0000-000000000000	00087f56-145d-4d8e-aaaa-8fd6aeb0e5a3	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:31:28.146137+00	
00000000-0000-0000-0000-000000000000	18ba435e-2834-4ef2-8031-9f28013309c4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:38:48.32905+00	
00000000-0000-0000-0000-000000000000	d562101e-d034-49e9-9c2a-4447bc191559	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:38:48.330229+00	
00000000-0000-0000-0000-000000000000	0482d58e-19b7-49b2-9158-f5af7b065899	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:49:24.706883+00	
00000000-0000-0000-0000-000000000000	3b90908b-2c4e-4364-9630-24a32b833706	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 13:49:24.708355+00	
00000000-0000-0000-0000-000000000000	58f252f5-5c06-4706-8cd4-fc37847b9e71	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 13:54:52.44775+00	
00000000-0000-0000-0000-000000000000	82133b3f-bb13-4519-8240-db06c7824598	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 13:54:52.987746+00	
00000000-0000-0000-0000-000000000000	27998704-7be1-4e98-9870-a90f2701111a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 13:54:53.142293+00	
00000000-0000-0000-0000-000000000000	fb695162-f186-4e3e-ae02-51be32e9cbe8	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758635693824@example.com","user_id":"20518924-e6ec-411f-ab0d-e8cc49132d74","user_phone":""}}	2025-09-23 13:54:54.182235+00	
00000000-0000-0000-0000-000000000000	7591ba7c-b845-4df0-b649-02328ef80269	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758635693824@example.com","user_id":"20518924-e6ec-411f-ab0d-e8cc49132d74","user_phone":""}}	2025-09-23 13:54:55.653766+00	
00000000-0000-0000-0000-000000000000	598538b9-531f-4f2b-a873-1292124387bf	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 13:58:37.086832+00	
00000000-0000-0000-0000-000000000000	15707b15-0a91-42f8-83b6-25177d9dda56	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 13:58:37.699263+00	
00000000-0000-0000-0000-000000000000	91acf503-0a7c-4edb-aa7a-88d345b3a923	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 13:58:37.875208+00	
00000000-0000-0000-0000-000000000000	6038fb2d-6fcf-4df0-a576-05855bcb921f	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758635918509@example.com","user_id":"7add4a25-bb85-41ff-bcfe-c1e737771cfa","user_phone":""}}	2025-09-23 13:58:38.889119+00	
00000000-0000-0000-0000-000000000000	65e32618-a284-4f30-9dbd-314e11b1de23	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758635918509@example.com","user_id":"7add4a25-bb85-41ff-bcfe-c1e737771cfa","user_phone":""}}	2025-09-23 13:58:40.514636+00	
00000000-0000-0000-0000-000000000000	51cbf510-a335-4f6d-8993-efd1890ed53e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 14:00:21.782555+00	
00000000-0000-0000-0000-000000000000	9d9cff5d-9799-45f7-b535-f801e224dff1	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 14:00:22.405279+00	
00000000-0000-0000-0000-000000000000	9c38ddba-67bf-472d-92e0-db49ba4e840c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 14:00:22.569561+00	
00000000-0000-0000-0000-000000000000	874b41dc-fb75-4de4-a8ad-24e51c26bf85	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758636023219@example.com","user_id":"c1323e23-e2f2-47c9-ad9f-83018b525ae2","user_phone":""}}	2025-09-23 14:00:23.526851+00	
00000000-0000-0000-0000-000000000000	55036ad0-d961-4363-8d27-95cda8296484	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758636023219@example.com","user_id":"c1323e23-e2f2-47c9-ad9f-83018b525ae2","user_phone":""}}	2025-09-23 14:00:25.064857+00	
00000000-0000-0000-0000-000000000000	5aa2b34c-04ee-4fc4-89aa-aa6c3b89e975	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 14:02:24.963691+00	
00000000-0000-0000-0000-000000000000	59af854e-5d44-4315-855c-fbe9671243c6	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 16:32:32.662047+00	
00000000-0000-0000-0000-000000000000	32b801b4-830d-49f2-b8ac-1771b353137b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 16:32:32.66318+00	
00000000-0000-0000-0000-000000000000	4981c167-2ca8-401d-b3fb-639e5eafa7d2	{"action":"token_refreshed","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 16:37:00.486532+00	
00000000-0000-0000-0000-000000000000	197501de-85f8-4c15-9140-82dd5b16eedd	{"action":"token_revoked","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 16:37:00.487774+00	
00000000-0000-0000-0000-000000000000	307fbe9e-b937-42da-95b4-c8d829cf4f30	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 19:57:30.437812+00	
00000000-0000-0000-0000-000000000000	507bf401-d0ea-44d8-b893-5bc7e8bcd801	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 19:57:30.44249+00	
00000000-0000-0000-0000-000000000000	2f4b4b8a-0c36-4c49-ac81-caa682f3d10f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 20:04:42.272748+00	
00000000-0000-0000-0000-000000000000	3e0216cb-5ad0-4ed8-a1db-7ba65e9c62e0	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 20:04:42.274047+00	
00000000-0000-0000-0000-000000000000	5952337e-0ec5-4587-b568-a2f5da1030d0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 20:06:49.24918+00	
00000000-0000-0000-0000-000000000000	264ff5c4-7d4e-4ba2-8008-165490c7e028	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 20:06:49.873082+00	
00000000-0000-0000-0000-000000000000	b5e342ce-602e-4ca5-96f7-4500145c2ef1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 20:06:50.030878+00	
00000000-0000-0000-0000-000000000000	7e12cc83-9f29-49fc-bae9-31d7a9ee99a8	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758658010688@example.com","user_id":"d5060f08-603e-4f75-9464-b47945558821","user_phone":""}}	2025-09-23 20:06:51.062872+00	
00000000-0000-0000-0000-000000000000	e785ee1d-2b8b-4440-9e6c-cd51547eb829	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758658010688@example.com","user_id":"d5060f08-603e-4f75-9464-b47945558821","user_phone":""}}	2025-09-23 20:06:52.650467+00	
00000000-0000-0000-0000-000000000000	c369d04f-45d3-4c3a-b95e-2fe55b7d0551	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 21:09:47.02027+00	
00000000-0000-0000-0000-000000000000	01878a9e-f737-431d-b2e4-852b5f6da282	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 21:09:47.021394+00	
00000000-0000-0000-0000-000000000000	3ab9c2c6-afd2-439f-8715-404e5cb6b9b7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 21:18:30.259717+00	
00000000-0000-0000-0000-000000000000	19eb524f-55c4-437f-b3f0-4778e32f9b86	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 21:18:30.260817+00	
00000000-0000-0000-0000-000000000000	32f65c05-ef67-474f-a6c5-586f41e8951a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:08:26.37851+00	
00000000-0000-0000-0000-000000000000	7f4d463e-4b28-4a29-9269-6b566aa157d5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:08:26.379777+00	
00000000-0000-0000-0000-000000000000	0111e757-7942-4be3-9266-52f4135a9959	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:20:25.297398+00	
00000000-0000-0000-0000-000000000000	c9f6f301-c353-4faf-bc46-ab71b2266a92	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:20:25.298491+00	
00000000-0000-0000-0000-000000000000	3b42a9e0-092c-41f8-9f3d-5a67f7c9e82b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 22:21:16.496525+00	
00000000-0000-0000-0000-000000000000	060639d9-e8cc-49f7-b764-27f2d0e19a0f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 22:21:17.583361+00	
00000000-0000-0000-0000-000000000000	16177e8b-b408-418e-8487-be264c9bc2e7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 22:21:17.903743+00	
00000000-0000-0000-0000-000000000000	ff2d4d0e-50e0-449b-ae15-873b87826cfc	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758666079055@example.com","user_id":"f5c182c1-018c-406a-92f0-0bc885eb1af4","user_phone":""}}	2025-09-23 22:21:19.843957+00	
00000000-0000-0000-0000-000000000000	d156c3d1-7cec-4843-8445-b275528b4c43	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758666079055@example.com","user_id":"f5c182c1-018c-406a-92f0-0bc885eb1af4","user_phone":""}}	2025-09-23 22:21:22.362952+00	
00000000-0000-0000-0000-000000000000	c908d855-8a37-4fb9-a85e-cc7d7ab20534	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:23:39.544976+00	
00000000-0000-0000-0000-000000000000	91aa07cd-07f5-4cdb-8f9d-e480bf9027ca	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 22:23:39.546258+00	
00000000-0000-0000-0000-000000000000	2644b09d-f949-430f-9ba2-b10a5c3790a0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 22:37:32.802875+00	
00000000-0000-0000-0000-000000000000	cd8721af-c865-43f4-aa2b-b33c78922f13	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 22:37:33.713333+00	
00000000-0000-0000-0000-000000000000	bc8e7889-e9c6-4079-a5d3-99d9392099ec	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 22:37:34.028535+00	
00000000-0000-0000-0000-000000000000	4de70836-d48c-4d70-ba91-c8a63918d7dd	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758667055343@example.com","user_id":"a3025c9e-05ab-4b8e-aca1-444b980225fe","user_phone":""}}	2025-09-23 22:37:36.111995+00	
00000000-0000-0000-0000-000000000000	c850d3ae-3a81-4471-9414-03175a46097f	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758667055343@example.com","user_id":"a3025c9e-05ab-4b8e-aca1-444b980225fe","user_phone":""}}	2025-09-23 22:37:38.696561+00	
00000000-0000-0000-0000-000000000000	e8faee24-7524-439c-a860-866d2cc5c8cb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 23:05:29.816419+00	
00000000-0000-0000-0000-000000000000	d6bb0bdc-225e-4361-b0ba-56f40e5a0e69	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 23:22:11.328101+00	
00000000-0000-0000-0000-000000000000	bd3558af-15a2-47a3-9da6-2fe967d86b85	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-23 23:22:11.329507+00	
00000000-0000-0000-0000-000000000000	43f3e48c-8ef2-4765-9578-5c6fb34a22a4	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-23 23:22:32.058953+00	
00000000-0000-0000-0000-000000000000	03beb4e0-d955-4ce8-8ee2-e7904338f701	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 23:23:04.436146+00	
00000000-0000-0000-0000-000000000000	99d76872-b4aa-4a55-87b5-46a6932d0eb1	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-23 23:23:05.367185+00	
00000000-0000-0000-0000-000000000000	e9fe157b-fa55-4d6e-b8d6-48c37b6dd69c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 23:23:05.656372+00	
00000000-0000-0000-0000-000000000000	2737200c-8798-4caa-b1b1-32da5f856ac6	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:46:59.562599+00	
00000000-0000-0000-0000-000000000000	cc3a12e9-04c0-4d81-bf7e-839f2545823d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758669786430@example.com","user_id":"e3f151bd-df28-43d9-b949-afa650944077","user_phone":""}}	2025-09-23 23:23:06.844557+00	
00000000-0000-0000-0000-000000000000	9d257906-21d8-4f54-8aeb-122725daef31	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758669786430@example.com","user_id":"e3f151bd-df28-43d9-b949-afa650944077","user_phone":""}}	2025-09-23 23:23:08.658285+00	
00000000-0000-0000-0000-000000000000	8360f328-35b6-4715-81c6-2a55acfc5a84	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-23 23:57:18.002393+00	
00000000-0000-0000-0000-000000000000	06f3895f-86df-4769-ba3e-f8b9d5e30ae1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 00:01:57.871675+00	
00000000-0000-0000-0000-000000000000	70da12a1-4785-4850-aa0e-5b1e5ef9a3dc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 00:05:29.522605+00	
00000000-0000-0000-0000-000000000000	b6bad695-6509-4780-8dde-e78f004d7d65	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 00:06:26.543332+00	
00000000-0000-0000-0000-000000000000	4fa10ba0-670d-48d0-9414-8337dfb3e8ba	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 00:12:37.910621+00	
00000000-0000-0000-0000-000000000000	266d163b-537a-4166-8498-c01ad11d3fc8	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 00:45:02.155321+00	
00000000-0000-0000-0000-000000000000	c3fbd6bd-6314-4e5d-b559-7ef4eb7e5b21	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 00:45:02.156805+00	
00000000-0000-0000-0000-000000000000	cdaa72ef-7292-461e-8ada-6480b3f9d049	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:48:34.075425+00	
00000000-0000-0000-0000-000000000000	cb572bba-cfbb-4b5a-8fbe-481baee53967	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:48:34.076526+00	
00000000-0000-0000-0000-000000000000	471c72da-b42c-4c2c-a057-f98272f9530e	{"action":"token_refreshed","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:48:34.18317+00	
00000000-0000-0000-0000-000000000000	1caf7fd0-f0ae-4db4-8d34-701eef8c39f1	{"action":"token_revoked","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:48:34.184069+00	
00000000-0000-0000-0000-000000000000	00358958-be87-499c-ba05-a8d7258ff7c7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:50:41.469974+00	
00000000-0000-0000-0000-000000000000	2705fc06-4b10-44c8-96ff-8f95c199bfbb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 02:50:41.471037+00	
00000000-0000-0000-0000-000000000000	f679f4df-0a5d-4d00-873d-9fa131fae39f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 02:53:23.266813+00	
00000000-0000-0000-0000-000000000000	c7ead0e7-b0e4-40c5-94fe-f6440682cc7f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 02:53:24.224465+00	
00000000-0000-0000-0000-000000000000	efb4cb5d-4c29-4df7-b696-2806b8bfc9c7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 02:53:24.422815+00	
00000000-0000-0000-0000-000000000000	c09e8856-6a55-4392-8f65-2c826b3f2117	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758682405497@example.com","user_id":"bce498eb-9875-47b2-9ae0-c555afc558cd","user_phone":""}}	2025-09-24 02:53:26.354731+00	
00000000-0000-0000-0000-000000000000	ba509fc5-921c-42bb-af6a-c8fb84c19ef4	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758682405497@example.com","user_id":"bce498eb-9875-47b2-9ae0-c555afc558cd","user_phone":""}}	2025-09-24 02:53:28.417548+00	
00000000-0000-0000-0000-000000000000	99c20791-d071-4c28-b705-56be0ec3c8d0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 02:59:28.738568+00	
00000000-0000-0000-0000-000000000000	881422e5-80b9-4b9a-8963-90e3c070f40a	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 02:59:29.837315+00	
00000000-0000-0000-0000-000000000000	b43b0014-1a78-4145-82a8-1b49dfe3d139	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 02:59:30.028961+00	
00000000-0000-0000-0000-000000000000	9778633e-25d8-41fa-96d6-150b1dae3354	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758682771109@example.com","user_id":"66ddb946-d447-475a-84f2-07f97b383a44","user_phone":""}}	2025-09-24 02:59:31.970271+00	
00000000-0000-0000-0000-000000000000	3c6c04af-1030-4c91-b29f-34a68628f911	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758682771109@example.com","user_id":"66ddb946-d447-475a-84f2-07f97b383a44","user_phone":""}}	2025-09-24 02:59:34.267301+00	
00000000-0000-0000-0000-000000000000	8ab6341d-9caa-44c4-aaaa-98747ae2da6d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:05:44.218522+00	
00000000-0000-0000-0000-000000000000	260f43b4-007f-402a-8a91-b483bfdfd276	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 03:05:45.34145+00	
00000000-0000-0000-0000-000000000000	1645c539-bcd7-4eb2-a813-04d41d899383	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:05:45.540408+00	
00000000-0000-0000-0000-000000000000	1a5dab74-2d38-457e-ba44-42a8922e7730	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758683146611@example.com","user_id":"39be345e-096e-4eff-bdbe-35679a8231dc","user_phone":""}}	2025-09-24 03:05:47.520269+00	
00000000-0000-0000-0000-000000000000	016114d0-eca0-42c1-ba95-1fb9456f2893	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758683146611@example.com","user_id":"39be345e-096e-4eff-bdbe-35679a8231dc","user_phone":""}}	2025-09-24 03:05:50.130135+00	
00000000-0000-0000-0000-000000000000	df9e5a0a-56b9-46f3-8362-12683ccc9157	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:05:56.564272+00	
00000000-0000-0000-0000-000000000000	80e0cd0a-3bb1-4a9b-ba66-351cf4b75458	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 03:05:57.116747+00	
00000000-0000-0000-0000-000000000000	cd595034-1216-46fe-ab6c-97c7d8514e2b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:05:57.269397+00	
00000000-0000-0000-0000-000000000000	8d38ec9f-b2c1-4442-815b-d1dd9674eb6b	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758683157897@example.com","user_id":"685e8199-f6cc-42fa-9b0a-6c07d7129d36","user_phone":""}}	2025-09-24 03:05:58.260694+00	
00000000-0000-0000-0000-000000000000	d9f6382e-f275-4765-bc84-a12a36dfadf3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758683157897@example.com","user_id":"685e8199-f6cc-42fa-9b0a-6c07d7129d36","user_phone":""}}	2025-09-24 03:05:59.864705+00	
00000000-0000-0000-0000-000000000000	b1675ebd-b3f3-4195-b5e2-f509d6a39441	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:06:36.004071+00	
00000000-0000-0000-0000-000000000000	f559e96b-e0d7-496c-a565-e3dc59e1525b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:06:36.038352+00	
00000000-0000-0000-0000-000000000000	13ac5de9-486f-43f4-ad1c-103e3b421b85	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 03:06:36.949161+00	
00000000-0000-0000-0000-000000000000	207907ce-4277-4b9a-8621-a08dd269d9f3	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 03:06:37.031141+00	
00000000-0000-0000-0000-000000000000	773369db-95ac-470a-ae4b-348ab7a6fc23	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:06:37.145727+00	
00000000-0000-0000-0000-000000000000	0025de52-721d-4961-8d65-4788a5ce6c93	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:06:37.294811+00	
00000000-0000-0000-0000-000000000000	53ad4b06-dec3-44f7-96f3-96e40c2d81f4	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758683198347@example.com","user_id":"462b5498-bcbf-443b-83ee-6c1f919a9d12","user_phone":""}}	2025-09-24 03:06:39.015655+00	
00000000-0000-0000-0000-000000000000	47164e9b-2ed3-40a7-a0a1-0d522883df2a	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758683198125@example.com","user_id":"651fcb15-8e1c-478c-96b6-e739836a4605","user_phone":""}}	2025-09-24 03:06:39.064905+00	
00000000-0000-0000-0000-000000000000	8a9344c2-2b44-4b96-a232-2f3341c4bd4d	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758683198347@example.com","user_id":"462b5498-bcbf-443b-83ee-6c1f919a9d12","user_phone":""}}	2025-09-24 03:06:41.360035+00	
00000000-0000-0000-0000-000000000000	b095db66-2a6d-4d59-900e-22950583c2a3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758683198125@example.com","user_id":"651fcb15-8e1c-478c-96b6-e739836a4605","user_phone":""}}	2025-09-24 03:06:41.650484+00	
00000000-0000-0000-0000-000000000000	ca89c5d6-0bda-45df-b14d-8b2cc96a4829	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:24:24.262194+00	
00000000-0000-0000-0000-000000000000	4607f7da-b9f6-4376-b97c-a1ab632fa5e3	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 03:24:25.464294+00	
00000000-0000-0000-0000-000000000000	ef007252-2459-4e62-bbca-ab2fdf7634f1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 03:24:25.800651+00	
00000000-0000-0000-0000-000000000000	110ec2ca-6dfb-4b9c-83a7-91b63852c32a	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758684266926@example.com","user_id":"9fa89e6e-1c4e-49fd-a741-a647a6843a8c","user_phone":""}}	2025-09-24 03:24:27.862293+00	
00000000-0000-0000-0000-000000000000	48ae090d-08c0-4d10-aa76-9384fb362914	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758684266926@example.com","user_id":"9fa89e6e-1c4e-49fd-a741-a647a6843a8c","user_phone":""}}	2025-09-24 03:24:30.44939+00	
00000000-0000-0000-0000-000000000000	1b9a3015-c423-46c7-b78b-86091bd75ad3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:32:42.104241+00	
00000000-0000-0000-0000-000000000000	3062077b-77ce-4cf7-b687-ebcd533680db	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:32:42.106037+00	
00000000-0000-0000-0000-000000000000	2f707266-3d81-4e3f-b8db-0ab8a3202857	{"action":"token_refreshed","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:46:42.878018+00	
00000000-0000-0000-0000-000000000000	5b83f4e9-951a-43ba-8447-a5c98713080a	{"action":"token_revoked","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:46:42.879427+00	
00000000-0000-0000-0000-000000000000	ce1d8903-9c77-496d-8633-6cc844f74a23	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 03:46:59.563376+00	
00000000-0000-0000-0000-000000000000	44c83e38-7a37-444a-8a94-fbe3c9eb562a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 12:19:18.209335+00	
00000000-0000-0000-0000-000000000000	5c94fdc7-b829-439c-a303-9494bdba5ce7	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 12:19:18.210712+00	
00000000-0000-0000-0000-000000000000	d89aa4b9-3011-4ecd-80c5-eb3c84af69b9	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 13:44:21.113736+00	
00000000-0000-0000-0000-000000000000	6fea98da-c11b-4b83-accd-3ad2eb2feee5	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 13:48:45.166104+00	
00000000-0000-0000-0000-000000000000	22cd758b-d766-4b56-b1ac-53b1b9e99f7b	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 13:48:46.086725+00	
00000000-0000-0000-0000-000000000000	4ddd095e-1207-418c-82eb-b970daa012d2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 13:48:46.357143+00	
00000000-0000-0000-0000-000000000000	a23bc215-2ee6-45cc-af64-fbc16b60c444	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758721727293@example.com","user_id":"2938348c-b457-4d73-9e7e-9b8c673f9eb8","user_phone":""}}	2025-09-24 13:48:47.811641+00	
00000000-0000-0000-0000-000000000000	0aad916b-4e58-4ef2-94d8-0f2a8a327243	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758721727293@example.com","user_id":"2938348c-b457-4d73-9e7e-9b8c673f9eb8","user_phone":""}}	2025-09-24 13:48:49.966714+00	
00000000-0000-0000-0000-000000000000	dfacc3fe-5f6a-4f67-8ebd-40e2816a14cf	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 14:41:56.850349+00	
00000000-0000-0000-0000-000000000000	d06b85c7-857b-4125-b034-08986203f47e	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 14:41:56.851728+00	
00000000-0000-0000-0000-000000000000	2e066176-296e-46b8-99ef-d8063027d005	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 19:37:26.834792+00	
00000000-0000-0000-0000-000000000000	d06604bb-1de9-4920-8abc-2a0882670b7b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 19:37:26.835872+00	
00000000-0000-0000-0000-000000000000	0cfb86b4-ca69-4486-a979-4219a50981f2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 20:23:24.227563+00	
00000000-0000-0000-0000-000000000000	44b6d10f-f4ba-475c-bbf6-6030b31a3710	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 20:23:25.043781+00	
00000000-0000-0000-0000-000000000000	a6c79ae8-c889-40db-91f4-39ef5d579b06	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 20:23:25.360528+00	
00000000-0000-0000-0000-000000000000	052b2396-8f58-4639-a7e7-e0cb915b12c7	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758745406414@example.com","user_id":"46c68a98-2edd-470d-b70d-5d8ba5a4e490","user_phone":""}}	2025-09-24 20:23:27.178526+00	
00000000-0000-0000-0000-000000000000	39b64292-0b29-4b37-aae2-a4867010fbc4	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758745406414@example.com","user_id":"46c68a98-2edd-470d-b70d-5d8ba5a4e490","user_phone":""}}	2025-09-24 20:23:29.797787+00	
00000000-0000-0000-0000-000000000000	6b5fd055-0b60-485b-8685-e25c9a51dc3a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 20:25:40.45113+00	
00000000-0000-0000-0000-000000000000	263641e5-a593-4cbd-84bc-710e0a3ad2f2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-24 20:25:40.999472+00	
00000000-0000-0000-0000-000000000000	dc8317c6-5e05-412f-9056-cc3af68b9733	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-24 20:25:41.123435+00	
00000000-0000-0000-0000-000000000000	4a5d8a48-9d67-4177-9b0f-2de2033130a7	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758745541708@example.com","user_id":"fb93753b-15cf-4c5a-8a1d-94ce9b0dbaec","user_phone":""}}	2025-09-24 20:25:42.01191+00	
00000000-0000-0000-0000-000000000000	d7c7dbef-8fee-48f9-8387-8ee0591c2ef3	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758745541708@example.com","user_id":"fb93753b-15cf-4c5a-8a1d-94ce9b0dbaec","user_phone":""}}	2025-09-24 20:25:43.454532+00	
00000000-0000-0000-0000-000000000000	cf9ac3c0-092a-4145-b357-7def7dfced45	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 20:26:04.962338+00	
00000000-0000-0000-0000-000000000000	21135d36-59ee-4d3e-b96e-aaed5498901b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 20:26:04.963373+00	
00000000-0000-0000-0000-000000000000	5d1876c5-d0d6-4be5-9d19-bdbef6a307a0	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 20:52:59.953143+00	
00000000-0000-0000-0000-000000000000	2c48a58a-fe7d-4114-815f-ecd50e01bd4b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 20:52:59.954247+00	
00000000-0000-0000-0000-000000000000	d5af0127-5cc8-4599-becf-6f933843cc2d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 22:08:55.011099+00	
00000000-0000-0000-0000-000000000000	ad0f10a0-faf6-4bc0-ab0f-6b276b1e8bc6	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 22:08:55.01695+00	
00000000-0000-0000-0000-000000000000	70d5c273-c2b5-4ded-978f-081b7d89abeb	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 22:13:31.684501+00	
00000000-0000-0000-0000-000000000000	7a126c9e-910e-4ab2-b21e-ce3799e24803	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 22:13:31.685874+00	
00000000-0000-0000-0000-000000000000	20a139bb-095a-4e13-85cc-2e2aaad9d6b5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 23:41:53.90708+00	
00000000-0000-0000-0000-000000000000	2e8e92ac-66c4-4d9d-994a-75a8d1ff8332	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-24 23:41:53.90857+00	
00000000-0000-0000-0000-000000000000	a3d85ad1-7edc-4a63-8df7-a763f8ef0bba	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:05:03.250361+00	
00000000-0000-0000-0000-000000000000	c3dc8e35-d632-42bb-8e90-301bc9e58808	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:05:03.251883+00	
00000000-0000-0000-0000-000000000000	b681f015-ba0c-4e09-b43b-6d6adbf70eea	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:32:21.247083+00	
00000000-0000-0000-0000-000000000000	1cd67450-b127-4458-b1d2-0ca40b68ba02	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:32:21.248107+00	
00000000-0000-0000-0000-000000000000	2caec9b7-c2e2-4d02-ad1a-2fe2d739b15d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:40:52.977239+00	
00000000-0000-0000-0000-000000000000	64dad334-822f-480c-b978-b428787a399e	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 00:40:52.978838+00	
00000000-0000-0000-0000-000000000000	c46fa174-28c9-4b40-8481-9a3f5d43de86	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 01:22:25.069643+00	
00000000-0000-0000-0000-000000000000	4b0a9e17-ccbb-4449-b0f2-d70123483f9f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 01:22:25.071093+00	
00000000-0000-0000-0000-000000000000	269b0e9b-c300-4709-8226-0a635ca32394	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 01:24:15.836714+00	
00000000-0000-0000-0000-000000000000	3b1f8c7e-8d3b-4f6f-8377-108d612a81a8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 01:24:15.838392+00	
00000000-0000-0000-0000-000000000000	db7cab7d-c8e3-4d29-83f5-9d789bff4815	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 02:20:27.907421+00	
00000000-0000-0000-0000-000000000000	db256ad3-9efe-434f-8004-ba875cac28a9	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 02:20:27.908791+00	
00000000-0000-0000-0000-000000000000	3205655a-0416-47da-b398-384aed1848a5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 02:34:00.904131+00	
00000000-0000-0000-0000-000000000000	df9e15ab-a85d-4b67-b13e-3f15b655c862	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 02:34:00.905559+00	
00000000-0000-0000-0000-000000000000	e86e9bc0-c654-4074-a105-39b9308948bc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 02:57:23.346333+00	
00000000-0000-0000-0000-000000000000	6ad53aa0-4fb8-4d45-95eb-e80f9dfcf7ad	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 02:57:23.465949+00	
00000000-0000-0000-0000-000000000000	adac05c1-248d-4699-90bc-e8457fa2a34f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-25 02:57:24.05402+00	
00000000-0000-0000-0000-000000000000	abfa151e-712d-4002-8e62-f1b8362558d6	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-25 02:57:24.137375+00	
00000000-0000-0000-0000-000000000000	0ba92057-2554-492a-bd4c-f434a84516ca	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 02:57:24.236631+00	
00000000-0000-0000-0000-000000000000	9bd0108b-da2a-4e2f-9e32-3fa44092ed5e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 02:57:24.335253+00	
00000000-0000-0000-0000-000000000000	2b906624-33bf-4c5a-9359-3d152565c2fe	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758769044851@example.com","user_id":"2b95b809-b7d3-4f27-8c31-986b48c519f2","user_phone":""}}	2025-09-25 02:57:25.16852+00	
00000000-0000-0000-0000-000000000000	97df89bb-3a23-47a4-a836-ea69320ac546	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758769045214@example.com","user_id":"093ef0ca-d70b-496d-afb8-d35cf630ac94","user_phone":""}}	2025-09-25 02:57:25.782745+00	
00000000-0000-0000-0000-000000000000	e29b938c-72ae-4888-84f1-248ba3d7b66f	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758769044851@example.com","user_id":"2b95b809-b7d3-4f27-8c31-986b48c519f2","user_phone":""}}	2025-09-25 02:57:26.631378+00	
00000000-0000-0000-0000-000000000000	1c8ef728-28ae-46d8-ba85-13039005a58c	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758769045214@example.com","user_id":"093ef0ca-d70b-496d-afb8-d35cf630ac94","user_phone":""}}	2025-09-25 02:57:27.756873+00	
00000000-0000-0000-0000-000000000000	c33b0036-8547-408f-8fad-eb97018ef2e2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 03:00:22.098108+00	
00000000-0000-0000-0000-000000000000	c6c41f97-62ba-4adc-9b74-93b779d4bf7e	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-25 03:12:32.826896+00	
00000000-0000-0000-0000-000000000000	7eb08d2c-db29-4a75-a77d-ab439c32e6c6	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 03:18:52.070432+00	
00000000-0000-0000-0000-000000000000	ed0b15cb-748d-478e-91fb-a6ac4b771d44	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 03:18:52.071723+00	
00000000-0000-0000-0000-000000000000	ca1775ca-fab8-4c6c-a5e1-3e0b8074b11b	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 03:19:34.120056+00	
00000000-0000-0000-0000-000000000000	85eee576-5638-4a27-bcdc-d64dc7d2b2c3	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 03:19:34.120967+00	
00000000-0000-0000-0000-000000000000	74a259a0-714e-4368-831a-335e601e36bb	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 12:53:07.078078+00	
00000000-0000-0000-0000-000000000000	4fe2cc77-af99-440b-862a-42907d449e49	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 12:53:07.079871+00	
00000000-0000-0000-0000-000000000000	e6ebf41f-b802-46ea-a1fd-d8ad439fbfa5	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 13:00:50.784077+00	
00000000-0000-0000-0000-000000000000	80538adc-f0d3-498d-a2c5-baf3cbddb179	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:01:29.887413+00	
00000000-0000-0000-0000-000000000000	7aa42e12-9b14-4c30-9cd6-157e8ef83e96	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:01:29.888169+00	
00000000-0000-0000-0000-000000000000	0e5c6cab-7d9c-427d-966a-a623892c311d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:51:10.904337+00	
00000000-0000-0000-0000-000000000000	9cd4f8cc-c139-4e7e-be47-0bd5d72609e3	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:51:10.905414+00	
00000000-0000-0000-0000-000000000000	fc5a7d48-85a7-410d-8543-143d6183c4e4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:59:04.951483+00	
00000000-0000-0000-0000-000000000000	a382121d-2fbf-48bf-8582-2cb484db01dc	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:59:04.952573+00	
00000000-0000-0000-0000-000000000000	4b0471f6-a028-4afb-a162-a1e98fe7a107	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:59:34.25177+00	
00000000-0000-0000-0000-000000000000	e8c2bb44-2800-48c8-9156-6566b00c07fc	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 13:59:34.253029+00	
00000000-0000-0000-0000-000000000000	0adc6e4a-9e5c-49b9-bae8-c6f0fe99d031	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 14:57:04.92844+00	
00000000-0000-0000-0000-000000000000	d66ae73e-2ec8-4504-a2fb-cb678269c3fd	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 14:57:04.929741+00	
00000000-0000-0000-0000-000000000000	e46ef4b8-8607-4947-8a9b-efc3fac5f0d7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 15:55:05.008136+00	
00000000-0000-0000-0000-000000000000	f32d7b6d-7017-420d-a1a2-be3b638002cc	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 15:55:05.009465+00	
00000000-0000-0000-0000-000000000000	56ed2f96-8756-4024-9d90-c67dfb65b2f6	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 16:53:34.834561+00	
00000000-0000-0000-0000-000000000000	ab98fe0f-ef8a-4116-a765-4d264c526e76	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 16:53:34.835713+00	
00000000-0000-0000-0000-000000000000	51b2a36f-2a3d-46a6-a9db-83e0cd84f1f4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 17:51:35.129203+00	
00000000-0000-0000-0000-000000000000	b4369f37-3425-4d4c-818e-175361f396db	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 17:51:35.130831+00	
00000000-0000-0000-0000-000000000000	4111b5fa-d6d7-4c5f-ae87-fac08d2d6184	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:04.787306+00	
00000000-0000-0000-0000-000000000000	1b2d1fb9-69c0-4f5e-ac0c-bdf420ed1b98	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:04.788471+00	
00000000-0000-0000-0000-000000000000	fe1dab1e-11d4-4926-9ef4-5a4e37bdfb52	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:39.393473+00	
00000000-0000-0000-0000-000000000000	63aee787-6955-4f96-a528-f65df35df240	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:39.394538+00	
00000000-0000-0000-0000-000000000000	9c60916b-6d29-4c22-bec5-b853bbff592a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:39.578903+00	
00000000-0000-0000-0000-000000000000	c2ff399b-7613-41b9-b331-e2cc10c26704	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 18:50:39.579622+00	
00000000-0000-0000-0000-000000000000	fe3bfa2f-0a62-4e56-9697-0cc85977509e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 18:58:06.939721+00	
00000000-0000-0000-0000-000000000000	2608ec79-8ea1-4724-945f-c0d75757dd5f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-25 18:58:08.060976+00	
00000000-0000-0000-0000-000000000000	680b1332-3dc9-4330-b82c-20774b6744cb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 18:58:08.367486+00	
00000000-0000-0000-0000-000000000000	95b8b3eb-3feb-44a8-8e3a-f61758dba97a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 00:09:48.099644+00	
00000000-0000-0000-0000-000000000000	5f6a8350-7fbe-4174-b9fb-5ab44234a746	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758826689456@example.com","user_id":"51119054-79df-4b8c-a48f-280afc841e59","user_phone":""}}	2025-09-25 18:58:10.220911+00	
00000000-0000-0000-0000-000000000000	fa0136f2-744f-4997-99aa-fc2a1633e18c	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758826689456@example.com","user_id":"51119054-79df-4b8c-a48f-280afc841e59","user_phone":""}}	2025-09-25 18:58:12.773683+00	
00000000-0000-0000-0000-000000000000	4856cbba-ceaf-4c73-820e-5dd30386b4cc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 19:28:01.689971+00	
00000000-0000-0000-0000-000000000000	7bc2cfd7-a349-4777-9217-e8f757392931	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 19:31:02.825346+00	
00000000-0000-0000-0000-000000000000	4256ccf2-50c1-4eae-9531-4c49c3a25439	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-25 19:31:03.512315+00	
00000000-0000-0000-0000-000000000000	82c041c5-a084-448b-a853-5faa57b1f8b8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 19:31:03.68301+00	
00000000-0000-0000-0000-000000000000	839afc9e-10a2-499e-88da-7919e5ab12e8	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758828664448@example.com","user_id":"4ea9ae58-3253-4060-8092-6216d5014f87","user_phone":""}}	2025-09-25 19:31:04.839599+00	
00000000-0000-0000-0000-000000000000	ccb9402a-8c45-48d7-a9a5-18530aab2872	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758828664448@example.com","user_id":"4ea9ae58-3253-4060-8092-6216d5014f87","user_phone":""}}	2025-09-25 19:31:08.108939+00	
00000000-0000-0000-0000-000000000000	3cbe6c3e-8f58-47ac-ad3e-7b0ca00cbce2	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 19:48:05.090052+00	
00000000-0000-0000-0000-000000000000	f3cb6677-7a3b-49a0-a7d8-15ad19226111	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 19:48:05.091166+00	
00000000-0000-0000-0000-000000000000	0d651748-b012-41ff-8a55-957cf3e6defc	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 19:48:46.613688+00	
00000000-0000-0000-0000-000000000000	1d7d61d1-4392-41db-a4f5-3588396c2003	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 19:48:46.614357+00	
00000000-0000-0000-0000-000000000000	f4c4bcaa-520f-41db-ba86-0bac45dedd5f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 19:50:48.465528+00	
00000000-0000-0000-0000-000000000000	c2945490-40f2-44df-b681-dcb71bbd5677	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 20:46:16.49198+00	
00000000-0000-0000-0000-000000000000	bd765563-575c-481f-aaee-b18a59dcdefa	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 20:46:16.49307+00	
00000000-0000-0000-0000-000000000000	b135bb4a-f862-48fc-acf5-15d687bd8eea	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 20:49:12.095901+00	
00000000-0000-0000-0000-000000000000	992f99af-86b3-4647-8a3d-dac2fa895326	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 20:49:12.097466+00	
00000000-0000-0000-0000-000000000000	81b0b993-7a64-42ad-8e1c-5559970d8c67	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 20:58:14.65434+00	
00000000-0000-0000-0000-000000000000	eb02e73d-57df-41bc-b10d-bb0ce6f05b38	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:13:08.284367+00	
00000000-0000-0000-0000-000000000000	0d2aae22-6485-45fd-b64e-adcb9d2d3b29	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:13:08.285435+00	
00000000-0000-0000-0000-000000000000	7bb4e82c-762e-4987-a311-72792312786a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:13:15.261792+00	
00000000-0000-0000-0000-000000000000	da75c646-ba32-420a-b6d1-19c1ad615d4b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:13:15.262518+00	
00000000-0000-0000-0000-000000000000	c05fd11c-3704-45dd-94f8-72932d5c9a72	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:35:22.989691+00	
00000000-0000-0000-0000-000000000000	35ed49d8-52b8-444c-a2e6-e64e8b215f0d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-25 23:35:22.990899+00	
00000000-0000-0000-0000-000000000000	f8705ecd-326b-4871-af05-1aa436d3e95e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 23:41:53.205984+00	
00000000-0000-0000-0000-000000000000	770bc987-0312-4249-802c-73df550eb4a6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 23:55:32.143559+00	
00000000-0000-0000-0000-000000000000	b3f64d78-8f20-4308-ac96-3b8ef33ee5a4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-25 23:57:10.883955+00	
00000000-0000-0000-0000-000000000000	2f7247eb-0fec-41df-9436-904c9d906cfe	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 00:03:19.184297+00	
00000000-0000-0000-0000-000000000000	dd7d577a-270b-4b56-9737-d5ff93d79bc6	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 00:05:57.574195+00	
00000000-0000-0000-0000-000000000000	23a797f2-ff70-4146-84c7-e1368515f884	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 00:07:24.803596+00	
00000000-0000-0000-0000-000000000000	017b0cdd-2c29-43ca-9362-79d585e7d88f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 00:34:06.116074+00	
00000000-0000-0000-0000-000000000000	02092130-b2be-4f10-8b59-f75c0c30f9fe	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 01:32:27.198411+00	
00000000-0000-0000-0000-000000000000	771ce1f1-d5a7-4461-b2ca-506e9efc9379	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 01:32:27.199529+00	
00000000-0000-0000-0000-000000000000	84eb0804-85a1-4112-aedb-b557b27d4163	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 01:33:55.411241+00	
00000000-0000-0000-0000-000000000000	2445152f-f451-49f3-880f-f1c6b5544935	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 01:44:36.557761+00	
00000000-0000-0000-0000-000000000000	85177b06-7e5b-4843-8090-a80f2b399623	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 01:49:08.91663+00	
00000000-0000-0000-0000-000000000000	3a16858e-36ad-42cd-9a36-6a47bf51d035	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 01:49:08.917729+00	
00000000-0000-0000-0000-000000000000	a5edd06a-1c64-42c4-9729-7fa661136bd8	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 01:52:01.669906+00	
00000000-0000-0000-0000-000000000000	ad797d5c-834c-4b5b-b7e0-6b3b65c83c94	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 01:52:02.261265+00	
00000000-0000-0000-0000-000000000000	a2af976b-1e87-486a-aa37-7791ca11ee9d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 01:52:02.427425+00	
00000000-0000-0000-0000-000000000000	28ffe3ca-19b9-4eb6-9454-68c3ed0caba0	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758851523063@example.com","user_id":"71b994aa-5bb0-48d7-80a1-18e3d9226278","user_phone":""}}	2025-09-26 01:52:03.369646+00	
00000000-0000-0000-0000-000000000000	74dd1276-3f09-4c2b-bbdf-d6addc76c630	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758851523063@example.com","user_id":"71b994aa-5bb0-48d7-80a1-18e3d9226278","user_phone":""}}	2025-09-26 01:52:04.882305+00	
00000000-0000-0000-0000-000000000000	aebee0cb-e710-4ab9-b2c6-8054b513cb05	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:00:59.337169+00	
00000000-0000-0000-0000-000000000000	f61838f6-c24f-462f-b81b-29441f375053	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:05:33.395489+00	
00000000-0000-0000-0000-000000000000	eb810244-2416-4b2a-aaeb-4c5c783b45bf	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 02:05:34.520535+00	
00000000-0000-0000-0000-000000000000	1fea54c1-177f-4b00-959d-80d8110c06ec	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:05:34.819808+00	
00000000-0000-0000-0000-000000000000	9e1de184-d7a1-4275-bdaf-9ddaf801d465	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758852335965@example.com","user_id":"f3ef5b03-49b7-4d74-957e-e5c8edf7a483","user_phone":""}}	2025-09-26 02:05:36.593705+00	
00000000-0000-0000-0000-000000000000	0debc29e-440b-4142-9caa-9feb0c2d9397	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758852335965@example.com","user_id":"f3ef5b03-49b7-4d74-957e-e5c8edf7a483","user_phone":""}}	2025-09-26 02:05:38.574835+00	
00000000-0000-0000-0000-000000000000	6cc6395c-b6b6-414a-8829-d5a8773d2f60	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:18:41.129026+00	
00000000-0000-0000-0000-000000000000	ea10bca1-7e0f-4ee3-9248-b8508dfa2754	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:20:11.148286+00	
00000000-0000-0000-0000-000000000000	26a68261-981d-4c7d-8c27-31282a6f50c1	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:20:36.614919+00	
00000000-0000-0000-0000-000000000000	42dd2fbf-ceb9-48df-8627-850d64c45d04	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:25:28.13964+00	
00000000-0000-0000-0000-000000000000	792ea9b2-b07c-42e2-9256-85bc9d93061d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 02:27:26.621247+00	
00000000-0000-0000-0000-000000000000	4912ffe9-5957-437c-be27-244bf4b4740c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 02:27:26.622706+00	
00000000-0000-0000-0000-000000000000	d7550141-363a-4399-8f0c-b03bac0c8bed	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:58:44.903987+00	
00000000-0000-0000-0000-000000000000	4654830a-ab3e-4d39-adde-4d6c3fc5b7f5	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 02:58:45.795401+00	
00000000-0000-0000-0000-000000000000	0c0434c6-30be-451e-9cc1-829db3b71730	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 02:58:46.121723+00	
00000000-0000-0000-0000-000000000000	a334db8e-91ef-4223-9695-4e00bdc1949c	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758855527326@example.com","user_id":"db4be47e-b2fe-400e-8c50-59eb076e80eb","user_phone":""}}	2025-09-26 02:58:47.975945+00	
00000000-0000-0000-0000-000000000000	b594b37b-355e-4ca4-a603-5bf2bb069215	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758855527326@example.com","user_id":"db4be47e-b2fe-400e-8c50-59eb076e80eb","user_phone":""}}	2025-09-26 02:58:50.539059+00	
00000000-0000-0000-0000-000000000000	51e3f568-e064-4d8a-9030-590976f33ab9	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 03:00:57.112135+00	
00000000-0000-0000-0000-000000000000	39afec99-175d-41d7-aa74-4ac6ef82b31f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 03:00:57.113646+00	
00000000-0000-0000-0000-000000000000	f52c4860-eecb-4b68-9c22-70a3d466e19c	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 03:08:41.077273+00	
00000000-0000-0000-0000-000000000000	3b56d314-0e37-474d-9b37-695b0f458610	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 03:08:41.0789+00	
00000000-0000-0000-0000-000000000000	aa4782e0-8feb-4a91-a453-63ac27fc6dc4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 03:19:54.878905+00	
00000000-0000-0000-0000-000000000000	0112c170-98b2-4662-8437-45008b964a8a	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 03:58:01.313259+00	
00000000-0000-0000-0000-000000000000	ca1bbc45-b975-4a25-903f-2640a5f7a02b	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 12:21:11.948527+00	
00000000-0000-0000-0000-000000000000	ec0dc66d-9bd4-48b1-84a7-884ef7be4115	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 12:21:11.949988+00	
00000000-0000-0000-0000-000000000000	d9af1f1d-04bb-4aa5-a7a7-df78b7e1cd95	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 12:52:54.899174+00	
00000000-0000-0000-0000-000000000000	0ae6c350-f179-4439-a7b2-3c790e3208c8	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 13:14:37.101626+00	
00000000-0000-0000-0000-000000000000	c1eb5a9f-55b6-4f7c-b803-53ba0cce0f5c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 13:14:37.103015+00	
00000000-0000-0000-0000-000000000000	a823ec08-49f9-4f2a-b9e8-ba2b21122da2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:40:09.723778+00	
00000000-0000-0000-0000-000000000000	69351e48-b334-4afd-b80a-62aefddbe0da	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 13:40:10.798315+00	
00000000-0000-0000-0000-000000000000	f70bbfc2-bb08-4c87-a80e-0091aa7d875e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:40:10.992451+00	
00000000-0000-0000-0000-000000000000	63c17bab-61d5-4bae-90bd-78143a93918d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758894011900@example.com","user_id":"8f1a1b4f-6be4-476e-afa8-b88da0394003","user_phone":""}}	2025-09-26 13:40:12.397344+00	
00000000-0000-0000-0000-000000000000	882ca035-d222-46b2-be12-bd21560af090	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758894011900@example.com","user_id":"8f1a1b4f-6be4-476e-afa8-b88da0394003","user_phone":""}}	2025-09-26 13:40:14.60019+00	
00000000-0000-0000-0000-000000000000	7def807f-c89d-4501-8775-0f1f36e737d0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:41:37.229435+00	
00000000-0000-0000-0000-000000000000	2ecdc081-8d26-4b71-a4f2-f0383b45b425	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 13:41:37.720061+00	
00000000-0000-0000-0000-000000000000	ca2829f4-9ab8-4318-87ba-3b21a7da64d0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:41:37.852775+00	
00000000-0000-0000-0000-000000000000	dc69a176-2835-40bd-885e-644ad62cf363	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758894098458@example.com","user_id":"abcb375b-c84d-421b-aa1b-dd55b864ebe1","user_phone":""}}	2025-09-26 13:41:38.714771+00	
00000000-0000-0000-0000-000000000000	f4d9259f-ae22-434a-a032-1ab17115b22f	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758894098458@example.com","user_id":"abcb375b-c84d-421b-aa1b-dd55b864ebe1","user_phone":""}}	2025-09-26 13:41:40.128978+00	
00000000-0000-0000-0000-000000000000	8923f78e-eb65-4de0-b4bc-9e07c189ed73	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:43:52.90804+00	
00000000-0000-0000-0000-000000000000	fc19dacd-a83b-41d6-bd88-307c67bf8e3f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-26 13:43:53.49772+00	
00000000-0000-0000-0000-000000000000	a90f0de2-c73e-4457-abd1-eb6517399d3e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:43:53.640286+00	
00000000-0000-0000-0000-000000000000	8c57f8ac-c2ab-434c-b64f-965837464589	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758894234314@example.com","user_id":"f337de8a-682a-4731-ac53-fb14b66bdccb","user_phone":""}}	2025-09-26 13:43:54.6344+00	
00000000-0000-0000-0000-000000000000	39868892-3c5d-46de-9c8b-7f8ca7f83639	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758894234314@example.com","user_id":"f337de8a-682a-4731-ac53-fb14b66bdccb","user_phone":""}}	2025-09-26 13:43:56.067994+00	
00000000-0000-0000-0000-000000000000	274730dd-35d1-4576-ae53-945c6058061a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:45:23.459045+00	
00000000-0000-0000-0000-000000000000	2ce04843-b449-4214-b557-454806e76ab7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 13:45:37.90546+00	
00000000-0000-0000-0000-000000000000	77fe186c-f426-49bc-8dc8-908296ce9ee1	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 14:34:43.972269+00	
00000000-0000-0000-0000-000000000000	d4e3a964-3b86-46a0-964d-867842adada4	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 14:34:43.973753+00	
00000000-0000-0000-0000-000000000000	df4dc538-08ab-4e7d-9a80-85dd7e3d68ff	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 16:06:51.267994+00	
00000000-0000-0000-0000-000000000000	9537708b-2671-4f84-bd43-60db7bd66d08	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 16:06:51.269099+00	
00000000-0000-0000-0000-000000000000	d728d481-f8b5-4acb-bc05-988d1f82e276	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 18:02:24.79983+00	
00000000-0000-0000-0000-000000000000	f2c71af0-1e28-4f3d-b742-6023e4b4d394	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 18:02:24.801124+00	
00000000-0000-0000-0000-000000000000	5a3eb686-76d4-42c7-acb1-7f38c89b9ce0	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 18:29:03.129217+00	
00000000-0000-0000-0000-000000000000	3dc34500-4f4b-4f22-a63d-60ce2097d178	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 18:29:03.13076+00	
00000000-0000-0000-0000-000000000000	a99b3192-6065-4e3e-97d7-80e397235142	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:01:12.299474+00	
00000000-0000-0000-0000-000000000000	64f0c8a7-c52a-4635-bd45-165e209b4b2d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:01:12.301003+00	
00000000-0000-0000-0000-000000000000	fe2594d2-1847-46e9-8315-74ce7170fd5b	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:59:12.850851+00	
00000000-0000-0000-0000-000000000000	f347c5dd-e682-47fa-bbdb-781f9bea1a4f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:59:12.852297+00	
00000000-0000-0000-0000-000000000000	a9a1116c-7c43-47e5-bf14-5d940ca541b7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:59:38.460679+00	
00000000-0000-0000-0000-000000000000	a145f7ef-861f-415b-a051-a4abd5fa8553	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 19:59:38.461476+00	
00000000-0000-0000-0000-000000000000	f2557ba5-6f3d-44c4-9225-51023fbf4b0f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 20:04:20.307792+00	
00000000-0000-0000-0000-000000000000	67d4fe68-f4cf-4482-bafe-c6a2eb6d5858	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 20:04:20.308901+00	
00000000-0000-0000-0000-000000000000	fcadf647-2c56-4b98-b7e1-4d8361ff5b4f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 20:44:06.688625+00	
00000000-0000-0000-0000-000000000000	7278f21f-75c0-4948-b18e-7ab001ff0140	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 20:44:21.967135+00	
00000000-0000-0000-0000-000000000000	9c2a4cb4-44f9-4d2c-9472-82480ffa5710	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 21:50:37.706919+00	
00000000-0000-0000-0000-000000000000	1b198cd4-6116-449c-98a4-176bcde17622	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 21:50:37.708312+00	
00000000-0000-0000-0000-000000000000	1473c551-ef81-4007-8e09-b961755bc399	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:12:17.303224+00	
00000000-0000-0000-0000-000000000000	8747f5b4-005d-45c0-a037-2ab94c919622	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:12:17.304773+00	
00000000-0000-0000-0000-000000000000	8187c1ac-fab0-43d2-be6b-b12b1754dc60	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:12:19.919289+00	
00000000-0000-0000-0000-000000000000	3fd15b9d-f9e8-4e23-89e6-fbb2483223d8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:12:19.920059+00	
00000000-0000-0000-0000-000000000000	23e86480-dd31-4601-b163-e93aa85ed153	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:48:43.795111+00	
00000000-0000-0000-0000-000000000000	f9a1162c-9509-4b89-b6d6-730a6b662b35	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 22:48:43.796176+00	
00000000-0000-0000-0000-000000000000	fe02eb79-9180-4c90-a9bf-b4563e9cc296	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-26 22:52:05.456778+00	
00000000-0000-0000-0000-000000000000	ea8c3a26-51be-4d2b-a8f6-0284d14c13a7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 23:46:56.157953+00	
00000000-0000-0000-0000-000000000000	ab77504f-984e-4e99-8489-9a9ae5ee10c8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 23:46:56.159013+00	
00000000-0000-0000-0000-000000000000	87c0f512-af0b-4773-be12-0320f02c36b6	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 23:58:42.201068+00	
00000000-0000-0000-0000-000000000000	58c93af6-5098-41c0-b626-432d8b3aee73	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-26 23:58:42.203228+00	
00000000-0000-0000-0000-000000000000	5aeb5eb8-19da-4fcd-8978-d308241b0456	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 01:02:59.645768+00	
00000000-0000-0000-0000-000000000000	da869776-08a6-4d0b-919f-9a3efdbaa508	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 01:02:59.646899+00	
00000000-0000-0000-0000-000000000000	863ff728-9347-4b08-bc7a-fa5b759beec4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 02:01:32.85618+00	
00000000-0000-0000-0000-000000000000	a7aee254-9f53-44ce-9987-8c63d7291596	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 02:01:32.857328+00	
00000000-0000-0000-0000-000000000000	02a4c643-9911-482b-af81-a6a35655e62d	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 02:14:25.866254+00	
00000000-0000-0000-0000-000000000000	250e646f-8e5e-4991-b14f-4c8cbc45483a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 02:23:20.805267+00	
00000000-0000-0000-0000-000000000000	182db980-a3f2-4fe6-929c-3095dc1f7d55	{"action":"login","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 02:23:23.415273+00	
00000000-0000-0000-0000-000000000000	c21fab26-730b-4619-a0bb-46126d2a22b3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 03:43:21.741991+00	
00000000-0000-0000-0000-000000000000	1fb67716-cfd2-42f4-8287-c097703a499a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 03:43:21.743319+00	
00000000-0000-0000-0000-000000000000	b064a860-b75e-42d7-802f-5568a4720cef	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 05:18:41.757732+00	
00000000-0000-0000-0000-000000000000	13f74361-7041-4a30-bb71-667e754ef88a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 05:18:41.759126+00	
00000000-0000-0000-0000-000000000000	e2e427ff-7baf-451a-9852-7720b986d506	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 07:45:45.342995+00	
00000000-0000-0000-0000-000000000000	ea3a476e-a2da-477b-87e0-fa68b470302c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 07:45:45.349608+00	
00000000-0000-0000-0000-000000000000	a6a3229b-2800-4e93-9923-b38635376e8f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 12:57:27.82796+00	
00000000-0000-0000-0000-000000000000	b19835f6-8192-45ec-b0c8-a3c179a4e014	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 12:57:27.829267+00	
00000000-0000-0000-0000-000000000000	dd0d1ff3-8391-41ff-a8fe-d25fda9189ac	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 13:08:50.462407+00	
00000000-0000-0000-0000-000000000000	c06ab998-016b-4bcf-aa18-f7be66d816bc	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:09:47.642269+00	
00000000-0000-0000-0000-000000000000	d8846c1a-3523-4f21-a5cb-895cbfbd1ce7	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:09:47.643779+00	
00000000-0000-0000-0000-000000000000	8cc6c308-d3c9-4963-9e8a-0c7f8be9effc	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 14:16:27.509326+00	
00000000-0000-0000-0000-000000000000	eba8432b-01f4-4feb-aa6d-33f3cfe34be5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:34:55.88613+00	
00000000-0000-0000-0000-000000000000	f4c95c42-bc8e-459d-bb7b-f5532c92ebef	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:34:55.887699+00	
00000000-0000-0000-0000-000000000000	87731bd7-bbc1-45c3-9f07-f137c2a5826d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:57:22.620625+00	
00000000-0000-0000-0000-000000000000	a94a3b92-c3e2-4714-8127-0f71119b635d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 14:57:22.622187+00	
00000000-0000-0000-0000-000000000000	112863b2-ae4c-4762-9520-a8d3b9c74879	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:14:29.536065+00	
00000000-0000-0000-0000-000000000000	a5c5282d-3450-40c1-814c-e0c46a8e1f33	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:14:29.537568+00	
00000000-0000-0000-0000-000000000000	f20c4ba6-197b-4c20-b0bd-b6d0b654247b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:45:05.933677+00	
00000000-0000-0000-0000-000000000000	1ed3085a-2363-45d5-bd63-bfa8cbdbf818	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:45:22.47606+00	
00000000-0000-0000-0000-000000000000	e1b0a086-37ef-4d70-a614-c9ea48426e6e	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:45:39.161792+00	
00000000-0000-0000-0000-000000000000	b99ee85e-8724-418a-9804-853dfc5e7e79	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:45:44.860909+00	
00000000-0000-0000-0000-000000000000	69b464e5-37a9-4192-96a2-e1246e437bb4	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:45:44.861691+00	
00000000-0000-0000-0000-000000000000	9b1b0e4a-c335-4559-8b01-1f0794797e07	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:45:51.196706+00	
00000000-0000-0000-0000-000000000000	a8df1b36-1773-4fc0-b940-6623d92b8033	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-27 15:45:55.049299+00	
00000000-0000-0000-0000-000000000000	f66ce27d-a32a-4ccd-af27-7f8d54fc725b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:45:55.210612+00	
00000000-0000-0000-0000-000000000000	33684eae-7527-4a8c-8412-3d4fb826beb7	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758987955849@example.com","user_id":"b8e8ecf0-a11f-4650-acdb-8b6c40d27bf1","user_phone":""}}	2025-09-27 15:45:56.115435+00	
00000000-0000-0000-0000-000000000000	ebea98d2-0cc3-4cdc-846c-6c05ea876bbe	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758987955849@example.com","user_id":"b8e8ecf0-a11f-4650-acdb-8b6c40d27bf1","user_phone":""}}	2025-09-27 15:45:57.562659+00	
00000000-0000-0000-0000-000000000000	1f53daf7-a4fc-4322-84dc-a1eee900cf20	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:53:27.690097+00	
00000000-0000-0000-0000-000000000000	e65a052d-8f24-428e-8ea0-e0049092b806	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 15:53:27.691491+00	
00000000-0000-0000-0000-000000000000	6c4c94f7-a277-48ae-b05b-be737437ff74	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:53:35.114545+00	
00000000-0000-0000-0000-000000000000	3f266fc1-a605-4c2e-8318-b464382dd9b7	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:53:45.535598+00	
00000000-0000-0000-0000-000000000000	9771d7c5-0373-474e-828b-146d7c32e248	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:54:02.20575+00	
00000000-0000-0000-0000-000000000000	9d239049-2d7e-4158-b5bd-cae8b0c1ac61	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:54:18.98824+00	
00000000-0000-0000-0000-000000000000	4fb33986-70d5-4d4b-88da-987e37afd219	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-27 15:54:34.81733+00	
00000000-0000-0000-0000-000000000000	67fb9f2f-98f9-4788-abca-3e8567ce29aa	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 15:54:34.963012+00	
00000000-0000-0000-0000-000000000000	10f44353-c7d5-476c-8d2d-c95bc67110b7	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758988475648@example.com","user_id":"8c857ad9-48b5-4be0-9f7c-2f22e7a35dda","user_phone":""}}	2025-09-27 15:54:35.942518+00	
00000000-0000-0000-0000-000000000000	c0f9042e-cc6c-4b0e-a395-b836cc7094f2	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758988475648@example.com","user_id":"8c857ad9-48b5-4be0-9f7c-2f22e7a35dda","user_phone":""}}	2025-09-27 15:54:37.42956+00	
00000000-0000-0000-0000-000000000000	f014246a-4f46-4f40-bab9-41d1160a6153	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:01:29.687694+00	
00000000-0000-0000-0000-000000000000	887677ca-7ea1-4e7b-b045-9ea872c18eff	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:01:46.268636+00	
00000000-0000-0000-0000-000000000000	4e5a98af-2f17-4da7-a357-b703983098d3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:02:03.030085+00	
00000000-0000-0000-0000-000000000000	5b5dd3c8-b031-4770-80f6-0b33c6d72bcd	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-27 16:02:18.787843+00	
00000000-0000-0000-0000-000000000000	295f9054-a640-42ad-a6ca-4ef16a902d77	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:02:18.910617+00	
00000000-0000-0000-0000-000000000000	7626e8e9-8f38-4632-bc4c-2e9d9b60d3aa	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758988939556@example.com","user_id":"ed74fd4b-112f-4928-8ad0-f8140dcbc0ec","user_phone":""}}	2025-09-27 16:02:19.809829+00	
00000000-0000-0000-0000-000000000000	b90c1932-86f1-4f2f-b6b6-438caa389c79	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758988939556@example.com","user_id":"ed74fd4b-112f-4928-8ad0-f8140dcbc0ec","user_phone":""}}	2025-09-27 16:02:21.2446+00	
00000000-0000-0000-0000-000000000000	c3b007df-0074-486d-8105-79b1ee44e56b	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:03:18.417811+00	
00000000-0000-0000-0000-000000000000	f0e9c15d-9fa3-402a-b15f-cbb765f1ce40	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:03:35.066677+00	
00000000-0000-0000-0000-000000000000	9787e360-6632-45a1-8ee3-89878e5010bb	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:03:51.818483+00	
00000000-0000-0000-0000-000000000000	3d9fbd1c-d337-4014-833f-21bf240c804d	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-27 16:04:07.62774+00	
00000000-0000-0000-0000-000000000000	28b0d5d6-dc3a-4eb9-88e1-c24852e8c1b3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 16:04:07.75576+00	
00000000-0000-0000-0000-000000000000	d50f5944-118d-4396-840b-28432d8765b4	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1758989048429@example.com","user_id":"8aa47dc1-0435-4b1d-99e0-3c8c93e27239","user_phone":""}}	2025-09-27 16:04:08.687262+00	
00000000-0000-0000-0000-000000000000	4e475005-43c7-4022-8cce-c0126c2d146d	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1758989048429@example.com","user_id":"8aa47dc1-0435-4b1d-99e0-3c8c93e27239","user_phone":""}}	2025-09-27 16:04:10.12671+00	
00000000-0000-0000-0000-000000000000	9bbacdf5-b908-4291-8219-412b19ed5e5f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:49:37.953877+00	
00000000-0000-0000-0000-000000000000	d69d9937-2746-4b75-a53f-49abe9840887	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:49:37.955175+00	
00000000-0000-0000-0000-000000000000	97b13b10-00f5-46ac-a63e-c779bfd8547d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:51:41.761973+00	
00000000-0000-0000-0000-000000000000	29c7c425-9432-4afa-8bfa-4e189672424c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:51:41.763026+00	
00000000-0000-0000-0000-000000000000	0ab0b0d5-68e9-4492-acf3-3ddd9ebb3352	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:53:32.247244+00	
00000000-0000-0000-0000-000000000000	2d2f833e-5ca9-4178-a8fe-68ac9646dc69	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 16:53:32.248843+00	
00000000-0000-0000-0000-000000000000	a7c5fe7d-819a-4c56-b2f9-fe6ee117f625	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 17:20:53.843076+00	
00000000-0000-0000-0000-000000000000	be1d96e0-c9d6-4d66-9197-0e3d6231ab1e	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 17:46:35.729108+00	
00000000-0000-0000-0000-000000000000	ce48e141-c0ad-4da7-bf1d-50e236243966	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 17:46:35.7302+00	
00000000-0000-0000-0000-000000000000	85c7e8fa-2e2b-460f-9ed0-832fcbf7cbbf	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 18:18:56.965646+00	
00000000-0000-0000-0000-000000000000	ef496a21-3105-4e63-a739-92cd8184675a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 18:18:56.967367+00	
00000000-0000-0000-0000-000000000000	85d4f59e-238d-421e-8dfb-9c8b679811a7	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 19:17:00.54424+00	
00000000-0000-0000-0000-000000000000	11d2a66d-ec7f-4972-b2a3-d28f5e80960c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 19:17:00.545471+00	
00000000-0000-0000-0000-000000000000	0c735f48-a81c-44bb-a1b8-ee1a8bf68af3	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-27 19:30:21.372588+00	
00000000-0000-0000-0000-000000000000	98c6417f-fe2f-476d-ab1c-2533b6432745	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 20:28:49.062006+00	
00000000-0000-0000-0000-000000000000	e0b5721a-9bac-4da5-b7cb-afa90bef1cb0	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 20:28:49.063035+00	
00000000-0000-0000-0000-000000000000	2dbfee5e-e81d-4be4-b31c-c53b27d46b13	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 21:32:20.112896+00	
00000000-0000-0000-0000-000000000000	da03634f-19c5-4b9f-8adb-9e51456a24b6	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 21:32:20.114422+00	
00000000-0000-0000-0000-000000000000	6db6f093-9768-4c1c-bf53-0317ab9ba537	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 21:44:35.275927+00	
00000000-0000-0000-0000-000000000000	7d48196e-7cbf-4e1d-b089-4643222bc785	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 21:44:35.277976+00	
00000000-0000-0000-0000-000000000000	a5603fbe-e5e2-4473-a30c-fb8dd609cda2	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 22:30:33.761284+00	
00000000-0000-0000-0000-000000000000	28c3276b-1ced-4850-8145-bc6d68e721cb	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 22:30:33.762776+00	
00000000-0000-0000-0000-000000000000	ced9b07c-4923-4cf7-bc20-ce739aff5e15	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 22:47:51.308975+00	
00000000-0000-0000-0000-000000000000	646f4323-3b52-4307-9c46-6ccb12597189	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 22:47:51.31048+00	
00000000-0000-0000-0000-000000000000	42680768-fc36-4dde-87c2-c7a36c661aa8	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 23:28:45.403827+00	
00000000-0000-0000-0000-000000000000	b51d6f14-d0dc-4beb-aff1-0b294ba5d5a6	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-27 23:28:45.40541+00	
00000000-0000-0000-0000-000000000000	9d36eafa-8f3e-468d-9aa5-fd79d2fcc097	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 00:29:01.51653+00	
00000000-0000-0000-0000-000000000000	19642ff8-38eb-4b23-88e5-24ce3c331f90	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 00:29:01.518369+00	
00000000-0000-0000-0000-000000000000	91e52df3-cc50-4087-b8f1-053edc80c4dd	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 00:29:31.683314+00	
00000000-0000-0000-0000-000000000000	5779591d-4f8b-468b-811d-2dee22519953	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 00:29:31.684436+00	
00000000-0000-0000-0000-000000000000	d0396b8a-f960-4eb7-81f1-f575595f6507	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 00:31:23.978019+00	
00000000-0000-0000-0000-000000000000	214f6a73-f8f7-4ea2-abcb-b65b9e5eb858	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 01:38:21.273157+00	
00000000-0000-0000-0000-000000000000	395ba023-4dc5-4c1a-a1e8-1e0066a42ef7	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 01:38:21.274482+00	
00000000-0000-0000-0000-000000000000	04e4115e-0d56-450f-a7cb-9898d9335f73	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:14:55.758224+00	
00000000-0000-0000-0000-000000000000	7918d2c1-dbbd-49d5-a666-b1e09b1481ad	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:14:55.760365+00	
00000000-0000-0000-0000-000000000000	96af24c5-be2d-4ea5-9b5e-2f801bdf027d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:14:55.771878+00	
00000000-0000-0000-0000-000000000000	18603e19-f1e0-43fe-8e8e-4af8ff0af0ca	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:14:55.773083+00	
00000000-0000-0000-0000-000000000000	e8a9be59-5cd2-45ca-8daf-4298547c6532	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:36:43.191261+00	
00000000-0000-0000-0000-000000000000	6a40d232-38ab-4665-ba8a-82aa1060fcb6	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 02:36:43.192728+00	
00000000-0000-0000-0000-000000000000	9cc4aea7-5ebe-4322-8790-25fd75ed039e	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:02:56.430355+00	
00000000-0000-0000-0000-000000000000	e234f36c-caa6-4c9c-8360-51f5e5f47f8d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:02:56.431737+00	
00000000-0000-0000-0000-000000000000	3f621ab2-3151-4721-9d31-12c90e2fa125	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:10:47.853978+00	
00000000-0000-0000-0000-000000000000	09be750d-20f1-4c5d-b77e-eeaee286790f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:11:04.465169+00	
00000000-0000-0000-0000-000000000000	97824600-60e1-4456-9c74-b882425f6aa4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:11:21.38879+00	
00000000-0000-0000-0000-000000000000	8c2c7add-31ad-4bea-8661-4cd8f02ca56f	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 03:11:37.421519+00	
00000000-0000-0000-0000-000000000000	846e986c-516e-463d-b849-8b63061f832f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:11:37.61083+00	
00000000-0000-0000-0000-000000000000	e7195278-73a0-4431-801f-2b897a44a9da	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1759029098482@example.com","user_id":"6f3d67c5-4b97-4d96-a685-f95d2b4ff13e","user_phone":""}}	2025-09-28 03:11:38.935733+00	
00000000-0000-0000-0000-000000000000	c5a73ac7-7f14-4fdc-a15c-221ca4c31812	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1759029098482@example.com","user_id":"6f3d67c5-4b97-4d96-a685-f95d2b4ff13e","user_phone":""}}	2025-09-28 03:11:40.836679+00	
00000000-0000-0000-0000-000000000000	ba33cf69-6174-4806-a4fa-e41727356ef5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:13:02.589533+00	
00000000-0000-0000-0000-000000000000	7ad7b524-f402-4077-8b69-42694ee5a060	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:13:02.5908+00	
00000000-0000-0000-0000-000000000000	45405834-5875-49eb-a1f6-4432ded91a4a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:13:59.702909+00	
00000000-0000-0000-0000-000000000000	daa66369-a750-4605-8511-b51c9586ef40	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 03:13:59.703811+00	
00000000-0000-0000-0000-000000000000	1b32a11f-dd45-4025-abbc-d1702c756e4f	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:22:36.090756+00	
00000000-0000-0000-0000-000000000000	e74f1456-f3f4-4a6e-b977-74ddc838b4b0	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:22:52.746008+00	
00000000-0000-0000-0000-000000000000	ef65554d-8d71-419a-854d-b10c305d3894	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:23:09.448931+00	
00000000-0000-0000-0000-000000000000	01a2c6d5-1faf-46f5-a590-3de0217a1342	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 03:23:25.320022+00	
00000000-0000-0000-0000-000000000000	7a0c67d5-e517-4add-a6c8-778635f22739	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 03:23:25.523095+00	
00000000-0000-0000-0000-000000000000	515eea9e-a8c7-4aea-b17c-d3d578b38942	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"e2e+1759029806951@example.com","user_id":"c45aca02-b232-4d06-a3d9-1bbe5388f262","user_phone":""}}	2025-09-28 03:23:27.69157+00	
00000000-0000-0000-0000-000000000000	3c31d603-34f7-4d0c-be23-fe2199b63f22	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"e2e+1759029806951@example.com","user_id":"c45aca02-b232-4d06-a3d9-1bbe5388f262","user_phone":""}}	2025-09-28 03:23:30.175007+00	
00000000-0000-0000-0000-000000000000	d8d7b27d-bf3f-4a42-92a1-47a55ec65d71	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 05:41:30.43516+00	
00000000-0000-0000-0000-000000000000	e2aa6c44-d005-4b4c-8d27-a6275ec25d7b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 05:41:30.436885+00	
00000000-0000-0000-0000-000000000000	b5b8bae0-642f-496b-85dc-7f35ff3c2bd1	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 05:51:09.113703+00	
00000000-0000-0000-0000-000000000000	33c3a33d-3a04-4d29-bda0-d5e4b3efb13d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 05:51:09.115151+00	
00000000-0000-0000-0000-000000000000	38c7c6c8-b97a-4884-96c2-22c779bc124a	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 06:03:32.104395+00	
00000000-0000-0000-0000-000000000000	5480d7cb-0732-4760-b960-7fd64a519679	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 06:04:17.085651+00	
00000000-0000-0000-0000-000000000000	10e63d8b-0506-45d2-a2db-64a51f0f17ea	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 06:49:06.985065+00	
00000000-0000-0000-0000-000000000000	463db96e-18e8-49cf-9be0-f66fa63b5554	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 06:51:13.134891+00	
00000000-0000-0000-0000-000000000000	35908bcf-28df-4956-9952-a7510d7399a5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 06:51:13.13609+00	
00000000-0000-0000-0000-000000000000	a78d9af3-385b-400d-9e34-0a0b88b38f1c	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 07:42:04.574281+00	
00000000-0000-0000-0000-000000000000	1a7225c9-aa91-416e-aaf5-212fceccc2d3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 07:44:24.042507+00	
00000000-0000-0000-0000-000000000000	c06a7b97-b3ab-4ec5-a894-01fa8417d22a	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 07:44:24.044109+00	
00000000-0000-0000-0000-000000000000	166ccec7-7fe6-4a7e-b4d4-1063ddd669a4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 13:24:22.61607+00	
00000000-0000-0000-0000-000000000000	188f8963-12a6-4853-bae6-2773981e1339	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 13:24:22.617644+00	
00000000-0000-0000-0000-000000000000	56ceb647-7cf8-466c-9186-120c0d52a541	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 14:28:04.256036+00	
00000000-0000-0000-0000-000000000000	6409f91d-924e-46a6-babb-bebb3a488fd8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 14:28:04.257125+00	
00000000-0000-0000-0000-000000000000	969878a6-623d-4502-8963-8c7996653eb0	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 14:41:40.503707+00	
00000000-0000-0000-0000-000000000000	ee90ad20-ee84-4d0b-be77-d33db8821130	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 14:41:40.504807+00	
00000000-0000-0000-0000-000000000000	6555a1ca-8971-42d5-a59e-ff8f8ef2680f	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 15:17:15.876181+00	
00000000-0000-0000-0000-000000000000	eb787cbe-7d41-447f-b693-3570f2d8d48f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 15:17:15.880117+00	
00000000-0000-0000-0000-000000000000	a5333543-a376-4d4d-bd97-3417973b80f1	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 15:26:16.270677+00	
00000000-0000-0000-0000-000000000000	51b3e8e7-3fc9-4c68-89b9-0e7b42b43ee0	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 15:26:16.272163+00	
00000000-0000-0000-0000-000000000000	eb1c8633-6b11-49da-9014-17b5d53d99da	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 15:31:58.006032+00	
00000000-0000-0000-0000-000000000000	4aa75182-a6ac-458f-837f-737848a290f2	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 15:47:50.787243+00	
00000000-0000-0000-0000-000000000000	70592f62-f459-4d3d-9fc1-6c5a006d820a	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testing8@example.com","user_id":"859c5050-ba6d-4f65-80b1-79cd0af53dea","user_phone":""}}	2025-09-28 16:05:05.359968+00	
00000000-0000-0000-0000-000000000000	b47cc74a-ade5-450a-958a-6d82c1fa65f4	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"testing8@example.com","user_id":"859c5050-ba6d-4f65-80b1-79cd0af53dea","user_phone":""}}	2025-09-28 16:14:36.795358+00	
00000000-0000-0000-0000-000000000000	45901007-435a-467e-bc02-3c834661aacd	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 16:15:37.977218+00	
00000000-0000-0000-0000-000000000000	5ab51c1b-5018-493e-9c26-1dbcbc5f9a66	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 16:15:37.978634+00	
00000000-0000-0000-0000-000000000000	dcb90e57-1ec2-43a3-9e57-55ab5ef83dd2	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 16:47:51.081427+00	
00000000-0000-0000-0000-000000000000	4c734743-d38a-4920-ae61-2481a4015731	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 16:47:51.084068+00	
00000000-0000-0000-0000-000000000000	e9a73c90-364f-4d68-b42d-bf6f210a1f78	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 16:57:31.547634+00	
00000000-0000-0000-0000-000000000000	9132a9c5-41af-4fe2-9ee0-841e039603d0	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 17:55:32.902657+00	
00000000-0000-0000-0000-000000000000	436ac3a1-4497-4b05-bbd7-1c77cba3045c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 17:55:32.904156+00	
00000000-0000-0000-0000-000000000000	3623c13d-5a76-4608-8016-ff2d3af4680a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 18:53:46.686573+00	
00000000-0000-0000-0000-000000000000	50b0076b-308e-4a08-8da6-5c96749a87d5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 18:53:46.688021+00	
00000000-0000-0000-0000-000000000000	8e541381-ba1f-49fa-9bb1-56c15acb44ec	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 20:20:30.749031+00	
00000000-0000-0000-0000-000000000000	ce1d45fe-478c-475a-b355-2a3b4865c6a1	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 20:20:30.750074+00	
00000000-0000-0000-0000-000000000000	6a596732-7755-4859-be2f-ac7f630c5dd3	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 21:18:37.705096+00	
00000000-0000-0000-0000-000000000000	d5eab596-2469-4d09-9988-cd06c8a2d08d	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 21:18:37.706342+00	
00000000-0000-0000-0000-000000000000	0cb59c23-741c-4ae0-a816-cd62dfb3dfdf	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-28 21:22:14.64558+00	
00000000-0000-0000-0000-000000000000	0c3a6819-9c59-45d1-8f5f-0d15a69136d8	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:48:10.085507+00	
00000000-0000-0000-0000-000000000000	0db38fe3-492b-4aff-9d39-1166459416ee	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:48:27.735576+00	
00000000-0000-0000-0000-000000000000	ca043e8c-c25d-4af8-81da-40ffa40fddd2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:48:43.947013+00	
00000000-0000-0000-0000-000000000000	d17be2d5-aed6-4295-9cea-a0f329c7bfe0	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"steven@kgaytravel.com","user_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","user_phone":""}}	2025-09-28 21:48:59.790753+00	
00000000-0000-0000-0000-000000000000	58367d44-535c-4d5e-9cb3-c1e14d718a41	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:51:01.17781+00	
00000000-0000-0000-0000-000000000000	e43a5def-0376-4f6a-ac6d-6cd7f0b54174	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:54:07.062904+00	
00000000-0000-0000-0000-000000000000	134f2b9e-1c57-4be4-bd4b-ec5b3025a985	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:54:15.98809+00	
00000000-0000-0000-0000-000000000000	51ab3c1f-0952-46a1-8e4d-212a5dbf1a38	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:55:41.951709+00	
00000000-0000-0000-0000-000000000000	9f2a60e7-098c-4d4c-b2b6-eefc073e14a9	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:55:49.54878+00	
00000000-0000-0000-0000-000000000000	181ff8b9-f411-428f-b24f-3b4767bf6224	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-28 21:55:58.560049+00	
00000000-0000-0000-0000-000000000000	901dce92-9dc6-41d9-a655-8dcef4fcb2dc	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testingh@example.com","user_id":"63f7df47-b95e-4a33-b593-c30c161b5602","user_phone":""}}	2025-09-28 21:56:51.199643+00	
00000000-0000-0000-0000-000000000000	3d37cf18-e075-4a49-8f77-d798e7f0d4e2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"testingh@example.com","user_id":"63f7df47-b95e-4a33-b593-c30c161b5602","user_phone":""}}	2025-09-28 21:57:10.873468+00	
00000000-0000-0000-0000-000000000000	ffbca60a-5e4d-4070-bdf5-1e0d4042782e	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testergh@example.com","user_id":"8f7536b7-7ef2-40d2-ba59-0806b70e3f37","user_phone":""}}	2025-09-28 21:58:30.472769+00	
00000000-0000-0000-0000-000000000000	ea265355-0156-4bf7-9870-d818c6f8f0cb	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testergh@example.com","user_id":"8f7536b7-7ef2-40d2-ba59-0806b70e3f37","user_phone":""}}	2025-09-28 22:03:33.112753+00	
00000000-0000-0000-0000-000000000000	e268116b-b505-43a2-99c6-7a4f248da835	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testingh@example.com","user_id":"63f7df47-b95e-4a33-b593-c30c161b5602","user_phone":""}}	2025-09-28 22:03:36.571706+00	
00000000-0000-0000-0000-000000000000	1ad03260-b4e4-460c-8f53-25d622c7cfa5	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testing8@example.com","user_id":"859c5050-ba6d-4f65-80b1-79cd0af53dea","user_phone":""}}	2025-09-28 22:03:40.33637+00	
00000000-0000-0000-0000-000000000000	d40db115-3d3b-470d-b5aa-b11792f9728b	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testing111@example.com","user_id":"3f59740f-b20e-462d-9204-7f7fdf914d61","user_phone":""}}	2025-09-28 22:07:16.204604+00	
00000000-0000-0000-0000-000000000000	4b96dc8e-5d89-41b2-a64a-66bbde820876	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"testing111@example.com","user_id":"3f59740f-b20e-462d-9204-7f7fdf914d61","user_phone":""}}	2025-09-28 22:09:57.164916+00	
00000000-0000-0000-0000-000000000000	be2573e6-9203-43b8-8d7f-6043539e4940	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"testing111@example.com","user_id":"3f59740f-b20e-462d-9204-7f7fdf914d61","user_phone":""}}	2025-09-28 22:10:10.298758+00	
00000000-0000-0000-0000-000000000000	4294dd07-f0ef-4950-bb8b-caa123114c44	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"testinghhhhhh@gmail.com","user_id":"6a1c534f-b6ff-4e2e-9557-492949519550","user_phone":""}}	2025-09-28 22:10:48.196578+00	
00000000-0000-0000-0000-000000000000	7b3948b6-7c1a-4791-86e9-cc9f9da7658b	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testinghhhhhh@gmail.com","user_id":"6a1c534f-b6ff-4e2e-9557-492949519550","user_phone":""}}	2025-09-28 22:14:42.984732+00	
00000000-0000-0000-0000-000000000000	efbba03d-194e-4ca5-a071-0d2613ee367a	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"testing111@example.com","user_id":"3f59740f-b20e-462d-9204-7f7fdf914d61","user_phone":""}}	2025-09-28 22:14:46.15213+00	
00000000-0000-0000-0000-000000000000	124ff7e5-c952-4406-810b-12072b18654d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"bryanhhhh333@gmail.com","user_id":"93102c82-0bcf-4bdb-be59-2efd4ae09dbb","user_phone":""}}	2025-09-28 22:17:25.549941+00	
00000000-0000-0000-0000-000000000000	36abb04a-7cfc-4762-8d1b-f4ad3d2b0211	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"bryanhhhh333@gmail.com","user_id":"93102c82-0bcf-4bdb-be59-2efd4ae09dbb","user_phone":""}}	2025-09-28 22:17:38.581857+00	
00000000-0000-0000-0000-000000000000	82db69c4-bb8d-4aa4-a27b-d195a628b833	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"dasdasassda@gmail.com","user_id":"7be0259d-13c3-4127-8629-51171afc5334","user_phone":""}}	2025-09-28 22:18:40.908056+00	
00000000-0000-0000-0000-000000000000	de26c18b-5757-4cb2-9683-431b5ef449b9	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"dasdasassda@gmail.com","user_id":"7be0259d-13c3-4127-8629-51171afc5334","user_phone":""}}	2025-09-28 22:18:42.124531+00	
00000000-0000-0000-0000-000000000000	7a877d3d-93f2-4579-aac1-466577067ca5	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"dasdasassda@gmail.com","user_id":"21617e57-0064-4987-8377-c155a95cedb5","user_phone":""}}	2025-09-28 22:18:53.396444+00	
00000000-0000-0000-0000-000000000000	bed91899-9057-49f4-9757-beb6215ff895	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"dasdasassda@gmail.com","user_id":"21617e57-0064-4987-8377-c155a95cedb5","user_phone":""}}	2025-09-28 22:18:54.573932+00	
00000000-0000-0000-0000-000000000000	67ba45c5-f65c-475a-8c5d-507626a24802	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"sdasdadsa@gmail.com","user_id":"c6deaf8b-ac4a-449f-86a5-de04b8030ca8","user_phone":""}}	2025-09-28 22:19:56.871364+00	
00000000-0000-0000-0000-000000000000	4a596a1b-d746-4df6-8155-81bbe9c6aeb8	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 22:20:55.38648+00	
00000000-0000-0000-0000-000000000000	1c83c477-dde0-4bf4-bf1e-d3795c754f1c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 22:20:55.387298+00	
00000000-0000-0000-0000-000000000000	4a6ebb64-e4ef-4f0b-9fea-0c1e4b920833	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"sffdsfds@gmail.com","user_id":"de09537a-6e11-4acc-9320-31d45c711b90","user_phone":""}}	2025-09-28 22:22:54.298938+00	
00000000-0000-0000-0000-000000000000	9b8ee3f5-56ef-43ad-9b0e-522a1a96e1d6	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"sassasa@gmail.com","user_id":"799ebfff-13fb-4aa3-a60d-8fe3a0576279","user_phone":""}}	2025-09-28 22:26:17.499513+00	
00000000-0000-0000-0000-000000000000	c6b4174c-6382-48ad-84e9-0c1b3bf555dc	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"sassasa@gmail.com","user_id":"799ebfff-13fb-4aa3-a60d-8fe3a0576279","user_phone":""}}	2025-09-28 22:34:25.932217+00	
00000000-0000-0000-0000-000000000000	466a837f-fa10-42ec-a72f-0b9d32893560	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"sffdsfds@gmail.com","user_id":"de09537a-6e11-4acc-9320-31d45c711b90","user_phone":""}}	2025-09-28 22:34:28.083135+00	
00000000-0000-0000-0000-000000000000	afafdee4-46aa-40d8-b158-760a11dc5165	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"sdasdadsa@gmail.com","user_id":"c6deaf8b-ac4a-449f-86a5-de04b8030ca8","user_phone":""}}	2025-09-28 22:34:30.678617+00	
00000000-0000-0000-0000-000000000000	5036c549-6049-4103-9a23-87a894c9a62d	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"bryan@gmail.com","user_id":"d3f741a7-65ef-4afe-a093-334874df7d66","user_phone":""}}	2025-09-28 22:35:28.587338+00	
00000000-0000-0000-0000-000000000000	70a9e112-d1db-4e6d-8ec6-f6c4b19bc835	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"bryan@gmail.com","user_id":"d3f741a7-65ef-4afe-a093-334874df7d66","user_phone":""}}	2025-09-28 22:36:12.776515+00	
00000000-0000-0000-0000-000000000000	22f9ad73-bc6a-4b39-8f57-fe99adad9a9d	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 22:51:19.233291+00	
00000000-0000-0000-0000-000000000000	90da32f1-35c8-44be-b65a-cedfbf07df29	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 22:51:19.234773+00	
00000000-0000-0000-0000-000000000000	1f7ee08b-6896-462d-9a03-f1fed23b665e	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 23:18:32.156495+00	
00000000-0000-0000-0000-000000000000	84e35222-95be-4cbc-85fa-caec485ee818	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 23:18:32.15756+00	
00000000-0000-0000-0000-000000000000	9545c2d4-daed-4847-bc68-6cd3171f3523	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 23:19:26.074438+00	
00000000-0000-0000-0000-000000000000	0bc6f3eb-6494-4e90-b1bc-e50b0cb05d9e	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-28 23:19:26.075119+00	
00000000-0000-0000-0000-000000000000	0e7312d2-804f-4ebf-8d74-dbfb9a6af24a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:17:32.910305+00	
00000000-0000-0000-0000-000000000000	846affaa-4c54-480a-a42a-820d1d3fcb68	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:17:32.911344+00	
00000000-0000-0000-0000-000000000000	b223e7d7-249f-4d95-8024-c83dfe4026e5	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:20:31.539328+00	
00000000-0000-0000-0000-000000000000	4c8dbb80-bf8b-46dd-a2a9-50fdc847ba7f	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:20:31.540697+00	
00000000-0000-0000-0000-000000000000	3dda74f9-7dbf-4991-9a17-1a2736130ad4	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:22:21.588772+00	
00000000-0000-0000-0000-000000000000	2b8508b6-d3a2-4185-9bd9-ffd6df784408	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 00:22:21.590001+00	
00000000-0000-0000-0000-000000000000	46d57afc-dfaa-48b7-9740-c95b890b1abb	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:15:51.763841+00	
00000000-0000-0000-0000-000000000000	b42bed56-1ea9-48fa-8add-df31b96ab629	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:15:51.765415+00	
00000000-0000-0000-0000-000000000000	3d858496-94fd-4f9e-a139-00ae0b91b657	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:21:58.418042+00	
00000000-0000-0000-0000-000000000000	285da509-45b2-4ec8-8405-8e29397107b3	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:21:58.419254+00	
00000000-0000-0000-0000-000000000000	c36116b3-692f-40be-a3f0-51a14d28b9cd	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:59:04.9539+00	
00000000-0000-0000-0000-000000000000	401151e9-c85d-4193-b63f-ec47af1c81b8	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 01:59:04.95502+00	
00000000-0000-0000-0000-000000000000	2a44148e-72dc-49ba-af57-8f8a394d2d69	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 02:15:54.632729+00	
00000000-0000-0000-0000-000000000000	71924e16-0fa8-47d9-a6fe-f24a199e02c9	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 02:15:54.634164+00	
00000000-0000-0000-0000-000000000000	d70f3f7a-c28d-4611-9065-4710e1ee73ef	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 02:20:12.269647+00	
00000000-0000-0000-0000-000000000000	914a500d-25b9-4581-9f01-13501584cd7b	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 02:20:12.271192+00	
00000000-0000-0000-0000-000000000000	4ec8d097-d9c2-47c1-b781-2179650e2801	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 12:10:43.241125+00	
00000000-0000-0000-0000-000000000000	e3ca82c4-5987-4219-a5e1-4627009d1203	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 12:10:43.242648+00	
00000000-0000-0000-0000-000000000000	8937686a-27ab-45a8-b488-83fd07e43ec2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-29 12:52:50.105587+00	
00000000-0000-0000-0000-000000000000	79d830a2-e1a5-4153-922d-8a0d670acb99	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 13:09:04.054291+00	
00000000-0000-0000-0000-000000000000	2ce60de0-dd4f-4335-91f0-202bd2cd50c9	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 13:09:04.055847+00	
00000000-0000-0000-0000-000000000000	610305a5-af9f-4417-b2bc-0fcf109eb4d2	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-29 13:20:18.735065+00	
00000000-0000-0000-0000-000000000000	f9a59360-8088-4620-9175-36d5bfdac974	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"bryhearnchi@gmail.com","user_id":"46a2f8f9-64f6-4873-8f3e-23264ee0f4c3","user_phone":""}}	2025-09-29 13:26:20.407489+00	
00000000-0000-0000-0000-000000000000	a03450fd-695f-456e-bfbf-5e116bb9624a	{"action":"user_modified","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"user","traits":{"user_email":"admin@atlantis.com","user_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","user_phone":""}}	2025-09-29 13:32:22.033302+00	
00000000-0000-0000-0000-000000000000	d9e616df-7ec8-41e8-8721-7dd94ff18aa2	{"action":"token_refreshed","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 13:47:27.908913+00	
00000000-0000-0000-0000-000000000000	9f81bd3a-b163-4891-a4b2-3445274e5ac2	{"action":"token_revoked","actor_id":"b7ce34ce-bbf1-4793-a827-559c510fcb1a","actor_name":"Steven K","actor_username":"steven@kgaytravel.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 13:47:27.910353+00	
00000000-0000-0000-0000-000000000000	09366fb3-0b97-410e-b48d-715eda4d84b4	{"action":"login","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-29 14:15:50.118151+00	
00000000-0000-0000-0000-000000000000	6557b2ea-03ec-4cb3-b160-f58fe32f69c1	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 16:15:58.856402+00	
00000000-0000-0000-0000-000000000000	b542076b-bd0e-48df-bd2e-e86974aa0eb6	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 16:15:58.857553+00	
00000000-0000-0000-0000-000000000000	561a8854-246e-40d0-9242-1afddd3444ba	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 17:20:56.990488+00	
00000000-0000-0000-0000-000000000000	8a62c5b3-8b55-487e-ab7c-791d6df9cddd	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 17:20:56.991719+00	
00000000-0000-0000-0000-000000000000	ca240093-c579-43a0-a61f-306ad57d8f27	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 17:28:40.598004+00	
00000000-0000-0000-0000-000000000000	89eb5ea5-6814-4b38-80a2-0c0b68487523	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 17:28:40.599593+00	
00000000-0000-0000-0000-000000000000	bbeb306d-7e11-4373-9ef8-60050210a577	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 18:18:58.846959+00	
00000000-0000-0000-0000-000000000000	e7866010-3bd7-459a-a490-9b834c17a078	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 18:18:58.848424+00	
00000000-0000-0000-0000-000000000000	70aa22db-11ef-4570-b3b6-e2ea8fcc8441	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 18:34:34.693247+00	
00000000-0000-0000-0000-000000000000	d9abafbe-ee02-4874-8704-7cf3e1f0d7d5	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 18:34:34.694573+00	
00000000-0000-0000-0000-000000000000	96fdd125-0257-48a6-989d-87eb47ce348b	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 19:22:51.134036+00	
00000000-0000-0000-0000-000000000000	21970cb4-2286-42a9-be60-3916bd33914c	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 19:22:51.135826+00	
00000000-0000-0000-0000-000000000000	05666982-9f02-40e8-a345-65902e6dd825	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 19:40:41.363976+00	
00000000-0000-0000-0000-000000000000	30573c99-5677-40ed-aa7a-4c7c7a9d0c10	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 19:40:41.365125+00	
00000000-0000-0000-0000-000000000000	20cb02b6-1e2e-4787-9805-f6d131480d3a	{"action":"token_refreshed","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 20:49:21.174623+00	
00000000-0000-0000-0000-000000000000	7b76c1c3-0f4e-4c09-8a1a-6cfcd5f255de	{"action":"token_revoked","actor_id":"fca9d04a-e82a-43ad-b72a-127df226e75a","actor_username":"admin@atlantis.com","actor_via_sso":false,"log_type":"token"}	2025-09-29 20:49:21.176827+00	
\.


--
-- Data for Name: flow_state; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.flow_state (id, user_id, auth_code, code_challenge_method, code_challenge, provider_type, provider_access_token, provider_refresh_token, created_at, updated_at, authentication_method, auth_code_issued_at) FROM stdin;
\.


--
-- Data for Name: identities; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.identities (provider_id, user_id, identity_data, provider, last_sign_in_at, created_at, updated_at, id) FROM stdin;
c39b6edd-41bc-4b17-8d5c-375ef0f8d453	c39b6edd-41bc-4b17-8d5c-375ef0f8d453	{"sub": "c39b6edd-41bc-4b17-8d5c-375ef0f8d453", "email": "admin@kgay.com", "email_verified": false, "phone_verified": false}	email	2025-09-16 03:40:55.47227+00	2025-09-16 03:40:55.472331+00	2025-09-16 03:40:55.472331+00	c07780cd-d6cd-4f44-89b1-70ab013f1787
b7ce34ce-bbf1-4793-a827-559c510fcb1a	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"sub": "b7ce34ce-bbf1-4793-a827-559c510fcb1a", "email": "steven@kgaytravel.com", "email_verified": false, "phone_verified": false}	email	2025-09-20 16:44:44.477568+00	2025-09-20 16:44:44.477618+00	2025-09-20 16:44:44.477618+00	4368b2dd-dd8f-4d5e-88c7-db5ba601e305
46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"sub": "46a2f8f9-64f6-4873-8f3e-23264ee0f4c3", "email": "bryhearnchi@gmail.com", "email_verified": false, "phone_verified": false}	email	2025-09-22 14:16:31.80517+00	2025-09-22 14:16:31.805227+00	2025-09-22 14:16:31.805227+00	ca3351ed-ad28-4c74-b51e-1f024b5c2a78
fca9d04a-e82a-43ad-b72a-127df226e75a	fca9d04a-e82a-43ad-b72a-127df226e75a	{"sub": "fca9d04a-e82a-43ad-b72a-127df226e75a", "email": "admin@atlantis.com", "email_verified": false, "phone_verified": false}	email	2025-09-16 04:06:16.986699+00	2025-09-16 04:06:16.986772+00	2025-09-16 04:06:16.986772+00	afd73f62-87b2-4116-b292-38423f8fb928
\.


--
-- Data for Name: instances; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.instances (id, uuid, raw_base_config, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: mfa_amr_claims; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_amr_claims (session_id, created_at, updated_at, authentication_method, id) FROM stdin;
3ebec739-ab41-42e1-9f44-6ca026ccf22a	2025-09-22 13:49:03.092101+00	2025-09-22 13:49:03.092101+00	password	230138be-2f2c-4854-94ef-c9fc23cbb90a
c9352571-ba34-46ac-903c-6a5fd28b04ff	2025-09-22 13:59:30.855349+00	2025-09-22 13:59:30.855349+00	password	8f1cd2b2-e7dc-4f22-b994-6f88440b5377
b358ce44-49d9-4536-b654-ab9c7648900a	2025-09-22 14:01:48.106463+00	2025-09-22 14:01:48.106463+00	password	eb2579a8-c6a3-4baa-a0a3-6c620439bb33
d6d11e12-17f6-40e6-bd67-9eb7d1e72eed	2025-09-22 14:09:06.141941+00	2025-09-22 14:09:06.141941+00	password	05332c55-df34-4fca-a665-9c9194cb246d
05f961ff-406c-4bfe-8476-fc9c0b39da15	2025-09-22 14:13:37.753034+00	2025-09-22 14:13:37.753034+00	password	3a0c4b62-68bb-4593-bf4f-f3f0d4d4ad58
3150c680-2a4d-4ddb-8aee-626ae6ee1043	2025-09-22 14:20:43.430647+00	2025-09-22 14:20:43.430647+00	password	efe2d0d2-d32f-4d47-b55a-4e85fcefd51e
997677dd-abdb-40e6-ba38-4c1581c342c0	2025-09-22 14:21:04.82348+00	2025-09-22 14:21:04.82348+00	password	b18761a6-ee64-44e3-8b27-5d855614c585
2ad7f87f-f1d4-4ee0-858b-e64fcbc650c8	2025-09-22 18:01:09.12534+00	2025-09-22 18:01:09.12534+00	password	e0112792-4ae5-487f-a0c9-93e12fa654ef
9a2c99f2-5d6c-4c5a-a5a7-b5838c412080	2025-09-22 21:08:37.435975+00	2025-09-22 21:08:37.435975+00	password	ea0dbfb9-7688-4939-bb85-67f0164c8a11
342eda7e-30b4-44a8-a258-1f202196b92f	2025-09-22 21:08:37.462468+00	2025-09-22 21:08:37.462468+00	password	1d44b3d4-9b4c-4aa6-843c-0dee0318c8ed
3733c2ba-c579-437d-8d59-406037110ccd	2025-09-22 21:10:24.596816+00	2025-09-22 21:10:24.596816+00	password	a0a82ac6-e7ed-4ce9-8516-aa636e549549
5f4a8140-02c4-4333-840a-3b902b344596	2025-09-22 21:10:56.396769+00	2025-09-22 21:10:56.396769+00	password	9591dd15-7f49-4f4e-b2f2-fcc02248f095
0a4392b3-6674-4a78-b944-2a009d896066	2025-09-22 21:13:30.850264+00	2025-09-22 21:13:30.850264+00	password	0a712ece-f485-45b8-b24c-08e2881da947
74e0057e-a520-47f9-bb0b-acbcd162e34c	2025-09-22 21:13:30.855315+00	2025-09-22 21:13:30.855315+00	password	0c8244ad-8ec9-4efc-bcd2-7a0301917966
49f4aaf9-1c2e-4e59-8c54-a032903a55ae	2025-09-22 21:29:58.026905+00	2025-09-22 21:29:58.026905+00	password	fb865480-cedd-4df5-9d88-003e9eb9ea84
add0cfae-bed1-44f5-8d77-e3ea9d117f69	2025-09-22 21:29:58.040289+00	2025-09-22 21:29:58.040289+00	password	959903fd-10b9-4932-97c4-9d2fb195e096
0c741295-d194-4b22-9e51-e19d146c5d7a	2025-09-22 21:31:53.973125+00	2025-09-22 21:31:53.973125+00	password	866152bf-935e-4067-b940-fc60ff2e0795
9e515341-0f4f-4a0a-a247-b47d79754499	2025-09-22 21:31:53.979987+00	2025-09-22 21:31:53.979987+00	password	3a172803-81d3-412c-b514-e82345316ba7
74431909-a0eb-4238-b7fa-6745bfd3fdc2	2025-09-22 21:33:59.656448+00	2025-09-22 21:33:59.656448+00	password	8b85bf85-0923-4195-8a9f-4d917444d575
ee96ebbf-241c-4321-8f45-db11198ab74d	2025-09-22 21:33:59.706766+00	2025-09-22 21:33:59.706766+00	password	2bfed4ac-35f0-4a71-ada2-480643abd614
f70d423e-809a-47d1-8ab4-e3ddd818c769	2025-09-22 21:46:17.67904+00	2025-09-22 21:46:17.67904+00	password	00bc36aa-41b4-4eed-b816-20290fa277b8
76deaacf-1268-4e83-ae6e-b317b0475fd0	2025-09-22 21:46:17.71801+00	2025-09-22 21:46:17.71801+00	password	0f1d219c-46ba-462d-8cff-10a7b7d93da0
eec4c124-899e-4628-9cce-5d530327957d	2025-09-22 22:03:15.020231+00	2025-09-22 22:03:15.020231+00	password	1879223f-7606-4884-bdfa-05686d52c453
f9201503-0f2b-461b-b01f-2cebd6d85d52	2025-09-22 22:06:20.089825+00	2025-09-22 22:06:20.089825+00	password	18ec51d0-dc99-4770-aee6-b0acfc253366
4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e	2025-09-22 22:06:40.175863+00	2025-09-22 22:06:40.175863+00	password	e85d3f85-e0a3-48e5-95bb-602f999ba2da
bea99ab9-284a-4a7c-9942-429b99588372	2025-09-22 22:40:38.112189+00	2025-09-22 22:40:38.112189+00	password	4ef7cb0a-1ca6-442f-95fe-128f7c91b3c2
2ae8bbf7-3812-4714-8e65-337b44652650	2025-09-22 23:00:44.436906+00	2025-09-22 23:00:44.436906+00	password	686539e3-729d-4b33-848f-76907b00fb50
ffdd4d8b-ce58-4ff1-90fc-89ba14902767	2025-09-22 23:00:44.444066+00	2025-09-22 23:00:44.444066+00	password	bd03cecc-2dfb-4fa5-8c0c-1f4ceb15b34d
49ca16d3-e616-418e-82c5-aa248cdbbad9	2025-09-22 23:00:45.49986+00	2025-09-22 23:00:45.49986+00	password	e0244fae-ee4d-45e8-8824-245e8c41208f
f3bf7505-2cb4-46ff-8077-fde77827a301	2025-09-22 23:31:04.120077+00	2025-09-22 23:31:04.120077+00	password	5aa8c816-2a40-458c-ac38-d837ec964634
f9da6c0b-073a-4fab-bc17-a0dcdfe6d850	2025-09-22 23:31:04.787843+00	2025-09-22 23:31:04.787843+00	password	81c7dab7-d758-4ab4-9167-aa1186143b54
e7f88f0b-efae-4f18-a4d3-58a7157c2b08	2025-09-22 23:39:54.298677+00	2025-09-22 23:39:54.298677+00	password	06880460-5648-4f5b-8813-5ed47078924a
7ada8d2a-1787-44e3-8701-9c9803eb05fa	2025-09-22 23:39:55.026254+00	2025-09-22 23:39:55.026254+00	password	6ee9b034-f074-4b3d-8a61-12962395c7bd
f3a7aed8-f626-4fcd-989f-6206bfb6b7be	2025-09-22 23:47:27.649541+00	2025-09-22 23:47:27.649541+00	password	1fdc9d6e-7263-402a-9354-694331b3df2c
ceda9236-d6d2-4192-a5bb-8e4e10b54008	2025-09-22 23:47:28.549303+00	2025-09-22 23:47:28.549303+00	password	2e64e0b2-7a5b-4c03-92e5-24dc4799aa0a
594bbf85-7eba-46e5-8af0-b69c45d9756a	2025-09-22 23:54:43.155283+00	2025-09-22 23:54:43.155283+00	password	6198cea6-2add-4c2e-8af4-611108de32c0
7434296c-192e-44ef-b569-f90fe5f55462	2025-09-22 23:54:43.892938+00	2025-09-22 23:54:43.892938+00	password	091becc9-8f49-4d3e-8d07-95cf463821c1
4067d7c3-1ca9-4da5-a0f9-ce70603b2ef8	2025-09-23 00:06:47.346991+00	2025-09-23 00:06:47.346991+00	password	19374504-7b39-4e7a-a078-a56892e394c1
2b839e4e-5f0b-4637-9dcd-892ca918a5f7	2025-09-23 00:06:48.738679+00	2025-09-23 00:06:48.738679+00	password	f3e5c150-c7b3-453a-b27d-e2d65bc4bef9
e67cdca9-60ad-49c4-8623-a19d9d94330c	2025-09-23 00:10:13.924924+00	2025-09-23 00:10:13.924924+00	password	1480c52f-5693-4373-a485-204ce9e2c03e
1d7c1c48-902a-4815-af22-eeba9dcf14d7	2025-09-23 00:10:15.240389+00	2025-09-23 00:10:15.240389+00	password	68a76469-a57a-461d-8010-d4d3d71542fd
743b8c33-fc19-49f6-a454-04b0012bc044	2025-09-23 00:11:21.938292+00	2025-09-23 00:11:21.938292+00	password	8ceaca4d-2996-4ca2-ac12-c9631664199c
d812a59d-3a2a-45f2-9756-b071ecfa0f1e	2025-09-23 00:11:22.689336+00	2025-09-23 00:11:22.689336+00	password	8aa851c9-0f78-4470-8380-1111cf9f161c
5fa4d284-a828-424c-80cc-0842f86321b4	2025-09-23 00:15:26.461428+00	2025-09-23 00:15:26.461428+00	password	05a7aad4-6647-4832-a7c9-c1217830687c
2aeabd4b-b668-4716-8a3d-713fe2df89ea	2025-09-23 00:15:27.302409+00	2025-09-23 00:15:27.302409+00	password	7cc5b863-0966-4af8-aaf6-4d9f47c822ab
de24884d-699c-4a2c-92bd-f2812c89162d	2025-09-23 00:22:26.617407+00	2025-09-23 00:22:26.617407+00	password	eed1ae6b-c59b-455d-ab88-e04a7078aef7
01f7db29-a677-4da6-a92d-0840c06e8c26	2025-09-23 00:22:27.367252+00	2025-09-23 00:22:27.367252+00	password	9073d0ba-4851-4482-b6b8-e21de96a1885
a57f0f2c-7516-48a3-bf8a-17627cacf890	2025-09-23 00:29:07.248417+00	2025-09-23 00:29:07.248417+00	password	9cf42181-24d7-4410-bfef-66333ea34389
ba1a5df8-ed0a-4e1f-af43-0ca4b1bd0fff	2025-09-23 00:29:08.48991+00	2025-09-23 00:29:08.48991+00	password	df074400-e1ce-4652-9fdd-75188d11254c
f4035166-b3ff-4388-b9e8-a3bff09f7dcd	2025-09-23 00:33:34.974648+00	2025-09-23 00:33:34.974648+00	password	19228c8d-24ab-494e-8917-d1e2004b1eba
259340d9-4d2f-4620-9fe7-b76d44c9f29b	2025-09-23 00:33:35.643958+00	2025-09-23 00:33:35.643958+00	password	d65e6c05-706f-4356-8791-d6a6ddebc129
a5a9edee-65b8-43f3-a7a8-915d48819afa	2025-09-23 00:40:27.864086+00	2025-09-23 00:40:27.864086+00	password	4a48001e-550e-420c-be30-bf7ad742dbde
798a8bf5-5023-442a-bc7a-d3c5b42614ec	2025-09-23 00:40:29.101026+00	2025-09-23 00:40:29.101026+00	password	05b1b32c-abb9-4ac6-9cc3-72191ab59721
35805eb6-ee9a-4404-9f35-ff220dc23465	2025-09-23 00:41:55.181527+00	2025-09-23 00:41:55.181527+00	password	3bdb8f12-298f-4d33-8b11-fcfe7b66c25a
33e0ab3d-cc0c-48d0-8e19-7b4ba7246db1	2025-09-23 00:41:56.609592+00	2025-09-23 00:41:56.609592+00	password	14ee55a4-682c-40ac-a38c-20a6d7155b55
d9853f38-9ac7-476c-b61c-aed0349b94b0	2025-09-23 00:47:59.403178+00	2025-09-23 00:47:59.403178+00	password	bb214978-cffb-4f01-8d02-f311ebaa6708
36e821d5-a787-4c4f-bf67-ae58c4bd3842	2025-09-23 00:48:00.670148+00	2025-09-23 00:48:00.670148+00	password	4bcd32f2-8fdf-48ac-b23d-7d51dd473454
87a85634-02ef-40cd-8930-71e7cf89b37d	2025-09-23 00:57:44.008052+00	2025-09-23 00:57:44.008052+00	password	24accec3-287d-4e64-bbd1-fa6b89a73425
f02ee68c-1348-47c1-8e88-693516764f6d	2025-09-23 00:57:44.750032+00	2025-09-23 00:57:44.750032+00	password	0834883d-f8fc-40aa-b651-0004c12c9e5b
c899591b-b307-4ac6-a04a-ee37e259001d	2025-09-23 01:04:34.993805+00	2025-09-23 01:04:34.993805+00	password	85ed1990-d70d-4b7e-906a-abcf34a67197
7221f4e5-3506-44fa-8a2c-def1bdb9667e	2025-09-23 01:04:36.430351+00	2025-09-23 01:04:36.430351+00	password	be4b1953-8701-4b4c-9084-36bbbb4e7c42
caf1fd53-5493-47bf-be1c-4205413a0683	2025-09-23 01:08:53.625884+00	2025-09-23 01:08:53.625884+00	password	eee57665-5339-45bc-a8e4-9c140bc4f08d
087ad6c6-a3d4-4f1f-9768-5f698788424a	2025-09-23 01:08:54.521761+00	2025-09-23 01:08:54.521761+00	password	d1511e26-6c88-4be3-9333-f921608a4039
e1e8b2ed-87a6-49fb-85ab-ab5c5c5f8cbd	2025-09-23 01:16:47.16316+00	2025-09-23 01:16:47.16316+00	password	817fe53d-6030-480f-8de3-1abdea76f313
ffe7e017-449b-42c8-bb84-af7331269760	2025-09-23 01:16:47.911306+00	2025-09-23 01:16:47.911306+00	password	338bc2d5-98a8-44d8-b01c-3a5594ff0bd9
8750e9f7-738f-42d9-8964-a746c5c580e9	2025-09-23 01:17:07.028384+00	2025-09-23 01:17:07.028384+00	password	97928665-1a49-43ec-91df-da494fc61f37
f5a5e86c-79cb-4f08-af00-b2138232500d	2025-09-23 01:17:07.785991+00	2025-09-23 01:17:07.785991+00	password	baedef75-8b80-4242-ad97-73614a52955f
53c13018-ca31-4b39-8ce4-52cccfb4959f	2025-09-23 01:20:48.354688+00	2025-09-23 01:20:48.354688+00	password	3e1479e9-c813-40c0-a295-17b1060d16dd
9df4f900-6352-45e2-80ea-ce929db5e5b8	2025-09-23 01:20:49.147895+00	2025-09-23 01:20:49.147895+00	password	edf9cd27-6379-4cbd-838b-45076a2afc25
07dc9732-d87f-4743-be87-b0b39cc3135f	2025-09-23 01:29:12.471419+00	2025-09-23 01:29:12.471419+00	password	ed6c2ec3-c79b-49ea-acd4-36f228ac15c3
8273f8f0-6b4e-41a6-8466-55d639136d50	2025-09-23 01:29:13.209142+00	2025-09-23 01:29:13.209142+00	password	74137939-f439-481d-b294-ae9623202a76
b16c9bf6-414f-4125-9c46-a1c00c749ad7	2025-09-23 01:32:57.194302+00	2025-09-23 01:32:57.194302+00	password	b118821f-5d2d-4934-a490-7fe298282c16
2309c610-2b69-4831-a9ce-3842289a5974	2025-09-23 01:32:58.64492+00	2025-09-23 01:32:58.64492+00	password	2f8d2a6e-1754-4919-aa58-be29283366a4
4bfbb94a-efb2-4304-84ac-d95dcf37f5c2	2025-09-23 01:36:38.729698+00	2025-09-23 01:36:38.729698+00	password	afc0d532-d3f9-4c88-aad5-75e8504de104
0235f13d-0636-4084-8aa8-c2c6e0cb146e	2025-09-23 01:36:39.491258+00	2025-09-23 01:36:39.491258+00	password	29874c1a-0285-4ba9-ac73-f09478e6b471
93527f66-0098-4c70-9078-fd2f023efffa	2025-09-23 01:41:50.892519+00	2025-09-23 01:41:50.892519+00	password	db47cec1-b6b3-4c0a-a83b-08aeb7f41c33
d5d26239-107d-4b6b-be35-127e4ec21ecb	2025-09-23 01:41:51.633762+00	2025-09-23 01:41:51.633762+00	password	8420827f-833b-4ae7-a464-6f770d1cc04e
4ba4c7cd-1b2e-471a-9291-b35b0eccba16	2025-09-23 01:49:45.675511+00	2025-09-23 01:49:45.675511+00	password	7f5c78a1-5b23-4747-bf1b-f17efa7fffff
f723b604-d319-4a94-afb7-375f72c7f5a9	2025-09-23 01:49:46.4387+00	2025-09-23 01:49:46.4387+00	password	5a1ec1a7-d56b-48fc-aa8a-2073ddf0d2e1
a88a8130-733e-4923-8b09-e8076f5c56be	2025-09-23 02:03:41.966612+00	2025-09-23 02:03:41.966612+00	password	166c2375-b042-47f6-a7ee-e0303a810109
1dffe0b0-424d-4413-8386-42e3704841f0	2025-09-23 02:03:43.497129+00	2025-09-23 02:03:43.497129+00	password	c96d9704-4beb-4cbb-b356-46fa6464a98c
13b7105b-f6b2-4c37-924d-9154f3e7881e	2025-09-23 02:07:02.481176+00	2025-09-23 02:07:02.481176+00	password	6fa70f1a-fcd8-461a-a1ba-89cbf3571e59
0184380a-fc33-4050-882e-2391c7ffcafc	2025-09-23 02:07:03.631838+00	2025-09-23 02:07:03.631838+00	password	fde77f67-db47-4fb4-9827-f44a095a9e63
69431b8b-8507-4306-ae7c-5ca09c8df80c	2025-09-23 02:12:47.622993+00	2025-09-23 02:12:47.622993+00	password	aa15eb44-5d44-40e7-a787-e2ac68f1f7f7
c3ee43d3-27a8-4587-bfa7-a51e65dfb057	2025-09-23 02:12:48.913044+00	2025-09-23 02:12:48.913044+00	password	aec86154-f6e4-4fa8-83c5-b8dce1546258
a4d3a5a9-f69d-40ad-b8d9-b3f2091b434c	2025-09-23 02:21:33.027653+00	2025-09-23 02:21:33.027653+00	password	0a4107e8-09bb-420d-b097-037f11fa8e6e
99406753-19b6-40db-ae47-d230eebfc65d	2025-09-23 02:21:33.783615+00	2025-09-23 02:21:33.783615+00	password	e3dd0eac-6382-46bd-af91-31f89dffcebd
255bcdc9-b25f-48a6-9213-c1475cb0f3ab	2025-09-23 02:32:33.822848+00	2025-09-23 02:32:33.822848+00	password	a04ec1fd-38fb-46be-b55f-0d0c74ca8956
cefeaad1-267b-47f4-97f8-98d5fb1bcfff	2025-09-23 02:32:35.239774+00	2025-09-23 02:32:35.239774+00	password	b57a6b3a-610a-4d75-8b5b-ceb216832cb9
f0bfbb71-4079-4329-8901-df44010564a8	2025-09-23 02:32:37.726268+00	2025-09-23 02:32:37.726268+00	password	5dc34ae6-471f-4217-a1e1-e4e796ce6b0c
edfd34b7-ab55-4df9-a81b-6885f9900f94	2025-09-23 02:32:39.97216+00	2025-09-23 02:32:39.97216+00	password	89cc9b7c-b7b1-4896-a20b-8b6d06bc4879
f0ac90e3-c839-4572-b85b-65919b64c2fb	2025-09-23 02:32:41.937979+00	2025-09-23 02:32:41.937979+00	password	e2a67e10-57ca-493d-90c6-5c7f0fbb7587
984d536e-4022-4c9a-b161-e54d8e00a3fe	2025-09-23 02:32:44.181906+00	2025-09-23 02:32:44.181906+00	password	2b0b4391-95c7-47ac-9034-2825b960e4e2
93503dd2-ea13-4bb9-a569-fb62ce41c6ab	2025-09-23 02:32:46.467098+00	2025-09-23 02:32:46.467098+00	password	b9f2978a-9725-446b-875e-30d1d7f5eeee
77dfdb42-0ed2-4987-af25-a18677fdc2d0	2025-09-23 02:35:27.38908+00	2025-09-23 02:35:27.38908+00	password	47e492c1-0f69-4aa0-97d6-43ba236ca5c8
622ef07e-01bf-4804-97ef-afe9a5d032ce	2025-09-23 02:35:28.133856+00	2025-09-23 02:35:28.133856+00	password	8b5b084d-cd50-4d32-a3f7-e45ed66d2826
81d758a5-d41c-4809-a02b-e5ed870d482b	2025-09-23 02:43:04.537869+00	2025-09-23 02:43:04.537869+00	password	6349e9ab-6df6-4d37-b2e9-fdf6318910d6
fd57887c-ddde-4d7f-89fd-e9e5012c114c	2025-09-23 02:43:05.258269+00	2025-09-23 02:43:05.258269+00	password	39fd4c6a-f303-44fd-9f0a-7e42d3506bf0
341ce507-e9ec-451a-acca-63148c8b6604	2025-09-23 02:46:10.556568+00	2025-09-23 02:46:10.556568+00	password	7c08bd2f-6888-4eae-b7d6-4920614a171b
0fee531d-98c0-4a3f-a36f-2168cbc7d1fc	2025-09-23 02:46:11.370089+00	2025-09-23 02:46:11.370089+00	password	9a1757c1-9b1c-4728-a014-6ff798a94501
7d15fcca-5e53-4543-aa01-753b5dd4b564	2025-09-23 02:59:52.658171+00	2025-09-23 02:59:52.658171+00	password	344e065c-7bdb-4604-b6b3-ee8c8a198f39
64a99b1a-1d4d-411c-9d64-170476fd9582	2025-09-23 02:59:53.36255+00	2025-09-23 02:59:53.36255+00	password	856d8469-5020-44b5-a245-5315a12edcfd
dac8cca2-ea2b-4f27-9e66-a63bd7f8d007	2025-09-23 03:19:18.249644+00	2025-09-23 03:19:18.249644+00	password	0879ebd8-b445-4f2e-8bdc-a9cc3423a2f3
01e66001-b59c-4a65-9a21-37117ae08a25	2025-09-23 03:19:19.559541+00	2025-09-23 03:19:19.559541+00	password	736f8e71-76b2-4f9a-8d90-51c64d313a62
817e7f2b-278c-4f93-9939-7956f5b7b2a9	2025-09-23 03:41:00.546383+00	2025-09-23 03:41:00.546383+00	password	ac566463-01db-4ccd-8063-be04a869894a
be1ea5eb-0331-45f2-b07b-369015441a65	2025-09-23 12:27:46.558172+00	2025-09-23 12:27:46.558172+00	password	dfddafd6-5a6c-4187-99d7-c91b9d2c1045
dceb15cd-857b-4cf2-b3f4-42a7d0219b67	2025-09-23 12:27:47.219474+00	2025-09-23 12:27:47.219474+00	password	372e0410-8731-4791-81ce-c3ac6e69fa48
15622b36-3099-4b4a-8019-b688d77de173	2025-09-23 13:54:52.453889+00	2025-09-23 13:54:52.453889+00	password	49ba21b6-d1e3-42c5-81b8-db1c4d69fadb
231e4393-7f1d-4159-865f-b8e78c02e793	2025-09-23 13:54:53.147235+00	2025-09-23 13:54:53.147235+00	password	3bc95add-eecc-4ad1-be09-3e0b5e23c9fb
4fff18dd-f120-458b-8ce8-869e6eccf279	2025-09-23 13:58:37.091991+00	2025-09-23 13:58:37.091991+00	password	5bbfa393-b3ee-476a-884f-ac45acc3f3cb
a7f45d48-3803-4645-866e-ff272a586a10	2025-09-23 13:58:37.880779+00	2025-09-23 13:58:37.880779+00	password	ce6e3110-e1a4-4022-85d3-1588a3dc6bce
19360f7a-0694-4e81-8a57-1f90dfe0870a	2025-09-23 14:00:21.7876+00	2025-09-23 14:00:21.7876+00	password	c46b5acd-d9b3-48ea-9e43-88c24ad64c65
2168d58a-bafb-4d5b-ad35-d4c2693ead57	2025-09-23 14:00:22.574523+00	2025-09-23 14:00:22.574523+00	password	32441d6e-5fac-4c3c-8ea4-1df48de8e4e6
ad655692-e323-4090-8a25-ce147090c14d	2025-09-23 14:02:24.96859+00	2025-09-23 14:02:24.96859+00	password	287cee1b-a65f-44fe-8267-9d1819fe5b2e
f8eebf3b-58fd-421f-9a8e-32f7969f3524	2025-09-23 20:06:49.253908+00	2025-09-23 20:06:49.253908+00	password	92730e3c-b534-4b27-9e03-c8667fc66019
fd66f005-e285-4eff-a683-ea3fbd358b81	2025-09-23 20:06:50.035172+00	2025-09-23 20:06:50.035172+00	password	03cb0034-e2f7-4b78-b4e8-df15a4d4aad9
b470fe91-8ee1-4432-bcd4-8141e5cee463	2025-09-23 22:21:16.500416+00	2025-09-23 22:21:16.500416+00	password	1997e185-bb5c-4cbc-adaa-058ab7b4cdd1
41c084bd-fc39-4b60-8350-98b86db26e37	2025-09-23 22:21:17.907831+00	2025-09-23 22:21:17.907831+00	password	4acd3d45-cdfd-47c7-972a-19eb3c3c24d8
b1a4e22b-5512-4361-b637-95c68ce382aa	2025-09-23 22:37:32.807444+00	2025-09-23 22:37:32.807444+00	password	ff734027-f5a8-47ad-8897-ecadf52e6d81
33d60413-5831-4395-84e4-4198096774c7	2025-09-23 22:37:34.032614+00	2025-09-23 22:37:34.032614+00	password	70a25a28-e156-4667-b5a1-de25232006ac
e7dad7f0-a57d-449e-8433-c077d992f85c	2025-09-23 23:05:29.821529+00	2025-09-23 23:05:29.821529+00	password	389df678-5e10-45b4-90dc-27784f02da63
79e49142-7c46-428e-b936-154491597bfe	2025-09-23 23:23:04.44028+00	2025-09-23 23:23:04.44028+00	password	a0df9fb3-7245-4ac2-b82b-199ba20ac22d
a4cbe804-8d2e-4980-9cfe-e9d19a4547b0	2025-09-23 23:23:05.660507+00	2025-09-23 23:23:05.660507+00	password	89c493f9-2134-4d6c-8590-6f58f07f29ca
2834d2ed-4433-4f37-8074-68b406d5b6ff	2025-09-23 23:57:18.014627+00	2025-09-23 23:57:18.014627+00	password	6f7a2047-7b19-4f9c-bf16-adfc38b0c44a
bd7a754f-6ce2-4989-ae9f-a0bc271bba56	2025-09-24 00:01:57.876101+00	2025-09-24 00:01:57.876101+00	password	e14dc0aa-6d56-4da7-8057-1bbb0e222199
855d4b36-8051-4415-a13b-fab025f13927	2025-09-24 00:05:29.527874+00	2025-09-24 00:05:29.527874+00	password	0c428b5e-ebed-42be-b5ab-8fe806625391
14bcc48f-2afe-478b-9573-6093026eb1c5	2025-09-24 00:06:26.546972+00	2025-09-24 00:06:26.546972+00	password	941df7d5-962e-4191-80bd-2add52daa6af
c96bea96-d32d-499f-b79c-004b8f6d155b	2025-09-24 00:12:37.915892+00	2025-09-24 00:12:37.915892+00	password	2122c697-6328-429a-acca-6224d5fe469c
a3ab15b9-a5ff-4bd9-9b1a-f56174c2802b	2025-09-24 02:53:23.271908+00	2025-09-24 02:53:23.271908+00	password	1e0989c5-3ea0-4231-bf80-fdf8ba96f1e8
3587b82c-3b64-41a0-9cd0-312b7b919a3d	2025-09-24 02:53:24.425932+00	2025-09-24 02:53:24.425932+00	password	a0888834-e8d5-4f01-9f28-d55b2c4aface
2fb57b63-503b-4cb6-8afc-45dcf268220a	2025-09-24 02:59:28.74396+00	2025-09-24 02:59:28.74396+00	password	0fd0e4b0-5bf4-47ef-b1fd-6e326a18e9ce
cbe09361-1300-405e-b068-09dfaff1b6db	2025-09-24 02:59:30.033872+00	2025-09-24 02:59:30.033872+00	password	e1e0c9a0-9390-4bd4-8f45-13f17db72cce
880731f2-b207-4334-bfc1-86c03da69893	2025-09-24 03:05:44.223757+00	2025-09-24 03:05:44.223757+00	password	1fb028a9-2d55-4ad9-a6c1-79dbdb14ec27
24e881c8-fa7d-4f0f-8f77-3a82fc9e5010	2025-09-24 03:05:45.543438+00	2025-09-24 03:05:45.543438+00	password	a7b3d33e-b130-4d86-9a5e-89e47bb1fb23
522bd0df-fbbb-40ca-bab5-70a13ec1b134	2025-09-24 03:05:56.567699+00	2025-09-24 03:05:56.567699+00	password	a70720be-632b-4a19-8afb-ed3e834604e3
cc28275d-cbc3-4346-b4cb-a399d09e8886	2025-09-24 03:05:57.274375+00	2025-09-24 03:05:57.274375+00	password	83f6eac5-718e-473d-b445-e01ae5c0e990
9a901dc7-9062-4f30-b6d9-c14671414ea1	2025-09-24 03:06:36.007389+00	2025-09-24 03:06:36.007389+00	password	3cd06674-7af6-46df-9070-0bb41b6c5213
8b179c67-0a1c-44fd-bf0f-f51652e26338	2025-09-24 03:06:36.041389+00	2025-09-24 03:06:36.041389+00	password	46ecc1a0-6d0a-40f1-bb66-d68dcfc97af4
308b9ee4-d926-4314-9613-f2f89ae323a3	2025-09-24 03:06:37.148313+00	2025-09-24 03:06:37.148313+00	password	f35d40e2-1ded-4ad8-b7f0-d7dfac14c744
2cf4fe70-6f97-4854-bd7d-14db47fbcd39	2025-09-24 03:06:37.299147+00	2025-09-24 03:06:37.299147+00	password	46d8e85b-9b9b-4fdd-9158-f72ca80732a7
85d2e846-afb7-41dc-8099-6ebbda77dda5	2025-09-24 03:24:24.267404+00	2025-09-24 03:24:24.267404+00	password	34dab043-9ab6-4d8a-b0e9-ddbf4a6b5d31
9ad78d7d-2940-4a9a-9d71-6a72a3f7d181	2025-09-24 03:24:25.805125+00	2025-09-24 03:24:25.805125+00	password	3b91c15a-e5b1-413a-8823-29d211e5d008
f03858cc-0f22-4eca-b303-7868c3d8bf48	2025-09-24 13:44:21.119883+00	2025-09-24 13:44:21.119883+00	password	8865a042-3d0d-4dd5-8430-f225a3fd5473
bb30e7e6-02fe-48d4-b883-43728ef824b8	2025-09-24 13:48:45.173031+00	2025-09-24 13:48:45.173031+00	password	430019a4-02cb-46f6-9dca-302984ce480e
ce790730-131f-4317-a99a-406944ba5864	2025-09-24 13:48:46.36205+00	2025-09-24 13:48:46.36205+00	password	99b2b512-5ba8-4abe-9c01-4970d2eba47f
d5b39626-2557-42d8-b9e9-b1e593878d2b	2025-09-24 20:23:24.232606+00	2025-09-24 20:23:24.232606+00	password	d704e70a-8a9c-4392-b455-47593e29abda
5fbcc27a-f1bf-4287-8162-dabf41033120	2025-09-24 20:23:25.364398+00	2025-09-24 20:23:25.364398+00	password	c4755571-eda6-4407-8e18-570075ded4d6
c4c78336-ccc3-4782-bd13-0a7e26a3ad91	2025-09-24 20:25:40.455925+00	2025-09-24 20:25:40.455925+00	password	700f323f-d2b8-4977-ad66-d98fcfabe05b
b88d97d3-8779-4eff-a789-992065346b74	2025-09-24 20:25:41.127644+00	2025-09-24 20:25:41.127644+00	password	a5b68fb3-84b4-47cd-9e8e-f03354df705f
12762c07-c412-4829-b79d-0277be9a32cc	2025-09-25 02:57:23.352446+00	2025-09-25 02:57:23.352446+00	password	61f1e532-4fee-40cb-a78d-f7d227ef09cd
3dbea1b3-8a66-401d-b349-a6389592b371	2025-09-25 02:57:23.469206+00	2025-09-25 02:57:23.469206+00	password	2d90415f-de4a-4411-9b42-1f4c3f775cc7
269410d1-7498-495e-888b-9a86f9963de6	2025-09-25 02:57:24.240835+00	2025-09-25 02:57:24.240835+00	password	36230097-ae96-4df7-a206-9df1d66ba5df
06dd32d5-a023-4a85-8135-aba365bb514b	2025-09-25 02:57:24.340957+00	2025-09-25 02:57:24.340957+00	password	937f8c9e-8d8e-4f7e-a533-9cd90591ad92
5ebd48cb-fa50-4c11-ba9c-8be6861b6d51	2025-09-25 03:00:22.103498+00	2025-09-25 03:00:22.103498+00	password	f3be04e3-c9a0-4e67-9a45-c42df3d2dc87
2bc587db-178b-4a85-a2eb-833cdfd125d1	2025-09-25 13:00:50.790292+00	2025-09-25 13:00:50.790292+00	password	0e0b8c55-5e53-42c4-bb4a-cf8d881b01e5
462c9a63-a0fe-40f3-b277-470759931dc8	2025-09-25 18:58:06.94496+00	2025-09-25 18:58:06.94496+00	password	e51f9696-b0f1-4892-813e-7070882c3a84
ed2fee83-925e-4626-9fa6-98ea7d5a792d	2025-09-25 18:58:08.371186+00	2025-09-25 18:58:08.371186+00	password	af3875d4-4b7b-47f2-8392-0768a4d0aa1d
3c33697d-039b-44aa-85e1-e560db16ffb8	2025-09-25 19:28:01.695991+00	2025-09-25 19:28:01.695991+00	password	3b03c155-aa00-4ff7-a601-5bfce29b410f
721a4466-9e99-4cd5-af72-cf8113399519	2025-09-25 19:31:02.830375+00	2025-09-25 19:31:02.830375+00	password	e1a3d0cf-3368-4390-95fe-0019d9b70e6e
0f434487-b857-4ba1-ac8a-e7e7d51b9fc6	2025-09-25 19:31:03.686053+00	2025-09-25 19:31:03.686053+00	password	5c183b15-6903-40e7-918b-5adbe0598036
65105d82-c8c9-4dc8-bb2d-5b5291bca58d	2025-09-25 19:50:48.470839+00	2025-09-25 19:50:48.470839+00	password	ea8e7580-6124-4359-8758-aff5aa74a5be
28ce33e9-8464-4af5-a488-84f2db74a877	2025-09-25 20:58:14.659269+00	2025-09-25 20:58:14.659269+00	password	c05b752b-1942-4677-a9a7-c9f7badc7966
0a547866-32ed-4118-ac89-ace9a9937e79	2025-09-25 23:41:53.210569+00	2025-09-25 23:41:53.210569+00	password	a08c5931-0d7a-48ea-bc7d-b776bf58a2c3
a0432195-d7c2-41d3-9cad-9906185fb83c	2025-09-25 23:55:32.149045+00	2025-09-25 23:55:32.149045+00	password	690471ed-1c35-4fc8-8d99-1ae85ff293cb
8bfbb464-1b8f-4c2e-9139-681484154b36	2025-09-25 23:57:10.888953+00	2025-09-25 23:57:10.888953+00	password	4b04bebf-b0bb-4c35-a9bc-b654801402a6
b3ca9dba-50ed-43ce-9c2c-36010b182962	2025-09-26 00:03:19.189305+00	2025-09-26 00:03:19.189305+00	password	4fac6b4f-155e-4d06-945d-7057e8be060a
5fbfb6ac-d489-4b76-bb08-8fa60500cb64	2025-09-26 00:05:57.579182+00	2025-09-26 00:05:57.579182+00	password	c5d475bb-acb4-4920-8897-fd293060269a
1b700bc1-5c40-4594-861d-66174d0c5b27	2025-09-26 00:07:24.808592+00	2025-09-26 00:07:24.808592+00	password	5a08a2d9-cf96-4d27-b859-53fd249f717f
d857be60-e203-4624-b129-c2ee25abaf6b	2025-09-26 00:09:48.105048+00	2025-09-26 00:09:48.105048+00	password	f9e51475-7813-4a23-a0bb-9d75e0c659fe
cb0de52c-38ff-48fa-8003-0d133bafc7d5	2025-09-26 00:34:06.12187+00	2025-09-26 00:34:06.12187+00	password	0b5b1a64-1774-44f9-88d1-0d6f7b3170c8
1dc019f3-38be-4235-a40d-e6821f8315f2	2025-09-26 01:33:55.415788+00	2025-09-26 01:33:55.415788+00	password	b32449a5-49c3-4517-9554-81d185ea0bdd
80a760f6-4dca-4374-bd94-cf673f4c8606	2025-09-26 01:44:36.563021+00	2025-09-26 01:44:36.563021+00	password	797bd393-0b59-4652-9332-f20db5748028
392c45aa-c180-4ee1-9cb0-5a74548d26a6	2025-09-26 01:52:01.675125+00	2025-09-26 01:52:01.675125+00	password	72ebaa20-795f-4355-b89c-2738580d0ed5
70d959bc-7b0c-4a9e-a25e-03e67515e18e	2025-09-26 01:52:02.430738+00	2025-09-26 01:52:02.430738+00	password	64764667-c619-4c55-b055-955c09867a34
7f61059d-9275-45a3-86f5-a3f0e1e5e02c	2025-09-26 02:00:59.34234+00	2025-09-26 02:00:59.34234+00	password	7630c6af-b5bb-4e7a-95cb-6417876cdc2c
fcfacb72-bad0-47ae-91ad-409fcd6e758a	2025-09-26 02:05:33.400647+00	2025-09-26 02:05:33.400647+00	password	fce6959c-ffda-4070-abfe-8c9fd6343f0e
303060a5-5cc2-467a-9b66-1f66e5f3241d	2025-09-26 02:05:34.822841+00	2025-09-26 02:05:34.822841+00	password	95cc6ce5-4274-45fe-83ac-cd91ad983360
ed76a1d4-31fe-4126-a429-c0815efa056b	2025-09-26 02:18:41.133918+00	2025-09-26 02:18:41.133918+00	password	b53217ad-716f-4bce-9df4-5520e0a4f02d
97949d70-89f9-41d5-ad50-03a8ba924222	2025-09-26 02:20:11.153849+00	2025-09-26 02:20:11.153849+00	password	4f17d278-4374-4119-988d-2b36ad1af543
58b6a350-8737-40dc-869b-43e30815c3ca	2025-09-26 02:20:36.618231+00	2025-09-26 02:20:36.618231+00	password	b7d2d5c9-fc38-475d-b37b-57b18d7c88ad
947e5d6d-3068-4690-aaef-07543555fe9f	2025-09-26 02:25:28.144773+00	2025-09-26 02:25:28.144773+00	password	9a6cb4f1-2b2c-4fa6-a6e8-639ea4f66f57
9218cd02-93cc-48e0-8a0f-03e495060473	2025-09-26 02:58:44.908781+00	2025-09-26 02:58:44.908781+00	password	5ffb5ea4-9118-48d1-a4fd-bf15214290f3
0d55c6fa-24af-453d-871b-1ba52ca98a2b	2025-09-26 02:58:46.125488+00	2025-09-26 02:58:46.125488+00	password	e13c2eb9-96fd-4db2-802b-f23e1152ff17
5cb74499-25cd-49ca-b364-22771b1eb4b5	2025-09-26 03:19:54.883892+00	2025-09-26 03:19:54.883892+00	password	f4861bc8-3b4d-4f35-b735-573d78902284
ef533127-bd95-46a0-ad6a-42e2a340fc89	2025-09-26 03:58:01.318392+00	2025-09-26 03:58:01.318392+00	password	9f4a3e9c-ec2a-4276-b01e-b4fae6fb62ea
b2a269be-8c39-4f0a-b6bb-aa79fa0f7807	2025-09-26 12:52:54.905186+00	2025-09-26 12:52:54.905186+00	password	762f362c-bdf1-44a1-beed-b172e10039bf
9d642e43-0f34-4cfd-a877-c87759310360	2025-09-26 13:40:09.729178+00	2025-09-26 13:40:09.729178+00	password	e6270eba-ad30-43a0-9d97-023564d9cd1f
e2436f3b-cbcd-411d-a494-3c0275bb3428	2025-09-26 13:40:10.998834+00	2025-09-26 13:40:10.998834+00	password	5538bc55-0eaa-4059-ae58-b4cddfce06a5
c7227b64-e80f-425e-a13c-7b5d2831aac7	2025-09-26 13:41:37.233059+00	2025-09-26 13:41:37.233059+00	password	64b0d287-9669-434c-b706-febaa343008b
37948f6b-580e-4669-b1bd-831c022933e7	2025-09-26 13:41:37.855632+00	2025-09-26 13:41:37.855632+00	password	edd14f4f-9dcd-42d7-84b0-8dc7bfc6365a
44b44034-d521-4663-8f5d-5f4a21388647	2025-09-26 13:43:52.913415+00	2025-09-26 13:43:52.913415+00	password	6dcc5c25-65e5-4843-85c1-45406f559dd4
986d2ca2-c766-427b-b4d6-0dcdbe085d4c	2025-09-26 13:43:53.644302+00	2025-09-26 13:43:53.644302+00	password	240d7263-a138-439c-949a-1ea61100639c
40517ea9-a00c-4cb8-a89d-a14ee426f720	2025-09-26 13:45:23.464437+00	2025-09-26 13:45:23.464437+00	password	d9587649-3ba9-42f1-ac52-fda18a314484
06b38ec1-3923-42e1-9571-b6f82ad66e7c	2025-09-26 13:45:37.908789+00	2025-09-26 13:45:37.908789+00	password	077fee0a-2ce4-4f4f-93d6-dd7aee9a9046
2801ad52-dc35-436b-84fe-53a62f56b599	2025-09-26 20:44:06.69337+00	2025-09-26 20:44:06.69337+00	password	3bb2a8da-01ab-420b-b541-957aa509ec0d
e452093c-3261-404b-a8fd-053165270d9b	2025-09-26 20:44:21.97004+00	2025-09-26 20:44:21.97004+00	password	f61c681d-ed36-4d9a-933b-a39fd7aee5b1
00154e1d-1b1e-4ee2-b870-6fa1075b4086	2025-09-26 22:52:05.461474+00	2025-09-26 22:52:05.461474+00	password	aef006d1-e4d0-4f3f-a11b-bac81ee382ca
9bb2e1f7-2c9b-4f56-b831-dbfe581267dc	2025-09-27 02:14:25.872132+00	2025-09-27 02:14:25.872132+00	password	6062219d-87f4-44fe-94fd-2656e131f55d
6954b641-48e6-4295-9a96-fb9147f42ea5	2025-09-27 02:23:20.810189+00	2025-09-27 02:23:20.810189+00	password	a8e2e0ec-8c71-4019-837d-2799aed9e6c9
cd55b051-19f9-410c-8a41-8a71dce1db1a	2025-09-27 02:23:23.419181+00	2025-09-27 02:23:23.419181+00	password	14fd7fd1-281d-4850-bbe0-c50b7996b9ad
399e1abf-1fee-4ff5-93a3-ffe54fb71b16	2025-09-27 13:08:50.468761+00	2025-09-27 13:08:50.468761+00	password	a6dcfa44-bc0a-4037-9c6d-7fe3cad6675f
800d32c3-88a6-4f0f-acb2-eb75f37b79e0	2025-09-27 14:16:27.51519+00	2025-09-27 14:16:27.51519+00	password	2a828834-d42f-4bb4-b725-7bb05bcb71a7
f8ace05e-01ab-4a5a-87aa-25f634762218	2025-09-27 15:45:05.938421+00	2025-09-27 15:45:05.938421+00	password	c3523efe-afe3-4972-9421-d6c124003b61
807bb5c0-04ed-411f-9e0e-b52ed310c957	2025-09-27 15:45:22.479222+00	2025-09-27 15:45:22.479222+00	password	70ba9bf4-9bb5-495c-82fe-848925df5f8a
22e6dd2f-ccd5-4173-bd5d-75424abdce83	2025-09-27 15:45:39.165338+00	2025-09-27 15:45:39.165338+00	password	e12d1f56-d1d8-40a4-bff2-62f0052b732f
4642dd53-0177-4ac6-9e30-4da167f4f380	2025-09-27 15:45:51.200021+00	2025-09-27 15:45:51.200021+00	password	633a023b-f06e-4a69-9dfb-76060e2210ff
be9cb2d5-df2b-4a53-9101-6bde6df4aaa6	2025-09-27 15:45:55.213733+00	2025-09-27 15:45:55.213733+00	password	d4ae1ce7-8e2a-48b3-8ffe-3b4df905b85b
9675febf-0456-4479-a65b-dd4ba737c090	2025-09-27 15:53:35.117695+00	2025-09-27 15:53:35.117695+00	password	2a587e5d-3d50-4ce4-956a-93523ed68ac6
e5820dfb-edb9-4d81-8692-e301e3667c1a	2025-09-27 15:53:45.538952+00	2025-09-27 15:53:45.538952+00	password	bbfdd0d9-9a32-4243-9c7a-2e0a6be524c8
305ec29a-67bc-49c3-bfcf-10d0e086e084	2025-09-27 15:54:02.208965+00	2025-09-27 15:54:02.208965+00	password	3379b481-c571-473d-aef5-d9e5ccd947a8
3e53b1a7-27a5-412f-a6b2-c6f3981ab2e1	2025-09-27 15:54:18.991518+00	2025-09-27 15:54:18.991518+00	password	408a3a88-139a-4501-86d7-f5939bb5e053
370baf72-b539-4345-aa2a-e17d866ff162	2025-09-27 15:54:34.967953+00	2025-09-27 15:54:34.967953+00	password	50b1ff14-8ca7-49f9-8235-5cebce665444
6c62ec8f-27fe-461b-9759-5012f01e5ce8	2025-09-27 16:01:29.692984+00	2025-09-27 16:01:29.692984+00	password	d221fe58-bcf9-4537-90ee-090007936ab4
cf59d320-cfbf-4e0f-a18d-4ea2fd8c767a	2025-09-27 16:01:46.271609+00	2025-09-27 16:01:46.271609+00	password	ce711396-4139-4c53-bb6b-64287783215b
7b39ed7e-84c5-4e45-8a4b-eddee38a726d	2025-09-27 16:02:03.034616+00	2025-09-27 16:02:03.034616+00	password	2604fb8e-faa7-4de5-9b57-183f30397424
1025abf3-4bde-42ac-8dd7-878bcdf1c715	2025-09-27 16:02:18.914937+00	2025-09-27 16:02:18.914937+00	password	f77fe8d0-b620-4922-bbb9-240a11f3b341
d509fecb-ca66-4551-8755-e5d179cbfbe2	2025-09-27 16:03:18.421097+00	2025-09-27 16:03:18.421097+00	password	7cb5e139-9ba3-4d16-b00e-62d916b78a93
62429f4b-27fb-4b65-afd3-41fdf3a79887	2025-09-27 16:03:35.069985+00	2025-09-27 16:03:35.069985+00	password	dea6216f-936a-4e85-9858-90b24b2e5501
a04816a3-5348-4802-abad-4b7aadb6a463	2025-09-27 16:03:51.822493+00	2025-09-27 16:03:51.822493+00	password	5f6accb9-a5f9-4c6f-a32e-a550ed7a9054
152ad28b-07b7-40e0-b331-419f68cfc837	2025-09-27 16:04:07.758609+00	2025-09-27 16:04:07.758609+00	password	afdbbcd6-e6ed-4327-b6a4-29352d67e1ff
25967779-9633-48aa-a32a-ee6b7f2b8a75	2025-09-27 17:20:53.848096+00	2025-09-27 17:20:53.848096+00	password	f90708d4-ae72-45a8-8d92-d6393e793b03
14c79d59-5138-4315-9672-15ec2883390a	2025-09-27 19:30:21.377622+00	2025-09-27 19:30:21.377622+00	password	d65ecea6-0899-4860-b5b5-95b40e2d17da
239d9368-0e58-4c90-9b2a-4da2133d28f4	2025-09-28 00:31:23.982757+00	2025-09-28 00:31:23.982757+00	password	a8471324-0926-4972-8a22-b047fda13328
baa203f0-93ff-4b85-8129-06dbfa276110	2025-09-28 03:10:47.858491+00	2025-09-28 03:10:47.858491+00	password	0b2dd69d-b1da-486d-bbc1-69e83a449ef3
5a819b0c-1251-4285-9af7-f8b54b3e7630	2025-09-28 03:11:04.468547+00	2025-09-28 03:11:04.468547+00	password	4333e0ad-2257-4a1b-9cbf-f6caaaaa964d
8f1c1f74-c0ac-4701-9f8e-57cc6cd403e6	2025-09-28 03:11:21.391913+00	2025-09-28 03:11:21.391913+00	password	988d77be-97ef-41ea-8bda-c128e3b7fb17
ebbf0d50-c9f6-407a-9a3d-d3a09dd5cf78	2025-09-28 03:11:37.613825+00	2025-09-28 03:11:37.613825+00	password	d2fd52d3-6177-4e87-ade4-0cb86f0f73f7
1f8b6784-6f2b-4b33-8d4d-65242f7166f6	2025-09-28 03:22:36.095636+00	2025-09-28 03:22:36.095636+00	password	1c563469-f5b3-45c6-898a-d97124c3b896
47d2d5da-377e-4c8a-961d-aa4b281d73dc	2025-09-28 03:22:52.749254+00	2025-09-28 03:22:52.749254+00	password	141599d0-a50f-4453-9e0d-1ce319d29a0f
03701a08-1d5c-43d9-b66f-cd6b47e97e64	2025-09-28 03:23:09.45339+00	2025-09-28 03:23:09.45339+00	password	6cda6f93-3e3c-4ce6-902b-bbb9d2722707
61921084-57a5-466c-b320-b3c90f52665f	2025-09-28 03:23:25.52607+00	2025-09-28 03:23:25.52607+00	password	133f37a3-2a84-4722-8c0a-0929b2c49798
6d498e01-1dce-4104-aa8e-52d841ecead9	2025-09-28 06:03:32.109228+00	2025-09-28 06:03:32.109228+00	password	c5d94e6c-1b77-4f1b-920e-57497d7185ec
6e9d586e-6798-4bda-bb28-b40d67afe4cb	2025-09-28 06:04:17.089541+00	2025-09-28 06:04:17.089541+00	password	09bc71af-94ea-40f5-bbd5-862d0be0d64a
4249eefa-6e3b-4d15-bb9e-be1c7337d5b9	2025-09-28 06:49:06.990615+00	2025-09-28 06:49:06.990615+00	password	c83e9879-60d3-40bb-8f97-5592b9718674
4ff2381f-2aa4-487f-a303-b98af72d80e2	2025-09-28 07:42:04.580057+00	2025-09-28 07:42:04.580057+00	password	a58375ef-ace1-4e83-9744-4d0063024bdb
cbfd4219-7ea9-4b31-a3bb-9b2e64aeceee	2025-09-28 15:31:58.011797+00	2025-09-28 15:31:58.011797+00	password	2c7f6d97-de57-4a08-b8ce-bbaf2441e409
5b6b3d12-667d-46f6-97ea-1d96dc1ffc2e	2025-09-28 15:47:50.792117+00	2025-09-28 15:47:50.792117+00	password	fdb7693b-f5ea-4955-b641-c72b15a394d3
6b71da65-ad9c-43bc-8634-82e3ba8db791	2025-09-28 16:57:31.552404+00	2025-09-28 16:57:31.552404+00	password	8fee3387-d8b3-40af-acc1-ab62a40e614d
34ac5a9d-7a3b-4347-8d8d-bd0bca28614f	2025-09-28 21:22:14.650095+00	2025-09-28 21:22:14.650095+00	password	222ad10e-d954-486d-a1ab-b3d48d6ce763
ce1fd41a-bf0e-4be7-800e-acd1e743877f	2025-09-29 14:15:50.123226+00	2025-09-29 14:15:50.123226+00	password	19bd0a63-1337-48a8-80fb-d0c5a759d985
\.


--
-- Data for Name: mfa_challenges; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_challenges (id, factor_id, created_at, verified_at, ip_address, otp_code, web_authn_session_data) FROM stdin;
\.


--
-- Data for Name: mfa_factors; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_factors (id, user_id, friendly_name, factor_type, status, created_at, updated_at, secret, phone, last_challenged_at, web_authn_credential, web_authn_aaguid) FROM stdin;
\.


--
-- Data for Name: oauth_clients; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.oauth_clients (id, client_id, client_secret_hash, registration_type, redirect_uris, grant_types, client_name, client_uri, logo_uri, created_at, updated_at, deleted_at) FROM stdin;
\.


--
-- Data for Name: one_time_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.one_time_tokens (id, user_id, token_type, token_hash, relates_to, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: refresh_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.refresh_tokens (instance_id, id, token, user_id, revoked, created_at, updated_at, parent, session_id) FROM stdin;
00000000-0000-0000-0000-000000000000	423	5y2uqpmtej4a	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 13:59:04.954144+00	2025-09-25 14:57:04.93044+00	f3e456e2wmiy	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	424	fqjanawthpyg	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 13:59:34.254339+00	2025-09-25 18:50:39.395168+00	y53knfz56brt	5ebd48cb-fa50-4c11-ba9c-8be6861b6d51
00000000-0000-0000-0000-000000000000	430	argcw6pk6mvy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 18:50:39.395583+00	2025-09-25 18:50:39.395583+00	fqjanawthpyg	5ebd48cb-fa50-4c11-ba9c-8be6861b6d51
00000000-0000-0000-0000-000000000000	429	jfygwup5tsa5	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 18:50:04.790039+00	2025-09-25 19:48:05.091904+00	z5sifixqmk2b	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	431	co5n524ce53j	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 18:50:39.580725+00	2025-09-25 19:48:46.614944+00	yce5d5bkkwtk	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	437	73p7j42mcchz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 19:48:05.09287+00	2025-09-25 20:46:16.493839+00	jfygwup5tsa5	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	441	gpfp2lclfxbl	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 20:49:12.098921+00	2025-09-25 20:49:12.098921+00	go2znyfw67hc	65105d82-c8c9-4dc8-bb2d-5b5291bca58d
00000000-0000-0000-0000-000000000000	222	cdtmvk6j4j45	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 14:21:04.822134+00	2025-09-25 23:35:22.991722+00	\N	997677dd-abdb-40e6-ba38-4c1581c342c0
00000000-0000-0000-0000-000000000000	445	hgutn4rvugsl	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 23:35:22.992553+00	2025-09-25 23:35:22.992553+00	cdtmvk6j4j45	997677dd-abdb-40e6-ba38-4c1581c342c0
00000000-0000-0000-0000-000000000000	447	cv5w3vr5mm67	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 23:55:32.146509+00	2025-09-25 23:55:32.146509+00	\N	a0432195-d7c2-41d3-9cad-9906185fb83c
00000000-0000-0000-0000-000000000000	449	nmlvhhsljeek	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 00:03:19.186855+00	2025-09-26 00:03:19.186855+00	\N	b3ca9dba-50ed-43ce-9c2c-36010b182962
00000000-0000-0000-0000-000000000000	451	nk2ubsmcg7w4	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 00:07:24.806212+00	2025-09-26 00:07:24.806212+00	\N	1b700bc1-5c40-4594-861d-66174d0c5b27
00000000-0000-0000-0000-000000000000	453	ox2vctwmzsxf	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 00:34:06.119162+00	2025-09-26 01:32:27.200233+00	\N	cb0de52c-38ff-48fa-8003-0d133bafc7d5
00000000-0000-0000-0000-000000000000	454	hte3imhwrucw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 01:32:27.201141+00	2025-09-26 01:32:27.201141+00	ox2vctwmzsxf	cb0de52c-38ff-48fa-8003-0d133bafc7d5
00000000-0000-0000-0000-000000000000	455	5ezt6ysvx5pz	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 01:33:55.413565+00	2025-09-26 01:33:55.413565+00	\N	1dc019f3-38be-4235-a40d-e6821f8315f2
00000000-0000-0000-0000-000000000000	456	zwbwa5rmb233	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 01:44:36.56056+00	2025-09-26 01:44:36.56056+00	\N	80a760f6-4dca-4374-bd94-cf673f4c8606
00000000-0000-0000-0000-000000000000	458	ux5sby3u7j32	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 01:52:01.6726+00	2025-09-26 01:52:01.6726+00	\N	392c45aa-c180-4ee1-9cb0-5a74548d26a6
00000000-0000-0000-0000-000000000000	459	xzvctlk2v4tz	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 01:52:02.429331+00	2025-09-26 01:52:02.429331+00	\N	70d959bc-7b0c-4a9e-a25e-03e67515e18e
00000000-0000-0000-0000-000000000000	460	uwd73lgrqeqa	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:00:59.340055+00	2025-09-26 02:00:59.340055+00	\N	7f61059d-9275-45a3-86f5-a3f0e1e5e02c
00000000-0000-0000-0000-000000000000	461	ou2vlcbf35dh	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:05:33.398389+00	2025-09-26 02:05:33.398389+00	\N	fcfacb72-bad0-47ae-91ad-409fcd6e758a
00000000-0000-0000-0000-000000000000	462	tyawdsgs6k4o	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:05:34.821519+00	2025-09-26 02:05:34.821519+00	\N	303060a5-5cc2-467a-9b66-1f66e5f3241d
00000000-0000-0000-0000-000000000000	463	pd34w4ollyzm	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:18:41.131566+00	2025-09-26 02:18:41.131566+00	\N	ed76a1d4-31fe-4126-a429-c0815efa056b
00000000-0000-0000-0000-000000000000	464	hp6wk3bwfd62	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:20:11.151044+00	2025-09-26 02:20:11.151044+00	\N	97949d70-89f9-41d5-ad50-03a8ba924222
00000000-0000-0000-0000-000000000000	465	3sllunwwu6vn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:20:36.616944+00	2025-09-26 02:20:36.616944+00	\N	58b6a350-8737-40dc-869b-43e30815c3ca
00000000-0000-0000-0000-000000000000	216	b7q5kaceckhh	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 13:49:03.090835+00	2025-09-22 13:49:03.090835+00	\N	3ebec739-ab41-42e1-9f44-6ca026ccf22a
00000000-0000-0000-0000-000000000000	217	zjq2zgfcucrv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 13:59:30.853452+00	2025-09-22 13:59:30.853452+00	\N	c9352571-ba34-46ac-903c-6a5fd28b04ff
00000000-0000-0000-0000-000000000000	218	sbjtl2evgeyw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 14:01:48.104239+00	2025-09-22 14:01:48.104239+00	\N	b358ce44-49d9-4536-b654-ab9c7648900a
00000000-0000-0000-0000-000000000000	468	m27e4q6bpa3o	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:58:44.906422+00	2025-09-26 02:58:44.906422+00	\N	9218cd02-93cc-48e0-8a0f-03e495060473
00000000-0000-0000-0000-000000000000	469	2hm6xw2dcvhd	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 02:58:46.124111+00	2025-09-26 02:58:46.124111+00	\N	0d55c6fa-24af-453d-871b-1ba52ca98a2b
00000000-0000-0000-0000-000000000000	220	7p4i7gwnj3wd	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 14:13:37.750867+00	2025-09-22 14:13:37.750867+00	\N	05f961ff-406c-4bfe-8476-fc9c0b39da15
00000000-0000-0000-0000-000000000000	221	nubt4b2pnbi3	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	f	2025-09-22 14:20:43.428515+00	2025-09-22 14:20:43.428515+00	\N	3150c680-2a4d-4ddb-8aee-626ae6ee1043
00000000-0000-0000-0000-000000000000	219	f6kaezz6j26w	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 14:09:06.140295+00	2025-09-22 16:35:19.121458+00	\N	d6d11e12-17f6-40e6-bd67-9eb7d1e72eed
00000000-0000-0000-0000-000000000000	457	fsqyf6nzvw5q	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 01:49:08.919512+00	2025-09-26 03:00:57.114411+00	d27zbaoumi4l	3c33697d-039b-44aa-85e1-e560db16ffb8
00000000-0000-0000-0000-000000000000	470	5rjbcrhgfkde	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 03:00:57.115402+00	2025-09-26 03:00:57.115402+00	fsqyf6nzvw5q	3c33697d-039b-44aa-85e1-e560db16ffb8
00000000-0000-0000-0000-000000000000	223	zlh6b5wtqyzb	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 16:35:19.125274+00	2025-09-22 19:51:36.117121+00	f6kaezz6j26w	d6d11e12-17f6-40e6-bd67-9eb7d1e72eed
00000000-0000-0000-0000-000000000000	225	ry56pxkeuna6	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 19:51:36.1184+00	2025-09-22 19:51:36.1184+00	zlh6b5wtqyzb	d6d11e12-17f6-40e6-bd67-9eb7d1e72eed
00000000-0000-0000-0000-000000000000	226	2jnal6fnhucw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:08:37.433639+00	2025-09-22 21:08:37.433639+00	\N	9a2c99f2-5d6c-4c5a-a5a7-b5838c412080
00000000-0000-0000-0000-000000000000	227	5emm5jueadlc	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:08:37.461195+00	2025-09-22 21:08:37.461195+00	\N	342eda7e-30b4-44a8-a258-1f202196b92f
00000000-0000-0000-0000-000000000000	228	7r2zqxwntuu3	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:10:24.594279+00	2025-09-22 21:10:24.594279+00	\N	3733c2ba-c579-437d-8d59-406037110ccd
00000000-0000-0000-0000-000000000000	471	vgp57tnqibmp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 03:08:41.080776+00	2025-09-26 03:08:41.080776+00	2q4x4rxax5e4	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	230	plj7so25s2la	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:13:30.846954+00	2025-09-22 21:13:30.846954+00	\N	0a4392b3-6674-4a78-b944-2a009d896066
00000000-0000-0000-0000-000000000000	231	a6pwa6inr7fj	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:13:30.851452+00	2025-09-22 21:13:30.851452+00	\N	74e0057e-a520-47f9-bb0b-acbcd162e34c
00000000-0000-0000-0000-000000000000	232	4gvyffisf5pt	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:29:58.024563+00	2025-09-22 21:29:58.024563+00	\N	49f4aaf9-1c2e-4e59-8c54-a032903a55ae
00000000-0000-0000-0000-000000000000	233	uh2fkyb3nqe7	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:29:58.037652+00	2025-09-22 21:29:58.037652+00	\N	add0cfae-bed1-44f5-8d77-e3ea9d117f69
00000000-0000-0000-0000-000000000000	229	62kmyucpup6n	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 21:10:56.395396+00	2025-09-22 22:51:54.214691+00	\N	5f4a8140-02c4-4333-840a-3b902b344596
00000000-0000-0000-0000-000000000000	224	fgicor3tbze2	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 18:01:09.122948+00	2025-09-23 16:32:32.664007+00	\N	2ad7f87f-f1d4-4ee0-858b-e64fcbc650c8
00000000-0000-0000-0000-000000000000	472	uft4ta76xjxe	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 03:19:54.881596+00	2025-09-26 03:19:54.881596+00	\N	5cb74499-25cd-49ca-b364-22771b1eb4b5
00000000-0000-0000-0000-000000000000	473	jut545mxrncb	b7ce34ce-bbf1-4793-a827-559c510fcb1a	f	2025-09-26 03:58:01.315887+00	2025-09-26 03:58:01.315887+00	\N	ef533127-bd95-46a0-ad6a-42e2a340fc89
00000000-0000-0000-0000-000000000000	474	yzbzgkmuktmy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 12:21:11.951514+00	2025-09-26 12:21:11.951514+00	fmcoq3km64vo	28ce33e9-8464-4af5-a488-84f2db74a877
00000000-0000-0000-0000-000000000000	467	l5qgvnwyp3mv	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 02:27:26.624157+00	2025-09-26 13:14:37.103631+00	wttbulyognnm	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	475	awxugyc76jyd	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 12:52:54.902826+00	2025-09-26 14:34:43.97437+00	\N	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	466	gx2euualdrh2	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 02:25:28.142352+00	2025-09-28 00:29:31.685901+00	\N	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	234	pw4zgpupyftb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:31:53.97101+00	2025-09-22 21:31:53.97101+00	\N	0c741295-d194-4b22-9e51-e19d146c5d7a
00000000-0000-0000-0000-000000000000	235	dp3ne2iyhb6k	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:31:53.977965+00	2025-09-22 21:31:53.977965+00	\N	9e515341-0f4f-4a0a-a247-b47d79754499
00000000-0000-0000-0000-000000000000	236	7pvuiwqrzned	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:33:59.654657+00	2025-09-22 21:33:59.654657+00	\N	74431909-a0eb-4238-b7fa-6745bfd3fdc2
00000000-0000-0000-0000-000000000000	237	hwwbofym42e2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:33:59.705402+00	2025-09-22 21:33:59.705402+00	\N	ee96ebbf-241c-4321-8f45-db11198ab74d
00000000-0000-0000-0000-000000000000	238	g3mlyt4sg2cw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:46:17.677169+00	2025-09-22 21:46:17.677169+00	\N	f70d423e-809a-47d1-8ab4-e3ddd818c769
00000000-0000-0000-0000-000000000000	239	fkf52ffw323l	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 21:46:17.71669+00	2025-09-22 21:46:17.71669+00	\N	76deaacf-1268-4e83-ae6e-b317b0475fd0
00000000-0000-0000-0000-000000000000	240	xgc2daxx6ojf	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 22:03:15.016758+00	2025-09-22 22:03:15.016758+00	\N	eec4c124-899e-4628-9cce-5d530327957d
00000000-0000-0000-0000-000000000000	241	nfgnufgi5vic	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 22:06:20.087387+00	2025-09-22 22:06:20.087387+00	\N	f9201503-0f2b-461b-b01f-2cebd6d85d52
00000000-0000-0000-0000-000000000000	425	2iehipqb2sfg	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 14:57:04.931974+00	2025-09-25 15:55:05.010231+00	5y2uqpmtej4a	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	432	x2d6rvdxboe5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 18:58:06.942442+00	2025-09-25 18:58:06.942442+00	\N	462c9a63-a0fe-40f3-b277-470759931dc8
00000000-0000-0000-0000-000000000000	245	w3kfqpvzdsv3	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:00:44.435108+00	2025-09-22 23:00:44.435108+00	\N	2ae8bbf7-3812-4714-8e65-337b44652650
00000000-0000-0000-0000-000000000000	246	paryhdpkpm4f	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:00:44.44276+00	2025-09-22 23:00:44.44276+00	\N	ffdd4d8b-ce58-4ff1-90fc-89ba14902767
00000000-0000-0000-0000-000000000000	247	lshln54e5l4s	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:00:45.498355+00	2025-09-22 23:00:45.498355+00	\N	49ca16d3-e616-418e-82c5-aa248cdbbad9
00000000-0000-0000-0000-000000000000	242	q7irawp6fkym	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 22:06:40.1743+00	2025-09-22 23:15:34.21276+00	\N	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	433	7ft4oie75ga7	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 18:58:08.369691+00	2025-09-25 18:58:08.369691+00	\N	ed2fee83-925e-4626-9fa6-98ea7d5a792d
00000000-0000-0000-0000-000000000000	249	l6g7mv6w3vhw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:31:04.117697+00	2025-09-22 23:31:04.117697+00	\N	f3bf7505-2cb4-46ff-8077-fde77827a301
00000000-0000-0000-0000-000000000000	250	plmbrrkyor3b	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:31:04.786396+00	2025-09-22 23:31:04.786396+00	\N	f9da6c0b-073a-4fab-bc17-a0dcdfe6d850
00000000-0000-0000-0000-000000000000	251	5s27udfjfvje	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:39:54.296214+00	2025-09-22 23:39:54.296214+00	\N	e7f88f0b-efae-4f18-a4d3-58a7157c2b08
00000000-0000-0000-0000-000000000000	252	3kluclkwsqkh	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:39:55.024606+00	2025-09-22 23:39:55.024606+00	\N	7ada8d2a-1787-44e3-8701-9c9803eb05fa
00000000-0000-0000-0000-000000000000	243	hsqa2ivtrr33	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 22:40:38.110186+00	2025-09-22 23:40:44.605397+00	\N	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	438	46yh7kg2jpi3	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 19:48:46.615345+00	2025-09-25 19:48:46.615345+00	co5n524ce53j	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	254	e7ezelnymydw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:47:27.647062+00	2025-09-22 23:47:27.647062+00	\N	f3a7aed8-f626-4fcd-989f-6206bfb6b7be
00000000-0000-0000-0000-000000000000	255	rg4h6dby5jrl	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:47:28.548035+00	2025-09-22 23:47:28.548035+00	\N	ceda9236-d6d2-4192-a5bb-8e4e10b54008
00000000-0000-0000-0000-000000000000	244	32so7cbhhero	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 22:51:54.215568+00	2025-09-22 23:49:55.601605+00	62kmyucpup6n	5f4a8140-02c4-4333-840a-3b902b344596
00000000-0000-0000-0000-000000000000	256	5dtzsbzwfqsb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:49:55.602381+00	2025-09-22 23:49:55.602381+00	32so7cbhhero	5f4a8140-02c4-4333-840a-3b902b344596
00000000-0000-0000-0000-000000000000	257	odnxfts5w2rx	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:54:43.152896+00	2025-09-22 23:54:43.152896+00	\N	594bbf85-7eba-46e5-8af0-b69c45d9756a
00000000-0000-0000-0000-000000000000	258	raqoporvlmg5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-22 23:54:43.891447+00	2025-09-22 23:54:43.891447+00	\N	7434296c-192e-44ef-b569-f90fe5f55462
00000000-0000-0000-0000-000000000000	259	pdfj6a53mk63	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:06:47.344829+00	2025-09-23 00:06:47.344829+00	\N	4067d7c3-1ca9-4da5-a0f9-ce70603b2ef8
00000000-0000-0000-0000-000000000000	260	3jkkuz5qpksg	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:06:48.737329+00	2025-09-23 00:06:48.737329+00	\N	2b839e4e-5f0b-4637-9dcd-892ca918a5f7
00000000-0000-0000-0000-000000000000	261	xbgcdagmczum	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:10:13.922593+00	2025-09-23 00:10:13.922593+00	\N	e67cdca9-60ad-49c4-8623-a19d9d94330c
00000000-0000-0000-0000-000000000000	262	bclvupy2eh5e	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:10:15.238961+00	2025-09-23 00:10:15.238961+00	\N	1d7c1c48-902a-4815-af22-eeba9dcf14d7
00000000-0000-0000-0000-000000000000	263	lvy6lras37s2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:11:21.935733+00	2025-09-23 00:11:21.935733+00	\N	743b8c33-fc19-49f6-a454-04b0012bc044
00000000-0000-0000-0000-000000000000	264	ipsysp6lu7ok	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:11:22.688006+00	2025-09-23 00:11:22.688006+00	\N	d812a59d-3a2a-45f2-9756-b071ecfa0f1e
00000000-0000-0000-0000-000000000000	248	iy7zh7uuzx5w	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 23:15:34.213595+00	2025-09-23 00:13:36.830944+00	q7irawp6fkym	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	266	a6hzc4x2hugk	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:15:26.45896+00	2025-09-23 00:15:26.45896+00	\N	5fa4d284-a828-424c-80cc-0842f86321b4
00000000-0000-0000-0000-000000000000	267	vff3iysxhamw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:15:27.30102+00	2025-09-23 00:15:27.30102+00	\N	2aeabd4b-b668-4716-8a3d-713fe2df89ea
00000000-0000-0000-0000-000000000000	268	mdn5fbkqpgz2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:22:26.615088+00	2025-09-23 00:22:26.615088+00	\N	de24884d-699c-4a2c-92bd-f2812c89162d
00000000-0000-0000-0000-000000000000	269	f7dakbp5xs5p	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:22:27.366023+00	2025-09-23 00:22:27.366023+00	\N	01f7db29-a677-4da6-a92d-0840c06e8c26
00000000-0000-0000-0000-000000000000	270	5fio2cc2zi45	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:29:07.24634+00	2025-09-23 00:29:07.24634+00	\N	a57f0f2c-7516-48a3-bf8a-17627cacf890
00000000-0000-0000-0000-000000000000	271	6sg26uualeqt	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:29:08.488533+00	2025-09-23 00:29:08.488533+00	\N	ba1a5df8-ed0a-4e1f-af43-0ca4b1bd0fff
00000000-0000-0000-0000-000000000000	272	c275vvuiy4xy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:33:34.972336+00	2025-09-23 00:33:34.972336+00	\N	f4035166-b3ff-4388-b9e8-a3bff09f7dcd
00000000-0000-0000-0000-000000000000	273	juhx6uwbtuhw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:33:35.642281+00	2025-09-23 00:33:35.642281+00	\N	259340d9-4d2f-4620-9fe7-b76d44c9f29b
00000000-0000-0000-0000-000000000000	253	khgns3rjeben	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-22 23:40:44.606062+00	2025-09-23 00:39:03.198232+00	hsqa2ivtrr33	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	275	hpooslz55ae4	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:40:27.861217+00	2025-09-23 00:40:27.861217+00	\N	a5a9edee-65b8-43f3-a7a8-915d48819afa
00000000-0000-0000-0000-000000000000	276	tk2bin5lq6qo	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:40:29.099723+00	2025-09-23 00:40:29.099723+00	\N	798a8bf5-5023-442a-bc7a-d3c5b42614ec
00000000-0000-0000-0000-000000000000	277	osf3aoaqlbfm	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:41:55.179334+00	2025-09-23 00:41:55.179334+00	\N	35805eb6-ee9a-4404-9f35-ff220dc23465
00000000-0000-0000-0000-000000000000	278	w7oxg75ruti4	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:41:56.608121+00	2025-09-23 00:41:56.608121+00	\N	33e0ab3d-cc0c-48d0-8e19-7b4ba7246db1
00000000-0000-0000-0000-000000000000	279	6pftnm6gf37q	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:47:59.400875+00	2025-09-23 00:47:59.400875+00	\N	d9853f38-9ac7-476c-b61c-aed0349b94b0
00000000-0000-0000-0000-000000000000	280	txm56npagky5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:48:00.668761+00	2025-09-23 00:48:00.668761+00	\N	36e821d5-a787-4c4f-bf67-ae58c4bd3842
00000000-0000-0000-0000-000000000000	281	da43hclo6hhc	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:57:44.005476+00	2025-09-23 00:57:44.005476+00	\N	87a85634-02ef-40cd-8930-71e7cf89b37d
00000000-0000-0000-0000-000000000000	282	7njjukdshivl	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 00:57:44.748733+00	2025-09-23 00:57:44.748733+00	\N	f02ee68c-1348-47c1-8e88-693516764f6d
00000000-0000-0000-0000-000000000000	274	dz3vbmsxruke	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 00:39:03.199002+00	2025-09-23 01:41:38.553432+00	khgns3rjeben	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	265	n7hlhjhb2fhr	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 00:13:36.831738+00	2025-09-23 02:19:30.571329+00	iy7zh7uuzx5w	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	283	gbzaavdivrvr	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:04:34.991168+00	2025-09-23 01:04:34.991168+00	\N	c899591b-b307-4ac6-a04a-ee37e259001d
00000000-0000-0000-0000-000000000000	284	5zuitx4x47tp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:04:36.428856+00	2025-09-23 01:04:36.428856+00	\N	7221f4e5-3506-44fa-8a2c-def1bdb9667e
00000000-0000-0000-0000-000000000000	285	47tgc5ykbzuv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:08:53.623747+00	2025-09-23 01:08:53.623747+00	\N	caf1fd53-5493-47bf-be1c-4205413a0683
00000000-0000-0000-0000-000000000000	286	3v3d7dhbmcij	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:08:54.520408+00	2025-09-23 01:08:54.520408+00	\N	087ad6c6-a3d4-4f1f-9768-5f698788424a
00000000-0000-0000-0000-000000000000	287	rvua4qrnbyei	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:16:47.160805+00	2025-09-23 01:16:47.160805+00	\N	e1e8b2ed-87a6-49fb-85ab-ab5c5c5f8cbd
00000000-0000-0000-0000-000000000000	288	xv2kksem6yix	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:16:47.909878+00	2025-09-23 01:16:47.909878+00	\N	ffe7e017-449b-42c8-bb84-af7331269760
00000000-0000-0000-0000-000000000000	289	zvdx6itgtmfv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:17:07.026849+00	2025-09-23 01:17:07.026849+00	\N	8750e9f7-738f-42d9-8964-a746c5c580e9
00000000-0000-0000-0000-000000000000	290	5ncphvt2eg4c	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:17:07.784634+00	2025-09-23 01:17:07.784634+00	\N	f5a5e86c-79cb-4f08-af00-b2138232500d
00000000-0000-0000-0000-000000000000	291	k4jxdif2pnse	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:20:48.352356+00	2025-09-23 01:20:48.352356+00	\N	53c13018-ca31-4b39-8ce4-52cccfb4959f
00000000-0000-0000-0000-000000000000	292	4alscaoqxggt	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:20:49.146646+00	2025-09-23 01:20:49.146646+00	\N	9df4f900-6352-45e2-80ea-ce929db5e5b8
00000000-0000-0000-0000-000000000000	293	6h675cok7bh5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:29:12.46891+00	2025-09-23 01:29:12.46891+00	\N	07dc9732-d87f-4743-be87-b0b39cc3135f
00000000-0000-0000-0000-000000000000	294	5b7cdc2lozjn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:29:13.207888+00	2025-09-23 01:29:13.207888+00	\N	8273f8f0-6b4e-41a6-8466-55d639136d50
00000000-0000-0000-0000-000000000000	295	rmu7k7eheunu	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:32:57.192019+00	2025-09-23 01:32:57.192019+00	\N	b16c9bf6-414f-4125-9c46-a1c00c749ad7
00000000-0000-0000-0000-000000000000	296	u7c6hhq2pab7	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:32:58.64351+00	2025-09-23 01:32:58.64351+00	\N	2309c610-2b69-4831-a9ce-3842289a5974
00000000-0000-0000-0000-000000000000	297	b6wii6kn2ou6	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:36:38.727293+00	2025-09-23 01:36:38.727293+00	\N	4bfbb94a-efb2-4304-84ac-d95dcf37f5c2
00000000-0000-0000-0000-000000000000	298	3mcqzbhvlx64	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:36:39.489964+00	2025-09-23 01:36:39.489964+00	\N	0235f13d-0636-4084-8aa8-c2c6e0cb146e
00000000-0000-0000-0000-000000000000	300	n2axkcznr6yc	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:41:50.891211+00	2025-09-23 01:41:50.891211+00	\N	93527f66-0098-4c70-9078-fd2f023efffa
00000000-0000-0000-0000-000000000000	301	3zpzwzzgake6	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:41:51.631645+00	2025-09-23 01:41:51.631645+00	\N	d5d26239-107d-4b6b-be35-127e4ec21ecb
00000000-0000-0000-0000-000000000000	302	2bahdw375yth	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:49:45.673145+00	2025-09-23 01:49:45.673145+00	\N	4ba4c7cd-1b2e-471a-9291-b35b0eccba16
00000000-0000-0000-0000-000000000000	303	lypdywarwp35	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 01:49:46.437285+00	2025-09-23 01:49:46.437285+00	\N	f723b604-d319-4a94-afb7-375f72c7f5a9
00000000-0000-0000-0000-000000000000	304	vp646yxvqnyl	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:03:41.964283+00	2025-09-23 02:03:41.964283+00	\N	a88a8130-733e-4923-8b09-e8076f5c56be
00000000-0000-0000-0000-000000000000	305	3fmwb5kwfpco	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:03:43.495544+00	2025-09-23 02:03:43.495544+00	\N	1dffe0b0-424d-4413-8386-42e3704841f0
00000000-0000-0000-0000-000000000000	306	qt4pef44t224	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:07:02.478582+00	2025-09-23 02:07:02.478582+00	\N	13b7105b-f6b2-4c37-924d-9154f3e7881e
00000000-0000-0000-0000-000000000000	307	s4pki6d2shde	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:07:03.63027+00	2025-09-23 02:07:03.63027+00	\N	0184380a-fc33-4050-882e-2391c7ffcafc
00000000-0000-0000-0000-000000000000	308	v6lst3b2yubi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:12:47.620721+00	2025-09-23 02:12:47.620721+00	\N	69431b8b-8507-4306-ae7c-5ca09c8df80c
00000000-0000-0000-0000-000000000000	309	cnawwkuoqozx	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:12:48.911539+00	2025-09-23 02:12:48.911539+00	\N	c3ee43d3-27a8-4587-bfa7-a51e65dfb057
00000000-0000-0000-0000-000000000000	311	uh2v7iaecztk	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:21:33.025453+00	2025-09-23 02:21:33.025453+00	\N	a4d3a5a9-f69d-40ad-b8d9-b3f2091b434c
00000000-0000-0000-0000-000000000000	312	cdyhqhceey7t	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:21:33.782268+00	2025-09-23 02:21:33.782268+00	\N	99406753-19b6-40db-ae47-d230eebfc65d
00000000-0000-0000-0000-000000000000	313	2xur4tyqzj33	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:33.820473+00	2025-09-23 02:32:33.820473+00	\N	255bcdc9-b25f-48a6-9213-c1475cb0f3ab
00000000-0000-0000-0000-000000000000	314	bior4xvhtwzw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:35.23837+00	2025-09-23 02:32:35.23837+00	\N	cefeaad1-267b-47f4-97f8-98d5fb1bcfff
00000000-0000-0000-0000-000000000000	315	uhyngp7et2ff	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:37.724816+00	2025-09-23 02:32:37.724816+00	\N	f0bfbb71-4079-4329-8901-df44010564a8
00000000-0000-0000-0000-000000000000	316	f2d2c72ucmb2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:39.970724+00	2025-09-23 02:32:39.970724+00	\N	edfd34b7-ab55-4df9-a81b-6885f9900f94
00000000-0000-0000-0000-000000000000	317	wb6kz3frgw7j	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:41.936656+00	2025-09-23 02:32:41.936656+00	\N	f0ac90e3-c839-4572-b85b-65919b64c2fb
00000000-0000-0000-0000-000000000000	318	llyiwqk5bmn5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:44.180498+00	2025-09-23 02:32:44.180498+00	\N	984d536e-4022-4c9a-b161-e54d8e00a3fe
00000000-0000-0000-0000-000000000000	319	louwfgxm52d6	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:32:46.465902+00	2025-09-23 02:32:46.465902+00	\N	93503dd2-ea13-4bb9-a569-fb62ce41c6ab
00000000-0000-0000-0000-000000000000	320	cszouprrmeqj	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:35:27.38655+00	2025-09-23 02:35:27.38655+00	\N	77dfdb42-0ed2-4987-af25-a18677fdc2d0
00000000-0000-0000-0000-000000000000	321	vd6iktou2bnr	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:35:28.132472+00	2025-09-23 02:35:28.132472+00	\N	622ef07e-01bf-4804-97ef-afe9a5d032ce
00000000-0000-0000-0000-000000000000	322	kp6q3dmarkf6	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:43:04.535501+00	2025-09-23 02:43:04.535501+00	\N	81d758a5-d41c-4809-a02b-e5ed870d482b
00000000-0000-0000-0000-000000000000	323	buor7f2vocg2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:43:05.256945+00	2025-09-23 02:43:05.256945+00	\N	fd57887c-ddde-4d7f-89fd-e9e5012c114c
00000000-0000-0000-0000-000000000000	299	6m422fl2a2qw	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 01:41:38.554156+00	2025-09-23 02:43:19.342443+00	dz3vbmsxruke	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	325	dwxhbdszr7av	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:46:10.554351+00	2025-09-23 02:46:10.554351+00	\N	341ce507-e9ec-451a-acca-63148c8b6604
00000000-0000-0000-0000-000000000000	326	urtbt4clvmey	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:46:11.368701+00	2025-09-23 02:46:11.368701+00	\N	0fee531d-98c0-4a3f-a36f-2168cbc7d1fc
00000000-0000-0000-0000-000000000000	327	ewskyhgmrrlw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:59:52.655572+00	2025-09-23 02:59:52.655572+00	\N	7d15fcca-5e53-4543-aa01-753b5dd4b564
00000000-0000-0000-0000-000000000000	328	alzliytslchq	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 02:59:53.361156+00	2025-09-23 02:59:53.361156+00	\N	64a99b1a-1d4d-411c-9d64-170476fd9582
00000000-0000-0000-0000-000000000000	329	czwtt2loropi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 03:19:18.247195+00	2025-09-23 03:19:18.247195+00	\N	dac8cca2-ea2b-4f27-9e66-a63bd7f8d007
00000000-0000-0000-0000-000000000000	330	viyi32rhreym	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 03:19:19.558219+00	2025-09-23 03:19:19.558219+00	\N	01e66001-b59c-4a65-9a21-37117ae08a25
00000000-0000-0000-0000-000000000000	332	d226vw6l5pib	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 12:27:46.555478+00	2025-09-23 12:27:46.555478+00	\N	be1ea5eb-0331-45f2-b07b-369015441a65
00000000-0000-0000-0000-000000000000	333	bconu73tujwm	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 12:27:47.218107+00	2025-09-23 12:27:47.218107+00	\N	dceb15cd-857b-4cf2-b3f4-42a7d0219b67
00000000-0000-0000-0000-000000000000	310	u6ycxjhwcf45	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 02:19:30.572122+00	2025-09-23 12:32:53.057994+00	n7hlhjhb2fhr	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	334	mglvjct3u3p2	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 12:32:53.058728+00	2025-09-23 13:31:28.146898+00	u6ycxjhwcf45	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	331	5xymax53h643	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 03:41:00.543962+00	2025-09-23 13:38:48.331063+00	\N	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	324	rtmcmonquyax	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 02:43:19.343132+00	2025-09-23 13:49:24.709028+00	6m422fl2a2qw	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	335	7igugrarsogf	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 13:31:28.147906+00	2025-09-23 20:04:42.274915+00	mglvjct3u3p2	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	426	byakspkohawj	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 15:55:05.012058+00	2025-09-25 16:53:34.836381+00	2iehipqb2sfg	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	338	gb3r6f5s6mzf	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 13:54:52.451284+00	2025-09-23 13:54:52.451284+00	\N	15622b36-3099-4b4a-8019-b688d77de173
00000000-0000-0000-0000-000000000000	339	epbh6ff7jbvn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 13:54:53.145611+00	2025-09-23 13:54:53.145611+00	\N	231e4393-7f1d-4159-865f-b8e78c02e793
00000000-0000-0000-0000-000000000000	340	h6frvgss2wvo	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 13:58:37.089603+00	2025-09-23 13:58:37.089603+00	\N	4fff18dd-f120-458b-8ce8-869e6eccf279
00000000-0000-0000-0000-000000000000	341	mo2peyvxivo3	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 13:58:37.879448+00	2025-09-23 13:58:37.879448+00	\N	a7f45d48-3803-4645-866e-ff272a586a10
00000000-0000-0000-0000-000000000000	342	i7b4ln2uuz7b	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 14:00:21.785278+00	2025-09-23 14:00:21.785278+00	\N	19360f7a-0694-4e81-8a57-1f90dfe0870a
00000000-0000-0000-0000-000000000000	343	3hvyjmyssbm4	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 14:00:22.571575+00	2025-09-23 14:00:22.571575+00	\N	2168d58a-bafb-4d5b-ad35-d4c2693ead57
00000000-0000-0000-0000-000000000000	427	meyvrmgrawb7	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 16:53:34.837254+00	2025-09-25 17:51:35.131635+00	byakspkohawj	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	344	dxyfwmzlrxvn	b7ce34ce-bbf1-4793-a827-559c510fcb1a	t	2025-09-23 14:02:24.96644+00	2025-09-23 16:37:00.488594+00	\N	ad655692-e323-4090-8a25-ce147090c14d
00000000-0000-0000-0000-000000000000	336	rznsqctu3zhx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 13:38:48.33188+00	2025-09-23 19:57:30.445514+00	5xymax53h643	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	439	go2znyfw67hc	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 19:50:48.468477+00	2025-09-25 20:49:12.098114+00	\N	65105d82-c8c9-4dc8-bb2d-5b5291bca58d
00000000-0000-0000-0000-000000000000	349	qn4po2rx5ksw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 20:06:49.251723+00	2025-09-23 20:06:49.251723+00	\N	f8eebf3b-58fd-421f-9a8e-32f7969f3524
00000000-0000-0000-0000-000000000000	350	w6k2bdyiynqe	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 20:06:50.03311+00	2025-09-23 20:06:50.03311+00	\N	fd66f005-e285-4eff-a683-ea3fbd358b81
00000000-0000-0000-0000-000000000000	348	lbhqerpu7a2o	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 20:04:42.275932+00	2025-09-23 21:09:47.022068+00	7igugrarsogf	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	347	6bbgjstb5atb	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 19:57:30.448416+00	2025-09-23 21:18:30.261502+00	rznsqctu3zhx	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	434	hiauiigrtuta	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 19:28:01.692774+00	2025-09-25 23:13:15.26316+00	\N	3c33697d-039b-44aa-85e1-e560db16ffb8
00000000-0000-0000-0000-000000000000	351	mpalor3o26gn	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 21:09:47.022856+00	2025-09-23 22:08:26.380514+00	lbhqerpu7a2o	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	353	oj5jlmrgn2ko	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 22:08:26.381346+00	2025-09-23 22:08:26.381346+00	mpalor3o26gn	4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e
00000000-0000-0000-0000-000000000000	337	gtzqpe6m4b7o	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 13:49:24.709943+00	2025-09-23 22:20:25.29925+00	rtmcmonquyax	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	446	d4ol44hjbh25	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 23:41:53.208389+00	2025-09-25 23:41:53.208389+00	\N	0a547866-32ed-4118-ac89-ace9a9937e79
00000000-0000-0000-0000-000000000000	355	m3c3pdyf4jap	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 22:21:16.49908+00	2025-09-23 22:21:16.49908+00	\N	b470fe91-8ee1-4432-bcd4-8141e5cee463
00000000-0000-0000-0000-000000000000	356	ddnnsprouq4r	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 22:21:17.906223+00	2025-09-23 22:21:17.906223+00	\N	41c084bd-fc39-4b60-8350-98b86db26e37
00000000-0000-0000-0000-000000000000	352	3g5rwqoy72fw	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 21:18:30.262309+00	2025-09-23 22:23:39.546903+00	6bbgjstb5atb	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	448	g7yngud7kciz	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 23:57:10.886628+00	2025-09-25 23:57:10.886628+00	\N	8bfbb464-1b8f-4c2e-9139-681484154b36
00000000-0000-0000-0000-000000000000	358	34nnnrebjxn4	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 22:37:32.805251+00	2025-09-23 22:37:32.805251+00	\N	b1a4e22b-5512-4361-b637-95c68ce382aa
00000000-0000-0000-0000-000000000000	359	ktds62otx5ud	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 22:37:34.031267+00	2025-09-23 22:37:34.031267+00	\N	33d60413-5831-4395-84e4-4198096774c7
00000000-0000-0000-0000-000000000000	360	itx4fivmci6k	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 23:05:29.819036+00	2025-09-23 23:05:29.819036+00	\N	e7dad7f0-a57d-449e-8433-c077d992f85c
00000000-0000-0000-0000-000000000000	354	3kqxgnurxfnd	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 22:20:25.300151+00	2025-09-23 23:22:11.330125+00	gtzqpe6m4b7o	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	450	grosyndjzkmv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 00:05:57.576865+00	2025-09-26 00:05:57.576865+00	\N	5fbfb6ac-d489-4b76-bb08-8fa60500cb64
00000000-0000-0000-0000-000000000000	362	d2qftpeztmqn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 23:23:04.438733+00	2025-09-23 23:23:04.438733+00	\N	79e49142-7c46-428e-b936-154491597bfe
00000000-0000-0000-0000-000000000000	363	madczahklivw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-23 23:23:05.659062+00	2025-09-23 23:23:05.659062+00	\N	a4cbe804-8d2e-4980-9cfe-e9d19a4547b0
00000000-0000-0000-0000-000000000000	452	dfaxu4fcjeom	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 00:09:48.102575+00	2025-09-26 00:09:48.102575+00	\N	d857be60-e203-4624-b129-c2ee25abaf6b
00000000-0000-0000-0000-000000000000	365	xski3fv225gi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 00:01:57.874095+00	2025-09-24 00:01:57.874095+00	\N	bd7a754f-6ce2-4989-ae9f-a0bc271bba56
00000000-0000-0000-0000-000000000000	366	b37xvngplo7t	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 00:05:29.525353+00	2025-09-24 00:05:29.525353+00	\N	855d4b36-8051-4415-a13b-fab025f13927
00000000-0000-0000-0000-000000000000	367	b453zjwfsjz7	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 00:06:26.545502+00	2025-09-24 00:06:26.545502+00	\N	14bcc48f-2afe-478b-9573-6093026eb1c5
00000000-0000-0000-0000-000000000000	442	fmcoq3km64vo	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 20:58:14.656918+00	2025-09-26 12:21:11.950649+00	\N	28ce33e9-8464-4af5-a488-84f2db74a877
00000000-0000-0000-0000-000000000000	357	2qg2akzmnuoo	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 22:23:39.547621+00	2025-09-24 00:45:02.157509+00	3g5rwqoy72fw	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	346	gjiwebdnhgag	b7ce34ce-bbf1-4793-a827-559c510fcb1a	t	2025-09-23 16:37:00.489605+00	2025-09-29 13:47:27.911063+00	dxyfwmzlrxvn	ad655692-e323-4090-8a25-ce147090c14d
00000000-0000-0000-0000-000000000000	368	qoqb5vd3qkmx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 00:12:37.91335+00	2025-09-24 02:48:34.077135+00	\N	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	364	uogwtq4sig77	b7ce34ce-bbf1-4793-a827-559c510fcb1a	t	2025-09-23 23:57:18.011794+00	2025-09-24 02:48:34.184655+00	\N	2834d2ed-4433-4f37-8074-68b406d5b6ff
00000000-0000-0000-0000-000000000000	361	ldua7uss7bia	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 23:22:11.331023+00	2025-09-24 02:50:41.471731+00	3kqxgnurxfnd	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	373	w3g56wpahntn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 02:53:23.269509+00	2025-09-24 02:53:23.269509+00	\N	a3ab15b9-a5ff-4bd9-9b1a-f56174c2802b
00000000-0000-0000-0000-000000000000	374	ybgbkxwqydpn	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 02:53:24.424587+00	2025-09-24 02:53:24.424587+00	\N	3587b82c-3b64-41a0-9cd0-312b7b919a3d
00000000-0000-0000-0000-000000000000	375	votiwcwfiliv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 02:59:28.741573+00	2025-09-24 02:59:28.741573+00	\N	2fb57b63-503b-4cb6-8afc-45dcf268220a
00000000-0000-0000-0000-000000000000	376	jthptthka5zw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 02:59:30.031631+00	2025-09-24 02:59:30.031631+00	\N	cbe09361-1300-405e-b068-09dfaff1b6db
00000000-0000-0000-0000-000000000000	369	6zdvud5qbiw4	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 00:45:02.158352+00	2025-09-24 03:32:42.106857+00	2qg2akzmnuoo	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	371	6eq6xp3conzd	b7ce34ce-bbf1-4793-a827-559c510fcb1a	t	2025-09-24 02:48:34.185062+00	2025-09-24 03:46:42.880075+00	uogwtq4sig77	2834d2ed-4433-4f37-8074-68b406d5b6ff
00000000-0000-0000-0000-000000000000	370	p2w7rignft3g	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 02:48:34.077987+00	2025-09-24 03:46:59.564169+00	qoqb5vd3qkmx	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	345	mgg2xx5sefhs	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-23 16:32:32.664867+00	2025-09-24 14:41:56.852463+00	fgicor3tbze2	2ad7f87f-f1d4-4ee0-858b-e64fcbc650c8
00000000-0000-0000-0000-000000000000	372	2jtmxomuh3ys	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 02:50:41.472482+00	2025-09-24 20:26:04.964039+00	ldua7uss7bia	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	377	hasow3xjlrgv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:05:44.221106+00	2025-09-24 03:05:44.221106+00	\N	880731f2-b207-4334-bfc1-86c03da69893
00000000-0000-0000-0000-000000000000	378	pslpaelyqnvx	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:05:45.542102+00	2025-09-24 03:05:45.542102+00	\N	24e881c8-fa7d-4f0f-8f77-3a82fc9e5010
00000000-0000-0000-0000-000000000000	379	ndh7uvpvb3uj	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:05:56.566392+00	2025-09-24 03:05:56.566392+00	\N	522bd0df-fbbb-40ca-bab5-70a13ec1b134
00000000-0000-0000-0000-000000000000	380	chw5p27bvrzc	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:05:57.27298+00	2025-09-24 03:05:57.27298+00	\N	cc28275d-cbc3-4346-b4cb-a399d09e8886
00000000-0000-0000-0000-000000000000	381	3vwb2frosrck	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:06:36.005986+00	2025-09-24 03:06:36.005986+00	\N	9a901dc7-9062-4f30-b6d9-c14671414ea1
00000000-0000-0000-0000-000000000000	382	l5ckqpjnhyzp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:06:36.039957+00	2025-09-24 03:06:36.039957+00	\N	8b179c67-0a1c-44fd-bf0f-f51652e26338
00000000-0000-0000-0000-000000000000	383	x4k4wdez6bgh	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:06:37.147182+00	2025-09-24 03:06:37.147182+00	\N	308b9ee4-d926-4314-9613-f2f89ae323a3
00000000-0000-0000-0000-000000000000	384	rxbsfgx5ex2u	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:06:37.297871+00	2025-09-24 03:06:37.297871+00	\N	2cf4fe70-6f97-4854-bd7d-14db47fbcd39
00000000-0000-0000-0000-000000000000	385	g5kvdrm45jk7	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:24:24.264955+00	2025-09-24 03:24:24.264955+00	\N	85d2e846-afb7-41dc-8099-6ebbda77dda5
00000000-0000-0000-0000-000000000000	386	gnehzvm5zkpy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 03:24:25.803377+00	2025-09-24 03:24:25.803377+00	\N	9ad78d7d-2940-4a9a-9d71-6a72a3f7d181
00000000-0000-0000-0000-000000000000	420	f3e456e2wmiy	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 13:00:50.787826+00	2025-09-25 13:59:04.95326+00	\N	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	388	thktn2ir7eq7	b7ce34ce-bbf1-4793-a827-559c510fcb1a	f	2025-09-24 03:46:42.880967+00	2025-09-24 03:46:42.880967+00	6eq6xp3conzd	2834d2ed-4433-4f37-8074-68b406d5b6ff
00000000-0000-0000-0000-000000000000	421	y53knfz56brt	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 13:01:29.889584+00	2025-09-25 13:59:34.253941+00	ryyzlibgjzbf	5ebd48cb-fa50-4c11-ba9c-8be6861b6d51
00000000-0000-0000-0000-000000000000	387	oqwuw7g7v5hq	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 03:32:42.109301+00	2025-09-24 12:19:18.211367+00	6zdvud5qbiw4	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	428	z5sifixqmk2b	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 17:51:35.132475+00	2025-09-25 18:50:04.789182+00	meyvrmgrawb7	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	392	w7yp65wheavi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 13:48:45.169439+00	2025-09-24 13:48:45.169439+00	\N	bb30e7e6-02fe-48d4-b883-43728ef824b8
00000000-0000-0000-0000-000000000000	393	x2flqpfxhmyi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 13:48:46.360608+00	2025-09-24 13:48:46.360608+00	\N	ce790730-131f-4317-a99a-406944ba5864
00000000-0000-0000-0000-000000000000	394	pyqyzz3x5b7q	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 14:41:56.853343+00	2025-09-24 14:41:56.853343+00	mgg2xx5sefhs	2ad7f87f-f1d4-4ee0-858b-e64fcbc650c8
00000000-0000-0000-0000-000000000000	391	5oo3tdsstfhx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 13:44:21.117238+00	2025-09-24 19:37:26.836525+00	\N	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	422	yce5d5bkkwtk	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 13:51:10.907048+00	2025-09-25 18:50:39.58032+00	zke2i5vkaa3d	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	396	j32p5k5lohre	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 20:23:24.230298+00	2025-09-24 20:23:24.230298+00	\N	d5b39626-2557-42d8-b9e9-b1e593878d2b
00000000-0000-0000-0000-000000000000	397	izvk3iqiineb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 20:23:25.362803+00	2025-09-24 20:23:25.362803+00	\N	5fbcc27a-f1bf-4287-8162-dabf41033120
00000000-0000-0000-0000-000000000000	398	66mzmm7nmqfa	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 20:25:40.453658+00	2025-09-24 20:25:40.453658+00	\N	c4c78336-ccc3-4782-bd13-0a7e26a3ad91
00000000-0000-0000-0000-000000000000	399	2xej7hqyku4b	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-24 20:25:41.126075+00	2025-09-24 20:25:41.126075+00	\N	b88d97d3-8779-4eff-a789-992065346b74
00000000-0000-0000-0000-000000000000	435	hhgqp44o2oym	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 19:31:02.828015+00	2025-09-25 19:31:02.828015+00	\N	721a4466-9e99-4cd5-af72-cf8113399519
00000000-0000-0000-0000-000000000000	395	hsenfawcabe5	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 19:37:26.837426+00	2025-09-24 20:52:59.954922+00	5oo3tdsstfhx	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	436	gutwhgcpzy7u	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 19:31:03.684747+00	2025-09-25 19:31:03.684747+00	\N	0f434487-b857-4ba1-ac8a-e7e7d51b9fc6
00000000-0000-0000-0000-000000000000	401	ckaysmquymbl	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 20:52:59.955801+00	2025-09-24 22:08:55.017895+00	hsenfawcabe5	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	390	qvyahumh4bbk	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 12:19:18.212194+00	2025-09-24 22:13:31.686631+00	oqwuw7g7v5hq	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	411	czrdzmihatke	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 02:34:00.907095+00	2025-09-25 23:13:08.286041+00	cfb36wbrmqk6	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	402	gwuwfhkggbbd	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 22:08:55.01954+00	2025-09-24 23:41:53.90927+00	ckaysmquymbl	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	403	v2zy4dmzqkaz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 22:13:31.687595+00	2025-09-25 00:05:03.252578+00	qvyahumh4bbk	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	400	yddeiro4c7ig	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 20:26:04.96469+00	2025-09-25 00:32:21.248802+00	2jtmxomuh3ys	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	444	d27zbaoumi4l	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 23:13:15.263518+00	2025-09-26 01:49:08.918553+00	hiauiigrtuta	3c33697d-039b-44aa-85e1-e560db16ffb8
00000000-0000-0000-0000-000000000000	404	3hkhiw2mc6l3	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 23:41:53.91012+00	2025-09-25 00:40:52.979475+00	gwuwfhkggbbd	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	407	it7id4dh6zva	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 00:40:52.980286+00	2025-09-25 00:40:52.980286+00	3hkhiw2mc6l3	f03858cc-0f22-4eca-b303-7868c3d8bf48
00000000-0000-0000-0000-000000000000	389	iqn7dxyttnzn	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-24 03:46:59.564536+00	2025-09-25 01:22:25.071712+00	p2w7rignft3g	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	440	wttbulyognnm	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 20:46:16.494657+00	2025-09-26 02:27:26.623402+00	73p7j42mcchz	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	405	tcgzmqtoja7c	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 00:05:03.253414+00	2025-09-25 01:24:15.839065+00	v2zy4dmzqkaz	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	443	2q4x4rxax5e4	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 23:13:08.286814+00	2025-09-26 03:08:41.079712+00	czrdzmihatke	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	408	fbooliqdbegj	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 01:22:25.072559+00	2025-09-25 02:20:27.909732+00	iqn7dxyttnzn	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	418	zmx7ke3bhe5i	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 03:19:34.122056+00	2025-09-26 18:29:03.131424+00	hqahfq53wfq6	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	406	cfb36wbrmqk6	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 00:32:21.249711+00	2025-09-25 02:34:00.906238+00	yddeiro4c7ig	bea99ab9-284a-4a7c-9942-429b99588372
00000000-0000-0000-0000-000000000000	412	fqtjpjulzvqw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 02:57:23.349993+00	2025-09-25 02:57:23.349993+00	\N	12762c07-c412-4829-b79d-0277be9a32cc
00000000-0000-0000-0000-000000000000	413	7mafntw2o5bt	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 02:57:23.4677+00	2025-09-25 02:57:23.4677+00	\N	3dbea1b3-8a66-401d-b349-a6389592b371
00000000-0000-0000-0000-000000000000	414	mrlchpmv673b	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 02:57:24.239496+00	2025-09-25 02:57:24.239496+00	\N	269410d1-7498-495e-888b-9a86f9963de6
00000000-0000-0000-0000-000000000000	415	cikisixboqpv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-25 02:57:24.339228+00	2025-09-25 02:57:24.339228+00	\N	06dd32d5-a023-4a85-8135-aba365bb514b
00000000-0000-0000-0000-000000000000	410	tvaagpchnspy	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 02:20:27.910647+00	2025-09-25 03:18:52.072534+00	fbooliqdbegj	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	409	hqahfq53wfq6	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 01:24:15.839923+00	2025-09-25 03:19:34.121614+00	tcgzmqtoja7c	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	417	3qbbvktjkcqe	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 03:18:52.073484+00	2025-09-25 12:53:07.080522+00	tvaagpchnspy	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	416	ryyzlibgjzbf	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 03:00:22.100961+00	2025-09-25 13:01:29.888867+00	\N	5ebd48cb-fa50-4c11-ba9c-8be6861b6d51
00000000-0000-0000-0000-000000000000	419	zke2i5vkaa3d	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-25 12:53:07.08136+00	2025-09-25 13:51:10.906115+00	3qbbvktjkcqe	c96bea96-d32d-499f-b79c-004b8f6d155b
00000000-0000-0000-0000-000000000000	477	7aklhy5nrqnp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:40:09.726223+00	2025-09-26 13:40:09.726223+00	\N	9d642e43-0f34-4cfd-a877-c87759310360
00000000-0000-0000-0000-000000000000	478	22rjwbhoa6eu	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:40:10.996784+00	2025-09-26 13:40:10.996784+00	\N	e2436f3b-cbcd-411d-a494-3c0275bb3428
00000000-0000-0000-0000-000000000000	479	5azfpcbwlytu	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:41:37.231606+00	2025-09-26 13:41:37.231606+00	\N	c7227b64-e80f-425e-a13c-7b5d2831aac7
00000000-0000-0000-0000-000000000000	480	2xfhsts7nury	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:41:37.854315+00	2025-09-26 13:41:37.854315+00	\N	37948f6b-580e-4669-b1bd-831c022933e7
00000000-0000-0000-0000-000000000000	481	l6kel6suocy5	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:43:52.910885+00	2025-09-26 13:43:52.910885+00	\N	44b44034-d521-4663-8f5d-5f4a21388647
00000000-0000-0000-0000-000000000000	482	4rbntpbhnxyi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:43:53.642911+00	2025-09-26 13:43:53.642911+00	\N	986d2ca2-c766-427b-b4d6-0dcdbe085d4c
00000000-0000-0000-0000-000000000000	483	ue3tf27oqzuy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 13:45:23.461997+00	2025-09-26 13:45:23.461997+00	\N	40517ea9-a00c-4cb8-a89d-a14ee426f720
00000000-0000-0000-0000-000000000000	485	jeol7ssbggnn	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 14:34:43.975141+00	2025-09-26 16:06:51.269831+00	awxugyc76jyd	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	486	2dov46feqvk3	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 16:06:51.270915+00	2025-09-26 18:02:24.80187+00	jeol7ssbggnn	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	487	rkv7mfb6kiqa	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 18:02:24.80281+00	2025-09-26 19:01:12.301906+00	2dov46feqvk3	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	488	fy2pa23it7vv	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 18:29:03.132257+00	2025-09-26 19:59:12.852925+00	zmx7ke3bhe5i	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	484	apqmlw4kdnjy	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 13:45:37.907211+00	2025-09-26 19:59:38.462144+00	\N	06b38ec1-3923-42e1-9571-b6f82ad66e7c
00000000-0000-0000-0000-000000000000	491	4gg3unforbk3	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 19:59:38.46252+00	2025-09-26 19:59:38.46252+00	apqmlw4kdnjy	06b38ec1-3923-42e1-9571-b6f82ad66e7c
00000000-0000-0000-0000-000000000000	489	nvgya3cbwro5	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 19:01:12.302842+00	2025-09-26 20:04:20.309602+00	rkv7mfb6kiqa	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	492	t6h4estyzzhb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-26 20:04:20.310403+00	2025-09-26 20:04:20.310403+00	nvgya3cbwro5	b2a269be-8c39-4f0a-b6bb-aa79fa0f7807
00000000-0000-0000-0000-000000000000	494	jnqs34jploww	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 20:44:21.968803+00	2025-09-26 21:50:37.708928+00	\N	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	490	plp7s2uquvd2	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 19:59:12.853756+00	2025-09-26 22:12:17.305372+00	fy2pa23it7vv	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	493	7y3o3catts3e	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 20:44:06.691157+00	2025-09-26 22:12:19.920689+00	\N	2801ad52-dc35-436b-84fe-53a62f56b599
00000000-0000-0000-0000-000000000000	495	byvunyduo3ia	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 21:50:37.709702+00	2025-09-26 22:48:43.796809+00	jnqs34jploww	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	498	n6o4vltbzr46	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 22:48:43.797672+00	2025-09-26 23:46:56.159615+00	byvunyduo3ia	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	476	bcc4tnnwwgw4	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 13:14:37.104463+00	2025-09-26 23:58:42.204832+00	l5qgvnwyp3mv	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	500	ic7kkpmzgltu	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 23:46:56.160394+00	2025-09-27 01:02:59.647719+00	n6o4vltbzr46	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	502	j54bks7hioo7	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 01:02:59.648526+00	2025-09-27 02:01:32.858128+00	ic7kkpmzgltu	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	503	rjb2btcg3v3y	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 02:01:32.859024+00	2025-09-27 02:01:32.859024+00	j54bks7hioo7	e452093c-3261-404b-a8fd-053165270d9b
00000000-0000-0000-0000-000000000000	504	j4d57mlupe37	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 02:14:25.869624+00	2025-09-27 02:14:25.869624+00	\N	9bb2e1f7-2c9b-4f56-b831-dbfe581267dc
00000000-0000-0000-0000-000000000000	506	moq2l74iiuso	b7ce34ce-bbf1-4793-a827-559c510fcb1a	f	2025-09-27 02:23:23.417713+00	2025-09-27 02:23:23.417713+00	\N	cd55b051-19f9-410c-8a41-8a71dce1db1a
00000000-0000-0000-0000-000000000000	505	kq5fb5dq2nzk	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 02:23:20.807714+00	2025-09-27 03:43:21.74407+00	\N	6954b641-48e6-4295-9a96-fb9147f42ea5
00000000-0000-0000-0000-000000000000	499	eajewqfxlraw	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 22:52:05.459242+00	2025-09-27 05:18:41.75978+00	\N	00154e1d-1b1e-4ee2-b870-6fa1075b4086
00000000-0000-0000-0000-000000000000	508	uqrx43e2w6ko	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 05:18:41.760576+00	2025-09-27 05:18:41.760576+00	eajewqfxlraw	00154e1d-1b1e-4ee2-b870-6fa1075b4086
00000000-0000-0000-0000-000000000000	507	dig5xalevp2t	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 03:43:21.745153+00	2025-09-27 07:45:45.350606+00	kq5fb5dq2nzk	6954b641-48e6-4295-9a96-fb9147f42ea5
00000000-0000-0000-0000-000000000000	509	vt24v6uooso5	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 07:45:45.353004+00	2025-09-27 12:57:27.829952+00	dig5xalevp2t	6954b641-48e6-4295-9a96-fb9147f42ea5
00000000-0000-0000-0000-000000000000	510	tm3p3w4vwhil	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 12:57:27.830914+00	2025-09-27 12:57:27.830914+00	vt24v6uooso5	6954b641-48e6-4295-9a96-fb9147f42ea5
00000000-0000-0000-0000-000000000000	511	7jg6lxwsdzbr	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 13:08:50.466446+00	2025-09-27 14:09:47.644354+00	\N	399e1abf-1fee-4ff5-93a3-ffe54fb71b16
00000000-0000-0000-0000-000000000000	512	3pm7chw5mpni	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 14:09:47.645176+00	2025-09-27 14:09:47.645176+00	7jg6lxwsdzbr	399e1abf-1fee-4ff5-93a3-ffe54fb71b16
00000000-0000-0000-0000-000000000000	496	ldejhx5ehkhd	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 22:12:17.306181+00	2025-09-27 14:34:55.888586+00	plp7s2uquvd2	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	501	uwygnadxvx3n	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 23:58:42.205893+00	2025-09-27 14:57:22.622848+00	bcc4tnnwwgw4	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	513	y7v57sk53ks7	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 14:16:27.511887+00	2025-09-27 15:14:29.538295+00	\N	800d32c3-88a6-4f0f-acb2-eb75f37b79e0
00000000-0000-0000-0000-000000000000	517	pw4jbfb2gxqy	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:45:05.936147+00	2025-09-27 15:45:05.936147+00	\N	f8ace05e-01ab-4a5a-87aa-25f634762218
00000000-0000-0000-0000-000000000000	518	rcitv5tj4lyb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:45:22.477902+00	2025-09-27 15:45:22.477902+00	\N	807bb5c0-04ed-411f-9e0e-b52ed310c957
00000000-0000-0000-0000-000000000000	519	fl4bte4vojhf	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:45:39.163799+00	2025-09-27 15:45:39.163799+00	\N	22e6dd2f-ccd5-4173-bd5d-75424abdce83
00000000-0000-0000-0000-000000000000	497	pkmuuexc6mda	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-26 22:12:19.921081+00	2025-09-27 15:45:44.862382+00	7y3o3catts3e	2801ad52-dc35-436b-84fe-53a62f56b599
00000000-0000-0000-0000-000000000000	520	6hv5zlsmo6zj	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:45:44.863042+00	2025-09-27 15:45:44.863042+00	pkmuuexc6mda	2801ad52-dc35-436b-84fe-53a62f56b599
00000000-0000-0000-0000-000000000000	522	bk5vk6xdujjb	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:45:55.212336+00	2025-09-27 15:45:55.212336+00	\N	be9cb2d5-df2b-4a53-9101-6bde6df4aaa6
00000000-0000-0000-0000-000000000000	514	x7h23hd3o25d	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 14:34:55.889397+00	2025-09-27 15:53:27.692185+00	ldejhx5ehkhd	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	523	ciislm56rj2d	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:53:27.693052+00	2025-09-27 15:53:27.693052+00	x7h23hd3o25d	817e7f2b-278c-4f93-9939-7956f5b7b2a9
00000000-0000-0000-0000-000000000000	525	qz4mrlwpzypx	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:53:45.537359+00	2025-09-27 15:53:45.537359+00	\N	e5820dfb-edb9-4d81-8692-e301e3667c1a
00000000-0000-0000-0000-000000000000	526	3amysg2kjjme	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:54:02.207554+00	2025-09-27 15:54:02.207554+00	\N	305ec29a-67bc-49c3-bfcf-10d0e086e084
00000000-0000-0000-0000-000000000000	527	oegxo37ubx2w	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:54:18.990254+00	2025-09-27 15:54:18.990254+00	\N	3e53b1a7-27a5-412f-a6b2-c6f3981ab2e1
00000000-0000-0000-0000-000000000000	521	xsok4rps2kv7	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 15:45:51.198732+00	2025-09-27 16:49:37.955965+00	\N	4642dd53-0177-4ac6-9e30-4da167f4f380
00000000-0000-0000-0000-000000000000	524	xpmqnzipyrgy	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 15:53:35.116373+00	2025-09-27 16:51:41.763693+00	\N	9675febf-0456-4479-a65b-dd4ba737c090
00000000-0000-0000-0000-000000000000	516	erywjnkamneh	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 15:14:29.539183+00	2025-09-27 16:53:32.249511+00	y7v57sk53ks7	800d32c3-88a6-4f0f-acb2-eb75f37b79e0
00000000-0000-0000-0000-000000000000	528	jnrgu2qsfpuj	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 15:54:34.965162+00	2025-09-27 15:54:34.965162+00	\N	370baf72-b539-4345-aa2a-e17d866ff162
00000000-0000-0000-0000-000000000000	529	4ue5i5xvanaw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:01:29.690545+00	2025-09-27 16:01:29.690545+00	\N	6c62ec8f-27fe-461b-9759-5012f01e5ce8
00000000-0000-0000-0000-000000000000	530	uztaicdygxnk	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:01:46.270365+00	2025-09-27 16:01:46.270365+00	\N	cf59d320-cfbf-4e0f-a18d-4ea2fd8c767a
00000000-0000-0000-0000-000000000000	531	e3l6ucspqvyi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:02:03.032345+00	2025-09-27 16:02:03.032345+00	\N	7b39ed7e-84c5-4e45-8a4b-eddee38a726d
00000000-0000-0000-0000-000000000000	532	vl37avwzxsir	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:02:18.913318+00	2025-09-27 16:02:18.913318+00	\N	1025abf3-4bde-42ac-8dd7-878bcdf1c715
00000000-0000-0000-0000-000000000000	533	eu53nyq22r7y	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:03:18.419798+00	2025-09-27 16:03:18.419798+00	\N	d509fecb-ca66-4551-8755-e5d179cbfbe2
00000000-0000-0000-0000-000000000000	534	iggnormek6nd	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:03:35.068698+00	2025-09-27 16:03:35.068698+00	\N	62429f4b-27fb-4b65-afd3-41fdf3a79887
00000000-0000-0000-0000-000000000000	535	chzxae3dw5lo	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:03:51.820492+00	2025-09-27 16:03:51.820492+00	\N	a04816a3-5348-4802-abad-4b7aadb6a463
00000000-0000-0000-0000-000000000000	536	v3mhrrpmb5ar	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:04:07.757453+00	2025-09-27 16:04:07.757453+00	\N	152ad28b-07b7-40e0-b331-419f68cfc837
00000000-0000-0000-0000-000000000000	539	bueqj22hx4zp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 16:53:32.250366+00	2025-09-27 16:53:32.250366+00	erywjnkamneh	800d32c3-88a6-4f0f-acb2-eb75f37b79e0
00000000-0000-0000-0000-000000000000	515	jeto74uy56mz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 14:57:22.623691+00	2025-09-27 17:46:35.73106+00	uwygnadxvx3n	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	540	x3sdjcvdoikz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 17:20:53.845657+00	2025-09-27 18:18:56.968239+00	\N	25967779-9633-48aa-a32a-ee6b7f2b8a75
00000000-0000-0000-0000-000000000000	542	siqqv7bx36ya	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 18:18:56.969169+00	2025-09-27 19:17:00.546238+00	x3sdjcvdoikz	25967779-9633-48aa-a32a-ee6b7f2b8a75
00000000-0000-0000-0000-000000000000	543	t43qk2lpznka	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-27 19:17:00.547085+00	2025-09-27 19:17:00.547085+00	siqqv7bx36ya	25967779-9633-48aa-a32a-ee6b7f2b8a75
00000000-0000-0000-0000-000000000000	544	e3rsk2j4usye	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 19:30:21.375092+00	2025-09-27 20:28:49.06433+00	\N	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	545	oljs4if7xh5u	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 20:28:49.065147+00	2025-09-27 21:32:20.115077+00	e3rsk2j4usye	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	541	4xuuqhedwkf3	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 17:46:35.732004+00	2025-09-27 21:44:35.278888+00	jeto74uy56mz	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	546	ztwc5dga5xar	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 21:32:20.11594+00	2025-09-27 22:30:33.763476+00	oljs4if7xh5u	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	547	hya45zmqgf7x	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 21:44:35.279804+00	2025-09-27 22:47:51.311118+00	4xuuqhedwkf3	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	548	uszpokrylvgv	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 22:30:33.764332+00	2025-09-27 23:28:45.406089+00	ztwc5dga5xar	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	550	nbyuaz5zwkby	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 23:28:45.40695+00	2025-09-28 00:29:01.519134+00	uszpokrylvgv	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	553	spq4pcpdlrci	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 00:31:23.980483+00	2025-09-28 01:38:21.275148+00	\N	239d9368-0e58-4c90-9b2a-4da2133d28f4
00000000-0000-0000-0000-000000000000	551	viuvfs33oym5	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 00:29:01.520038+00	2025-09-28 02:14:55.761519+00	nbyuaz5zwkby	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	552	e5edim5dwepl	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 00:29:31.686289+00	2025-09-28 02:14:55.7738+00	gx2euualdrh2	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	554	c66guj7nivsn	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 01:38:21.276036+00	2025-09-28 02:36:43.193421+00	spq4pcpdlrci	239d9368-0e58-4c90-9b2a-4da2133d28f4
00000000-0000-0000-0000-000000000000	557	uriplqh76zlk	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 02:36:43.194495+00	2025-09-28 02:36:43.194495+00	c66guj7nivsn	239d9368-0e58-4c90-9b2a-4da2133d28f4
00000000-0000-0000-0000-000000000000	538	e3bijcl53zpc	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 16:51:41.764573+00	2025-09-28 03:02:56.432514+00	xpmqnzipyrgy	9675febf-0456-4479-a65b-dd4ba737c090
00000000-0000-0000-0000-000000000000	559	q22pgqqr25ml	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:10:47.856244+00	2025-09-28 03:10:47.856244+00	\N	baa203f0-93ff-4b85-8129-06dbfa276110
00000000-0000-0000-0000-000000000000	560	34ywtkcg7xsi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:11:04.467196+00	2025-09-28 03:11:04.467196+00	\N	5a819b0c-1251-4285-9af7-f8b54b3e7630
00000000-0000-0000-0000-000000000000	561	djqdgqq7aw4e	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:11:21.390491+00	2025-09-28 03:11:21.390491+00	\N	8f1c1f74-c0ac-4701-9f8e-57cc6cd403e6
00000000-0000-0000-0000-000000000000	562	cmp7vtcof342	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:11:37.612498+00	2025-09-28 03:11:37.612498+00	\N	ebbf0d50-c9f6-407a-9a3d-d3a09dd5cf78
00000000-0000-0000-0000-000000000000	555	haxcqhdovz4x	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 02:14:55.763071+00	2025-09-28 03:13:02.592397+00	viuvfs33oym5	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	537	svhgztpgjo35	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 16:49:37.956816+00	2025-09-28 03:13:59.704471+00	xsok4rps2kv7	4642dd53-0177-4ac6-9e30-4da167f4f380
00000000-0000-0000-0000-000000000000	565	qwd5be5fokze	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:22:36.093142+00	2025-09-28 03:22:36.093142+00	\N	1f8b6784-6f2b-4b33-8d4d-65242f7166f6
00000000-0000-0000-0000-000000000000	566	pyavhfq5vxrv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:22:52.747985+00	2025-09-28 03:22:52.747985+00	\N	47d2d5da-377e-4c8a-961d-aa4b281d73dc
00000000-0000-0000-0000-000000000000	567	oukavpk6bec2	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:23:09.452026+00	2025-09-28 03:23:09.452026+00	\N	03701a08-1d5c-43d9-b66f-cd6b47e97e64
00000000-0000-0000-0000-000000000000	568	47ranemtjrma	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 03:23:25.524748+00	2025-09-28 03:23:25.524748+00	\N	61921084-57a5-466c-b320-b3c90f52665f
00000000-0000-0000-0000-000000000000	564	in3tuhbxajzf	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 03:13:59.704882+00	2025-09-28 05:41:30.43752+00	svhgztpgjo35	4642dd53-0177-4ac6-9e30-4da167f4f380
00000000-0000-0000-0000-000000000000	563	cudvc5zlvn2l	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 03:13:02.593353+00	2025-09-28 05:51:09.115806+00	haxcqhdovz4x	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	570	oumc5ogiqrjv	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 05:51:09.116636+00	2025-09-28 05:51:09.116636+00	cudvc5zlvn2l	14c79d59-5138-4315-9672-15ec2883390a
00000000-0000-0000-0000-000000000000	571	qowcudjjqp7y	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 06:03:32.10686+00	2025-09-28 06:03:32.10686+00	\N	6d498e01-1dce-4104-aa8e-52d841ecead9
00000000-0000-0000-0000-000000000000	572	zgbw2taa65je	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 06:04:17.088069+00	2025-09-28 06:04:17.088069+00	\N	6e9d586e-6798-4bda-bb28-b40d67afe4cb
00000000-0000-0000-0000-000000000000	569	k62xjfe7oexj	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 05:41:30.438351+00	2025-09-28 06:51:13.13687+00	in3tuhbxajzf	4642dd53-0177-4ac6-9e30-4da167f4f380
00000000-0000-0000-0000-000000000000	574	qociqm4q2sse	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 06:51:13.137678+00	2025-09-28 06:51:13.137678+00	k62xjfe7oexj	4642dd53-0177-4ac6-9e30-4da167f4f380
00000000-0000-0000-0000-000000000000	558	z4leeoyfachl	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 03:02:56.433406+00	2025-09-28 07:44:24.044826+00	e3bijcl53zpc	9675febf-0456-4479-a65b-dd4ba737c090
00000000-0000-0000-0000-000000000000	576	i5usbf6utchi	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 07:44:24.045731+00	2025-09-28 07:44:24.045731+00	z4leeoyfachl	9675febf-0456-4479-a65b-dd4ba737c090
00000000-0000-0000-0000-000000000000	573	popeyljcpect	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 06:49:06.987872+00	2025-09-28 13:24:22.618365+00	\N	4249eefa-6e3b-4d15-bb9e-be1c7337d5b9
00000000-0000-0000-0000-000000000000	577	p6njdz4njjwb	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 13:24:22.619201+00	2025-09-28 14:28:04.257825+00	popeyljcpect	4249eefa-6e3b-4d15-bb9e-be1c7337d5b9
00000000-0000-0000-0000-000000000000	549	4oq6pg55im3t	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-27 22:47:51.311944+00	2025-09-28 14:41:40.505489+00	hya45zmqgf7x	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	556	pwk2otrkx7ay	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 02:14:55.774706+00	2025-09-28 15:17:15.880816+00	e5edim5dwepl	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	575	z3hmdnpwscpq	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 07:42:04.576984+00	2025-09-28 23:18:32.158256+00	\N	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	579	vzi74iwbrzur	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 14:41:40.506377+00	2025-09-28 14:41:40.506377+00	4oq6pg55im3t	2bc587db-178b-4a85-a2eb-833cdfd125d1
00000000-0000-0000-0000-000000000000	578	z62t7fko3lrx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 14:28:04.258641+00	2025-09-28 15:26:16.272869+00	p6njdz4njjwb	4249eefa-6e3b-4d15-bb9e-be1c7337d5b9
00000000-0000-0000-0000-000000000000	581	a5ualgbd73qp	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 15:26:16.273695+00	2025-09-28 15:26:16.273695+00	z62t7fko3lrx	4249eefa-6e3b-4d15-bb9e-be1c7337d5b9
00000000-0000-0000-0000-000000000000	580	3kpxkwbn34ir	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 15:17:15.882945+00	2025-09-28 16:15:37.979279+00	pwk2otrkx7ay	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	582	w2vbozsitb3z	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 15:31:58.009359+00	2025-09-28 16:47:51.085809+00	\N	cbfd4219-7ea9-4b31-a3bb-9b2e64aeceee
00000000-0000-0000-0000-000000000000	585	yyoosjaeytdw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 16:47:51.087696+00	2025-09-28 16:47:51.087696+00	w2vbozsitb3z	cbfd4219-7ea9-4b31-a3bb-9b2e64aeceee
00000000-0000-0000-0000-000000000000	586	eiugarzkzc4i	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 16:57:31.550083+00	2025-09-28 17:55:32.904802+00	\N	6b71da65-ad9c-43bc-8634-82e3ba8db791
00000000-0000-0000-0000-000000000000	587	pwnzrb73pney	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 17:55:32.905647+00	2025-09-28 18:53:46.688748+00	eiugarzkzc4i	6b71da65-ad9c-43bc-8634-82e3ba8db791
00000000-0000-0000-0000-000000000000	588	p3afyjmqhnfk	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 18:53:46.689585+00	2025-09-28 20:20:30.750727+00	pwnzrb73pney	6b71da65-ad9c-43bc-8634-82e3ba8db791
00000000-0000-0000-0000-000000000000	589	chkad2oqi3xq	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 20:20:30.751551+00	2025-09-28 21:18:37.707095+00	p3afyjmqhnfk	6b71da65-ad9c-43bc-8634-82e3ba8db791
00000000-0000-0000-0000-000000000000	590	tq5ijmqqbsse	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 21:18:37.707883+00	2025-09-28 21:18:37.707883+00	chkad2oqi3xq	6b71da65-ad9c-43bc-8634-82e3ba8db791
00000000-0000-0000-0000-000000000000	591	rues6h52i352	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 21:22:14.647913+00	2025-09-28 22:20:55.387912+00	\N	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	583	26dec4owym5o	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 15:47:50.789784+00	2025-09-28 22:51:19.235489+00	\N	5b6b3d12-667d-46f6-97ea-1d96dc1ffc2e
00000000-0000-0000-0000-000000000000	593	uvu6eo74wtkw	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-28 22:51:19.236355+00	2025-09-28 22:51:19.236355+00	26dec4owym5o	5b6b3d12-667d-46f6-97ea-1d96dc1ffc2e
00000000-0000-0000-0000-000000000000	592	mryftnvoj5lr	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 22:20:55.388648+00	2025-09-28 23:19:26.075726+00	rues6h52i352	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	584	t6tzpemtlq75	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 16:15:37.980175+00	2025-09-29 00:17:32.91201+00	3kpxkwbn34ir	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	595	e4k5xgnclktz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 23:19:26.076195+00	2025-09-29 00:20:31.541412+00	mryftnvoj5lr	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	594	wvrsfykystck	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-28 23:18:32.159097+00	2025-09-29 00:22:21.590809+00	z3hmdnpwscpq	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	596	adioy2de2sbx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 00:17:32.912837+00	2025-09-29 01:15:51.766099+00	t6tzpemtlq75	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	597	s52t46ausmdt	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 00:20:31.542177+00	2025-09-29 01:21:58.419982+00	e4k5xgnclktz	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	598	3vrfaecztec6	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 00:22:21.591702+00	2025-09-29 01:59:04.955677+00	wvrsfykystck	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	599	pfkych55gokz	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 01:15:51.766944+00	2025-09-29 02:15:54.635042+00	adioy2de2sbx	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	602	djq2jl544xep	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-29 02:15:54.635904+00	2025-09-29 02:15:54.635904+00	pfkych55gokz	947e5d6d-3068-4690-aaef-07543555fe9f
00000000-0000-0000-0000-000000000000	600	ok2h5lf62x7m	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 01:21:58.420896+00	2025-09-29 02:20:12.271846+00	s52t46ausmdt	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	603	ngsv6fe7hcfq	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 02:20:12.272769+00	2025-09-29 12:10:43.243386+00	ok2h5lf62x7m	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	604	kqu4lsq7wmtw	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 12:10:43.244378+00	2025-09-29 13:09:04.056542+00	ngsv6fe7hcfq	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	606	s23bzmatpn4m	b7ce34ce-bbf1-4793-a827-559c510fcb1a	f	2025-09-29 13:47:27.911976+00	2025-09-29 13:47:27.911976+00	gjiwebdnhgag	ad655692-e323-4090-8a25-ce147090c14d
00000000-0000-0000-0000-000000000000	607	figmblah4inu	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-29 14:15:50.120799+00	2025-09-29 14:15:50.120799+00	\N	ce1fd41a-bf0e-4be7-800e-acd1e743877f
00000000-0000-0000-0000-000000000000	605	mdcl5lpkf4sx	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 13:09:04.05759+00	2025-09-29 16:15:58.858347+00	kqu4lsq7wmtw	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	601	q5ljhdhx3h6o	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 01:59:04.956516+00	2025-09-29 17:20:56.992381+00	3vrfaecztec6	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	608	m73co6miuiet	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 16:15:58.859216+00	2025-09-29 17:28:40.600206+00	mdcl5lpkf4sx	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	609	nu4kwn3stjm4	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 17:20:56.993223+00	2025-09-29 18:18:58.849156+00	q5ljhdhx3h6o	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	610	c4o7qs4kuym3	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 17:28:40.601061+00	2025-09-29 18:34:34.695419+00	m73co6miuiet	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	611	ng6lafteeogv	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 18:18:58.850028+00	2025-09-29 19:22:51.136592+00	nu4kwn3stjm4	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	613	c2zlasvunghe	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-29 19:22:51.137774+00	2025-09-29 19:22:51.137774+00	ng6lafteeogv	4ff2381f-2aa4-487f-a303-b98af72d80e2
00000000-0000-0000-0000-000000000000	612	hyyb6npxtol4	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 18:34:34.69626+00	2025-09-29 19:40:41.365844+00	c4o7qs4kuym3	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	614	mpce7fzrwf6k	fca9d04a-e82a-43ad-b72a-127df226e75a	t	2025-09-29 19:40:41.366966+00	2025-09-29 20:49:21.177493+00	hyyb6npxtol4	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
00000000-0000-0000-0000-000000000000	615	jjobbvlnezcx	fca9d04a-e82a-43ad-b72a-127df226e75a	f	2025-09-29 20:49:21.178344+00	2025-09-29 20:49:21.178344+00	mpce7fzrwf6k	34ac5a9d-7a3b-4347-8d8d-bd0bca28614f
\.


--
-- Data for Name: saml_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_providers (id, sso_provider_id, entity_id, metadata_xml, metadata_url, attribute_mapping, created_at, updated_at, name_id_format) FROM stdin;
\.


--
-- Data for Name: saml_relay_states; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_relay_states (id, sso_provider_id, request_id, for_email, redirect_to, created_at, updated_at, flow_state_id) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.schema_migrations (version) FROM stdin;
20171026211738
20171026211808
20171026211834
20180103212743
20180108183307
20180119214651
20180125194653
00
20210710035447
20210722035447
20210730183235
20210909172000
20210927181326
20211122151130
20211124214934
20211202183645
20220114185221
20220114185340
20220224000811
20220323170000
20220429102000
20220531120530
20220614074223
20220811173540
20221003041349
20221003041400
20221011041400
20221020193600
20221021073300
20221021082433
20221027105023
20221114143122
20221114143410
20221125140132
20221208132122
20221215195500
20221215195800
20221215195900
20230116124310
20230116124412
20230131181311
20230322519590
20230402418590
20230411005111
20230508135423
20230523124323
20230818113222
20230914180801
20231027141322
20231114161723
20231117164230
20240115144230
20240214120130
20240306115329
20240314092811
20240427152123
20240612123726
20240729123726
20240802193726
20240806073726
20241009103726
20250717082212
20250731150234
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sessions (id, user_id, created_at, updated_at, factor_id, aal, not_after, refreshed_at, user_agent, ip, tag) FROM stdin;
eec4c124-899e-4628-9cce-5d530327957d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 22:03:15.015018+00	2025-09-22 22:03:15.015018+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	24.148.52.41	\N
3ebec739-ab41-42e1-9f44-6ca026ccf22a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 13:49:03.090034+00	2025-09-22 13:49:03.090034+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
c9352571-ba34-46ac-903c-6a5fd28b04ff	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 13:59:30.852449+00	2025-09-22 13:59:30.852449+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
b358ce44-49d9-4536-b654-ab9c7648900a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 14:01:48.103119+00	2025-09-22 14:01:48.103119+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
05f961ff-406c-4bfe-8476-fc9c0b39da15	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 14:13:37.749642+00	2025-09-22 14:13:37.749642+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
3150c680-2a4d-4ddb-8aee-626ae6ee1043	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	2025-09-22 14:20:43.427537+00	2025-09-22 14:20:43.427537+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
f9201503-0f2b-461b-b01f-2cebd6d85d52	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 22:06:20.085938+00	2025-09-22 22:06:20.085938+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	24.148.52.41	\N
d6d11e12-17f6-40e6-bd67-9eb7d1e72eed	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 14:09:06.139362+00	2025-09-22 19:51:36.123306+00	\N	aal1	\N	2025-09-22 19:51:36.123224	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
9a2c99f2-5d6c-4c5a-a5a7-b5838c412080	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:08:37.432364+00	2025-09-22 21:08:37.432364+00	\N	aal1	\N	\N	node	24.148.52.41	\N
342eda7e-30b4-44a8-a258-1f202196b92f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:08:37.460427+00	2025-09-22 21:08:37.460427+00	\N	aal1	\N	\N	node	24.148.52.41	\N
3733c2ba-c579-437d-8d59-406037110ccd	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:10:24.592913+00	2025-09-22 21:10:24.592913+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
0a4392b3-6674-4a78-b944-2a009d896066	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:13:30.845558+00	2025-09-22 21:13:30.845558+00	\N	aal1	\N	\N	node	24.148.52.41	\N
74e0057e-a520-47f9-bb0b-acbcd162e34c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:13:30.849203+00	2025-09-22 21:13:30.849203+00	\N	aal1	\N	\N	node	24.148.52.41	\N
49f4aaf9-1c2e-4e59-8c54-a032903a55ae	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:29:58.023367+00	2025-09-22 21:29:58.023367+00	\N	aal1	\N	\N	node	24.148.52.41	\N
add0cfae-bed1-44f5-8d77-e3ea9d117f69	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:29:58.034562+00	2025-09-22 21:29:58.034562+00	\N	aal1	\N	\N	node	24.148.52.41	\N
0c741295-d194-4b22-9e51-e19d146c5d7a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:31:53.96985+00	2025-09-22 21:31:53.96985+00	\N	aal1	\N	\N	node	24.148.52.41	\N
9e515341-0f4f-4a0a-a247-b47d79754499	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:31:53.976346+00	2025-09-22 21:31:53.976346+00	\N	aal1	\N	\N	node	24.148.52.41	\N
74431909-a0eb-4238-b7fa-6745bfd3fdc2	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:33:59.653535+00	2025-09-22 21:33:59.653535+00	\N	aal1	\N	\N	node	24.148.52.41	\N
ee96ebbf-241c-4321-8f45-db11198ab74d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:33:59.70459+00	2025-09-22 21:33:59.70459+00	\N	aal1	\N	\N	node	24.148.52.41	\N
f70d423e-809a-47d1-8ab4-e3ddd818c769	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:46:17.676057+00	2025-09-22 21:46:17.676057+00	\N	aal1	\N	\N	node	24.148.52.41	\N
76deaacf-1268-4e83-ae6e-b317b0475fd0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:46:17.715887+00	2025-09-22 21:46:17.715887+00	\N	aal1	\N	\N	node	24.148.52.41	\N
1d7c1c48-902a-4815-af22-eeba9dcf14d7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:10:15.238111+00	2025-09-23 00:10:15.238111+00	\N	aal1	\N	\N	node	68.220.60.230	\N
2ae8bbf7-3812-4714-8e65-337b44652650	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:00:44.434074+00	2025-09-22 23:00:44.434074+00	\N	aal1	\N	\N	node	24.148.52.41	\N
ffdd4d8b-ce58-4ff1-90fc-89ba14902767	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:00:44.441922+00	2025-09-22 23:00:44.441922+00	\N	aal1	\N	\N	node	24.148.52.41	\N
49ca16d3-e616-418e-82c5-aa248cdbbad9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:00:45.497446+00	2025-09-22 23:00:45.497446+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	24.148.52.41	\N
2aeabd4b-b668-4716-8a3d-713fe2df89ea	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:15:27.300193+00	2025-09-23 00:15:27.300193+00	\N	aal1	\N	\N	node	20.161.44.230	\N
f3bf7505-2cb4-46ff-8077-fde77827a301	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:31:04.116228+00	2025-09-22 23:31:04.116228+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.145.82	\N
f9da6c0b-073a-4fab-bc17-a0dcdfe6d850	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:31:04.785461+00	2025-09-22 23:31:04.785461+00	\N	aal1	\N	\N	node	64.236.145.82	\N
e7f88f0b-efae-4f18-a4d3-58a7157c2b08	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:39:54.294774+00	2025-09-22 23:39:54.294774+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.134.228	\N
7ada8d2a-1787-44e3-8701-9c9803eb05fa	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:39:55.022986+00	2025-09-22 23:39:55.022986+00	\N	aal1	\N	\N	node	64.236.134.228	\N
2ad7f87f-f1d4-4ee0-858b-e64fcbc650c8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 18:01:09.121606+00	2025-09-24 14:41:56.856459+00	\N	aal1	\N	2025-09-24 14:41:56.856385	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	207.231.170.10	\N
f3a7aed8-f626-4fcd-989f-6206bfb6b7be	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:47:27.645723+00	2025-09-22 23:47:27.645723+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.212.163.229	\N
ceda9236-d6d2-4192-a5bb-8e4e10b54008	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:47:28.547261+00	2025-09-22 23:47:28.547261+00	\N	aal1	\N	\N	node	172.212.163.229	\N
5f4a8140-02c4-4333-840a-3b902b344596	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 21:10:56.394564+00	2025-09-22 23:49:55.605182+00	\N	aal1	\N	2025-09-22 23:49:55.605095	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
594bbf85-7eba-46e5-8af0-b69c45d9756a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:54:43.151447+00	2025-09-22 23:54:43.151447+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.137.131	\N
7434296c-192e-44ef-b569-f90fe5f55462	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 23:54:43.890251+00	2025-09-22 23:54:43.890251+00	\N	aal1	\N	\N	node	64.236.137.131	\N
4067d7c3-1ca9-4da5-a0f9-ce70603b2ef8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:06:47.34356+00	2025-09-23 00:06:47.34356+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.184.174.115	\N
2b839e4e-5f0b-4637-9dcd-892ca918a5f7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:06:48.736318+00	2025-09-23 00:06:48.736318+00	\N	aal1	\N	\N	node	172.184.174.115	\N
e67cdca9-60ad-49c4-8623-a19d9d94330c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:10:13.921193+00	2025-09-23 00:10:13.921193+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.60.230	\N
743b8c33-fc19-49f6-a454-04b0012bc044	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:11:21.934341+00	2025-09-23 00:11:21.934341+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.145.68	\N
d812a59d-3a2a-45f2-9756-b071ecfa0f1e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:11:22.687171+00	2025-09-23 00:11:22.687171+00	\N	aal1	\N	\N	node	64.236.145.68	\N
997677dd-abdb-40e6-ba38-4c1581c342c0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 14:21:04.821254+00	2025-09-25 23:35:22.995532+00	\N	aal1	\N	2025-09-25 23:35:22.995459	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
5fa4d284-a828-424c-80cc-0842f86321b4	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:15:26.457657+00	2025-09-23 00:15:26.457657+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.161.44.230	\N
de24884d-699c-4a2c-92bd-f2812c89162d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:22:26.613725+00	2025-09-23 00:22:26.613725+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.153.148	\N
01f7db29-a677-4da6-a92d-0840c06e8c26	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:22:27.365307+00	2025-09-23 00:22:27.365307+00	\N	aal1	\N	\N	node	64.236.153.148	\N
a57f0f2c-7516-48a3-bf8a-17627cacf890	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:29:07.244922+00	2025-09-23 00:29:07.244922+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	132.196.32.54	\N
ba1a5df8-ed0a-4e1f-af43-0ca4b1bd0fff	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:29:08.487697+00	2025-09-23 00:29:08.487697+00	\N	aal1	\N	\N	node	132.196.32.54	\N
f4035166-b3ff-4388-b9e8-a3bff09f7dcd	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:33:34.970876+00	2025-09-23 00:33:34.970876+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	40.116.73.183	\N
4eda1d6b-d4c0-48c3-8dd3-d0fdd1419d1e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 22:06:40.173362+00	2025-09-23 22:08:26.384215+00	\N	aal1	\N	2025-09-23 22:08:26.384135	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
259340d9-4d2f-4620-9fe7-b76d44c9f29b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:33:35.641256+00	2025-09-23 00:33:35.641256+00	\N	aal1	\N	\N	node	40.116.73.183	\N
a5a9edee-65b8-43f3-a7a8-915d48819afa	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:40:27.859911+00	2025-09-23 00:40:27.859911+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.159.228.208	\N
798a8bf5-5023-442a-bc7a-d3c5b42614ec	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:40:29.098972+00	2025-09-23 00:40:29.098972+00	\N	aal1	\N	\N	node	52.159.228.208	\N
35805eb6-ee9a-4404-9f35-ff220dc23465	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:41:55.178054+00	2025-09-23 00:41:55.178054+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.225.29.3	\N
33e0ab3d-cc0c-48d0-8e19-7b4ba7246db1	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:41:56.60722+00	2025-09-23 00:41:56.60722+00	\N	aal1	\N	\N	node	52.225.29.3	\N
d9853f38-9ac7-476c-b61c-aed0349b94b0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:47:59.399468+00	2025-09-23 00:47:59.399468+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.59.119	\N
36e821d5-a787-4c4f-bf67-ae58c4bd3842	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:48:00.667922+00	2025-09-23 00:48:00.667922+00	\N	aal1	\N	\N	node	68.220.59.119	\N
87a85634-02ef-40cd-8930-71e7cf89b37d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:57:44.003894+00	2025-09-23 00:57:44.003894+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.174.221.229	\N
f02ee68c-1348-47c1-8e88-693516764f6d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 00:57:44.747974+00	2025-09-23 00:57:44.747974+00	\N	aal1	\N	\N	node	172.174.221.229	\N
c899591b-b307-4ac6-a04a-ee37e259001d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:04:34.989651+00	2025-09-23 01:04:34.989651+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.184.210.243	\N
7221f4e5-3506-44fa-8a2c-def1bdb9667e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:04:36.427879+00	2025-09-23 01:04:36.427879+00	\N	aal1	\N	\N	node	172.184.210.243	\N
caf1fd53-5493-47bf-be1c-4205413a0683	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:08:53.622394+00	2025-09-23 01:08:53.622394+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.135.134	\N
087ad6c6-a3d4-4f1f-9768-5f698788424a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:08:54.519537+00	2025-09-23 01:08:54.519537+00	\N	aal1	\N	\N	node	64.236.135.134	\N
e1e8b2ed-87a6-49fb-85ab-ab5c5c5f8cbd	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:16:47.159302+00	2025-09-23 01:16:47.159302+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	135.237.130.147	\N
ffe7e017-449b-42c8-bb84-af7331269760	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:16:47.90898+00	2025-09-23 01:16:47.90898+00	\N	aal1	\N	\N	node	135.237.130.147	\N
8750e9f7-738f-42d9-8964-a746c5c580e9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:17:07.025754+00	2025-09-23 01:17:07.025754+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	135.232.193.36	\N
f5a5e86c-79cb-4f08-af00-b2138232500d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:17:07.78381+00	2025-09-23 01:17:07.78381+00	\N	aal1	\N	\N	node	135.232.193.36	\N
53c13018-ca31-4b39-8ce4-52cccfb4959f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:20:48.351015+00	2025-09-23 01:20:48.351015+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	145.132.99.99	\N
9df4f900-6352-45e2-80ea-ce929db5e5b8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:20:49.145888+00	2025-09-23 01:20:49.145888+00	\N	aal1	\N	\N	node	145.132.99.99	\N
07dc9732-d87f-4743-be87-b0b39cc3135f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:29:12.467557+00	2025-09-23 01:29:12.467557+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	40.76.117.245	\N
8273f8f0-6b4e-41a6-8466-55d639136d50	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:29:13.207073+00	2025-09-23 01:29:13.207073+00	\N	aal1	\N	\N	node	40.76.117.245	\N
b16c9bf6-414f-4125-9c46-a1c00c749ad7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:32:57.190755+00	2025-09-23 01:32:57.190755+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	13.83.162.35	\N
2309c610-2b69-4831-a9ce-3842289a5974	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:32:58.642674+00	2025-09-23 01:32:58.642674+00	\N	aal1	\N	\N	node	13.83.162.35	\N
4bfbb94a-efb2-4304-84ac-d95dcf37f5c2	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:36:38.725842+00	2025-09-23 01:36:38.725842+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.109.36.225	\N
0235f13d-0636-4084-8aa8-c2c6e0cb146e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:36:39.489152+00	2025-09-23 01:36:39.489152+00	\N	aal1	\N	\N	node	20.109.36.225	\N
0fee531d-98c0-4a3f-a36f-2168cbc7d1fc	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:46:11.367879+00	2025-09-23 02:46:11.367879+00	\N	aal1	\N	\N	node	48.214.54.49	\N
93527f66-0098-4c70-9078-fd2f023efffa	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:41:50.890273+00	2025-09-23 01:41:50.890273+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	48.214.54.119	\N
d5d26239-107d-4b6b-be35-127e4ec21ecb	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:41:51.630842+00	2025-09-23 01:41:51.630842+00	\N	aal1	\N	\N	node	48.214.54.119	\N
4ba4c7cd-1b2e-471a-9291-b35b0eccba16	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:49:45.671753+00	2025-09-23 01:49:45.671753+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	135.232.232.66	\N
f723b604-d319-4a94-afb7-375f72c7f5a9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 01:49:46.436502+00	2025-09-23 01:49:46.436502+00	\N	aal1	\N	\N	node	135.232.232.66	\N
a88a8130-733e-4923-8b09-e8076f5c56be	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:03:41.963171+00	2025-09-23 02:03:41.963171+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.56.246	\N
1dffe0b0-424d-4413-8386-42e3704841f0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:03:43.494105+00	2025-09-23 02:03:43.494105+00	\N	aal1	\N	\N	node	68.220.56.246	\N
13b7105b-f6b2-4c37-924d-9154f3e7881e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:07:02.477148+00	2025-09-23 02:07:02.477148+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.161.75.164	\N
0184380a-fc33-4050-882e-2391c7ffcafc	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:07:03.628952+00	2025-09-23 02:07:03.628952+00	\N	aal1	\N	\N	node	52.161.75.164	\N
69431b8b-8507-4306-ae7c-5ca09c8df80c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:12:47.619395+00	2025-09-23 02:12:47.619395+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.184.210.36	\N
c3ee43d3-27a8-4587-bfa7-a51e65dfb057	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:12:48.909784+00	2025-09-23 02:12:48.909784+00	\N	aal1	\N	\N	node	172.184.210.36	\N
a4d3a5a9-f69d-40ad-b8d9-b3f2091b434c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:21:33.024074+00	2025-09-23 02:21:33.024074+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.153.148	\N
99406753-19b6-40db-ae47-d230eebfc65d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:21:33.781429+00	2025-09-23 02:21:33.781429+00	\N	aal1	\N	\N	node	64.236.153.148	\N
255bcdc9-b25f-48a6-9213-c1475cb0f3ab	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:33.819067+00	2025-09-23 02:32:33.819067+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.192.149	\N
cefeaad1-267b-47f4-97f8-98d5fb1bcfff	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:35.237537+00	2025-09-23 02:32:35.237537+00	\N	aal1	\N	\N	node	172.182.192.149	\N
f0bfbb71-4079-4329-8901-df44010564a8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:37.723944+00	2025-09-23 02:32:37.723944+00	\N	aal1	\N	\N	node	172.182.192.149	\N
edfd34b7-ab55-4df9-a81b-6885f9900f94	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:39.969832+00	2025-09-23 02:32:39.969832+00	\N	aal1	\N	\N	node	172.182.192.149	\N
f0ac90e3-c839-4572-b85b-65919b64c2fb	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:41.935902+00	2025-09-23 02:32:41.935902+00	\N	aal1	\N	\N	node	172.182.192.149	\N
984d536e-4022-4c9a-b161-e54d8e00a3fe	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:44.179598+00	2025-09-23 02:32:44.179598+00	\N	aal1	\N	\N	node	172.182.192.149	\N
93503dd2-ea13-4bb9-a569-fb62ce41c6ab	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:32:46.465209+00	2025-09-23 02:32:46.465209+00	\N	aal1	\N	\N	node	172.182.192.149	\N
77dfdb42-0ed2-4987-af25-a18677fdc2d0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:35:27.385111+00	2025-09-23 02:35:27.385111+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.208.62.165	\N
622ef07e-01bf-4804-97ef-afe9a5d032ce	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:35:28.131625+00	2025-09-23 02:35:28.131625+00	\N	aal1	\N	\N	node	172.208.62.165	\N
81d758a5-d41c-4809-a02b-e5ed870d482b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:43:04.533999+00	2025-09-23 02:43:04.533999+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	135.232.200.36	\N
fd57887c-ddde-4d7f-89fd-e9e5012c114c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:43:05.256195+00	2025-09-23 02:43:05.256195+00	\N	aal1	\N	\N	node	135.232.200.36	\N
b88d97d3-8779-4eff-a789-992065346b74	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 20:25:41.124906+00	2025-09-24 20:25:41.124906+00	\N	aal1	\N	\N	node	172.214.44.51	\N
341ce507-e9ec-451a-acca-63148c8b6604	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:46:10.553067+00	2025-09-23 02:46:10.553067+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	48.214.54.49	\N
7d15fcca-5e53-4543-aa01-753b5dd4b564	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:59:52.654238+00	2025-09-23 02:59:52.654238+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.109.38.161	\N
64a99b1a-1d4d-411c-9d64-170476fd9582	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 02:59:53.360158+00	2025-09-23 02:59:53.360158+00	\N	aal1	\N	\N	node	20.109.38.161	\N
37948f6b-580e-4669-b1bd-831c022933e7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:41:37.853565+00	2025-09-26 13:41:37.853565+00	\N	aal1	\N	\N	node	64.236.169.120	\N
dac8cca2-ea2b-4f27-9e66-a63bd7f8d007	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 03:19:18.245592+00	2025-09-23 03:19:18.245592+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	57.151.137.134	\N
01e66001-b59c-4a65-9a21-37117ae08a25	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 03:19:19.557425+00	2025-09-23 03:19:19.557425+00	\N	aal1	\N	\N	node	57.151.137.134	\N
be1ea5eb-0331-45f2-b07b-369015441a65	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 12:27:46.553959+00	2025-09-23 12:27:46.553959+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.161.68.247	\N
dceb15cd-857b-4cf2-b3f4-42a7d0219b67	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 12:27:47.217285+00	2025-09-23 12:27:47.217285+00	\N	aal1	\N	\N	node	20.161.68.247	\N
3587b82c-3b64-41a0-9cd0-312b7b919a3d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 02:53:24.423776+00	2025-09-24 02:53:24.423776+00	\N	aal1	\N	\N	node	172.182.195.34	\N
15622b36-3099-4b4a-8019-b688d77de173	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 13:54:52.449764+00	2025-09-23 13:54:52.449764+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.174.165.8	\N
231e4393-7f1d-4159-865f-b8e78c02e793	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 13:54:53.143605+00	2025-09-23 13:54:53.143605+00	\N	aal1	\N	\N	node	172.174.165.8	\N
4fff18dd-f120-458b-8ce8-869e6eccf279	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 13:58:37.088244+00	2025-09-23 13:58:37.088244+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.177.105	\N
a7f45d48-3803-4645-866e-ff272a586a10	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 13:58:37.878606+00	2025-09-23 13:58:37.878606+00	\N	aal1	\N	\N	node	64.236.177.105	\N
19360f7a-0694-4e81-8a57-1f90dfe0870a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 14:00:21.783827+00	2025-09-23 14:00:21.783827+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	135.119.239.35	\N
2168d58a-bafb-4d5b-ad35-d4c2693ead57	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 14:00:22.570399+00	2025-09-23 14:00:22.570399+00	\N	aal1	\N	\N	node	135.119.239.35	\N
2fb57b63-503b-4cb6-8afc-45dcf268220a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 02:59:28.739933+00	2025-09-24 02:59:28.739933+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	40.65.58.133	\N
f8eebf3b-58fd-421f-9a8e-32f7969f3524	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 20:06:49.250463+00	2025-09-23 20:06:49.250463+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.141.183	\N
fd66f005-e285-4eff-a683-ea3fbd358b81	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 20:06:50.031813+00	2025-09-23 20:06:50.031813+00	\N	aal1	\N	\N	node	64.236.141.183	\N
cbe09361-1300-405e-b068-09dfaff1b6db	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 02:59:30.030429+00	2025-09-24 02:59:30.030429+00	\N	aal1	\N	\N	node	40.65.58.133	\N
880731f2-b207-4334-bfc1-86c03da69893	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:05:44.219716+00	2025-09-24 03:05:44.219716+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.212.2	\N
b470fe91-8ee1-4432-bcd4-8141e5cee463	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 22:21:16.498057+00	2025-09-23 22:21:16.498057+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.60.149	\N
41c084bd-fc39-4b60-8350-98b86db26e37	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 22:21:17.905117+00	2025-09-23 22:21:17.905117+00	\N	aal1	\N	\N	node	68.220.60.149	\N
24e881c8-fa7d-4f0f-8f77-3a82fc9e5010	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:05:45.541286+00	2025-09-24 03:05:45.541286+00	\N	aal1	\N	\N	node	172.182.212.2	\N
b1a4e22b-5512-4361-b637-95c68ce382aa	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 22:37:32.803989+00	2025-09-23 22:37:32.803989+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.195.84	\N
33d60413-5831-4395-84e4-4198096774c7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 22:37:34.030356+00	2025-09-23 22:37:34.030356+00	\N	aal1	\N	\N	node	172.182.195.84	\N
e7dad7f0-a57d-449e-8433-c077d992f85c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 23:05:29.817621+00	2025-09-23 23:05:29.817621+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
522bd0df-fbbb-40ca-bab5-70a13ec1b134	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:05:56.565545+00	2025-09-24 03:05:56.565545+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	4.246.135.36	\N
79e49142-7c46-428e-b936-154491597bfe	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 23:23:04.437577+00	2025-09-23 23:23:04.437577+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.176.19.193	\N
a4cbe804-8d2e-4980-9cfe-e9d19a4547b0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 23:23:05.658208+00	2025-09-23 23:23:05.658208+00	\N	aal1	\N	\N	node	52.176.19.193	\N
bd7a754f-6ce2-4989-ae9f-a0bc271bba56	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 00:01:57.872867+00	2025-09-24 00:01:57.872867+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
855d4b36-8051-4415-a13b-fab025f13927	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 00:05:29.523944+00	2025-09-24 00:05:29.523944+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
14bcc48f-2afe-478b-9573-6093026eb1c5	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 00:06:26.54457+00	2025-09-24 00:06:26.54457+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
817e7f2b-278c-4f93-9939-7956f5b7b2a9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-23 03:41:00.542341+00	2025-09-27 15:53:27.69608+00	\N	aal1	\N	2025-09-27 15:53:27.696005	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
bb30e7e6-02fe-48d4-b883-43728ef824b8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 13:48:45.167762+00	2025-09-24 13:48:45.167762+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.208.153.212	\N
c96bea96-d32d-499f-b79c-004b8f6d155b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 00:12:37.911918+00	2025-09-25 19:48:46.61752+00	\N	aal1	\N	2025-09-25 19:48:46.617445	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
f03858cc-0f22-4eca-b303-7868c3d8bf48	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 13:44:21.115808+00	2025-09-25 00:40:52.983133+00	\N	aal1	\N	2025-09-25 00:40:52.983056	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
a3ab15b9-a5ff-4bd9-9b1a-f56174c2802b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 02:53:23.268109+00	2025-09-24 02:53:23.268109+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.195.34	\N
cc28275d-cbc3-4346-b4cb-a399d09e8886	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:05:57.271531+00	2025-09-24 03:05:57.271531+00	\N	aal1	\N	\N	node	4.246.135.36	\N
9a901dc7-9062-4f30-b6d9-c14671414ea1	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:06:36.005126+00	2025-09-24 03:06:36.005126+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.62.105	\N
8b179c67-0a1c-44fd-bf0f-f51652e26338	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:06:36.03915+00	2025-09-24 03:06:36.03915+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	128.24.161.86	\N
308b9ee4-d926-4314-9613-f2f89ae323a3	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:06:37.146512+00	2025-09-24 03:06:37.146512+00	\N	aal1	\N	\N	node	68.220.62.105	\N
2cf4fe70-6f97-4854-bd7d-14db47fbcd39	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:06:37.297163+00	2025-09-24 03:06:37.297163+00	\N	aal1	\N	\N	node	128.24.161.86	\N
85d2e846-afb7-41dc-8099-6ebbda77dda5	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:24:24.263608+00	2025-09-24 03:24:24.263608+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.225.29.101	\N
9ad78d7d-2940-4a9a-9d71-6a72a3f7d181	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 03:24:25.802399+00	2025-09-24 03:24:25.802399+00	\N	aal1	\N	\N	node	52.225.29.101	\N
ce790730-131f-4317-a99a-406944ba5864	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 13:48:46.359543+00	2025-09-24 13:48:46.359543+00	\N	aal1	\N	\N	node	172.208.153.212	\N
2834d2ed-4433-4f37-8074-68b406d5b6ff	b7ce34ce-bbf1-4793-a827-559c510fcb1a	2025-09-23 23:57:18.009903+00	2025-09-24 03:46:42.883974+00	\N	aal1	\N	2025-09-24 03:46:42.883903	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.1 Safari/605.1.15	24.148.52.41	\N
ad655692-e323-4090-8a25-ce147090c14d	b7ce34ce-bbf1-4793-a827-559c510fcb1a	2025-09-23 14:02:24.965004+00	2025-09-29 13:47:27.9156+00	\N	aal1	\N	2025-09-29 13:47:27.915496	Mozilla/5.0 (iPhone; CPU iPhone OS 18_7 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.1 Mobile/15E148 Safari/604.1	24.148.52.41	\N
d5b39626-2557-42d8-b9e9-b1e593878d2b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 20:23:24.228773+00	2025-09-24 20:23:24.228773+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.225.29.3	\N
5fbcc27a-f1bf-4287-8162-dabf41033120	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 20:23:25.361836+00	2025-09-24 20:23:25.361836+00	\N	aal1	\N	\N	node	52.225.29.3	\N
c4c78336-ccc3-4782-bd13-0a7e26a3ad91	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-24 20:25:40.452289+00	2025-09-24 20:25:40.452289+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.214.44.51	\N
12762c07-c412-4829-b79d-0277be9a32cc	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 02:57:23.348547+00	2025-09-25 02:57:23.348547+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.173.219.146	\N
3dbea1b3-8a66-401d-b349-a6389592b371	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 02:57:23.466872+00	2025-09-25 02:57:23.466872+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.109.86.227	\N
269410d1-7498-495e-888b-9a86f9963de6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 02:57:24.238614+00	2025-09-25 02:57:24.238614+00	\N	aal1	\N	\N	node	20.109.86.227	\N
06dd32d5-a023-4a85-8135-aba365bb514b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 02:57:24.338306+00	2025-09-25 02:57:24.338306+00	\N	aal1	\N	\N	node	52.173.219.146	\N
cb0de52c-38ff-48fa-8003-0d133bafc7d5	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 00:34:06.117562+00	2025-09-26 01:32:27.20405+00	\N	aal1	\N	2025-09-26 01:32:27.203963	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
1dc019f3-38be-4235-a40d-e6821f8315f2	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 01:33:55.412434+00	2025-09-26 01:33:55.412434+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
80a760f6-4dca-4374-bd94-cf673f4c8606	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 01:44:36.558987+00	2025-09-26 01:44:36.558987+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
5cb74499-25cd-49ca-b364-22771b1eb4b5	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 03:19:54.880529+00	2025-09-26 03:19:54.880529+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
392c45aa-c180-4ee1-9cb0-5a74548d26a6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 01:52:01.67121+00	2025-09-26 01:52:01.67121+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	40.76.181.209	\N
70d959bc-7b0c-4a9e-a25e-03e67515e18e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 01:52:02.428461+00	2025-09-26 01:52:02.428461+00	\N	aal1	\N	\N	node	40.76.181.209	\N
7f61059d-9275-45a3-86f5-a3f0e1e5e02c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:00:59.338684+00	2025-09-26 02:00:59.338684+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
fcfacb72-bad0-47ae-91ad-409fcd6e758a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:05:33.397066+00	2025-09-26 02:05:33.397066+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.161.82.80	\N
5ebd48cb-fa50-4c11-ba9c-8be6861b6d51	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 03:00:22.099532+00	2025-09-25 18:50:39.398015+00	\N	aal1	\N	2025-09-25 18:50:39.397927	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
462c9a63-a0fe-40f3-b277-470759931dc8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 18:58:06.941072+00	2025-09-25 18:58:06.941072+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	13.83.233.97	\N
ed2fee83-925e-4626-9fa6-98ea7d5a792d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 18:58:08.368742+00	2025-09-25 18:58:08.368742+00	\N	aal1	\N	\N	node	13.83.233.97	\N
721a4466-9e99-4cd5-af72-cf8113399519	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 19:31:02.826598+00	2025-09-25 19:31:02.826598+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.154.117.37	\N
0f434487-b857-4ba1-ac8a-e7e7d51b9fc6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 19:31:03.683937+00	2025-09-25 19:31:03.683937+00	\N	aal1	\N	\N	node	68.154.117.37	\N
303060a5-5cc2-467a-9b66-1f66e5f3241d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:05:34.820698+00	2025-09-26 02:05:34.820698+00	\N	aal1	\N	\N	node	52.161.82.80	\N
0d55c6fa-24af-453d-871b-1ba52ca98a2b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:58:46.123281+00	2025-09-26 02:58:46.123281+00	\N	aal1	\N	\N	node	52.159.245.150	\N
65105d82-c8c9-4dc8-bb2d-5b5291bca58d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 19:50:48.466975+00	2025-09-25 20:49:12.102061+00	\N	aal1	\N	2025-09-25 20:49:12.101971	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
ef533127-bd95-46a0-ad6a-42e2a340fc89	b7ce34ce-bbf1-4793-a827-559c510fcb1a	2025-09-26 03:58:01.314465+00	2025-09-26 03:58:01.314465+00	\N	aal1	\N	\N	Mozilla/5.0 (iPhone; CPU iPhone OS 18_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1	24.148.52.41	\N
3c33697d-039b-44aa-85e1-e560db16ffb8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 19:28:01.691278+00	2025-09-26 03:00:57.118659+00	\N	aal1	\N	2025-09-26 03:00:57.118571	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
0a547866-32ed-4118-ac89-ace9a9937e79	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 23:41:53.207117+00	2025-09-25 23:41:53.207117+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
a0432195-d7c2-41d3-9cad-9906185fb83c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 23:55:32.145051+00	2025-09-25 23:55:32.145051+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
8bfbb464-1b8f-4c2e-9139-681484154b36	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 23:57:10.885184+00	2025-09-25 23:57:10.885184+00	\N	aal1	\N	\N	Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Mobile Safari/537.36	24.148.52.41	\N
b3ca9dba-50ed-43ce-9c2c-36010b182962	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 00:03:19.185498+00	2025-09-26 00:03:19.185498+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Safari/605.1.15	24.148.52.41	\N
5fbfb6ac-d489-4b76-bb08-8fa60500cb64	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 00:05:57.575411+00	2025-09-26 00:05:57.575411+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Safari/605.1.15	24.148.52.41	\N
1b700bc1-5c40-4594-861d-66174d0c5b27	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 00:07:24.804873+00	2025-09-26 00:07:24.804873+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Safari/605.1.15	24.148.52.41	\N
d857be60-e203-4624-b129-c2ee25abaf6b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 00:09:48.101387+00	2025-09-26 00:09:48.101387+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Safari/605.1.15	24.148.52.41	\N
ed76a1d4-31fe-4126-a429-c0815efa056b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:18:41.130193+00	2025-09-26 02:18:41.130193+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
97949d70-89f9-41d5-ad50-03a8ba924222	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:20:11.149541+00	2025-09-26 02:20:11.149541+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
58b6a350-8737-40dc-869b-43e30815c3ca	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:20:36.616135+00	2025-09-26 02:20:36.616135+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
9d642e43-0f34-4cfd-a877-c87759310360	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:40:09.724956+00	2025-09-26 13:40:09.724956+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	68.220.58.145	\N
9218cd02-93cc-48e0-8a0f-03e495060473	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:58:44.905164+00	2025-09-26 02:58:44.905164+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.159.245.150	\N
bea99ab9-284a-4a7c-9942-429b99588372	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-22 22:40:38.108863+00	2025-09-26 03:08:41.083814+00	\N	aal1	\N	2025-09-26 03:08:41.083738	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
28ce33e9-8464-4af5-a488-84f2db74a877	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 20:58:14.6555+00	2025-09-26 12:21:11.954638+00	\N	aal1	\N	2025-09-26 12:21:11.954557	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
2bc587db-178b-4a85-a2eb-833cdfd125d1	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-25 13:00:50.7865+00	2025-09-28 14:41:40.509278+00	\N	aal1	\N	2025-09-28 14:41:40.509203	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
e2436f3b-cbcd-411d-a494-3c0275bb3428	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:40:10.994308+00	2025-09-26 13:40:10.994308+00	\N	aal1	\N	\N	node	68.220.58.145	\N
c7227b64-e80f-425e-a13c-7b5d2831aac7	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:41:37.230725+00	2025-09-26 13:41:37.230725+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.169.120	\N
947e5d6d-3068-4690-aaef-07543555fe9f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 02:25:28.140942+00	2025-09-29 02:15:54.641014+00	\N	aal1	\N	2025-09-29 02:15:54.640938	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.148.52.41	\N
44b44034-d521-4663-8f5d-5f4a21388647	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:43:52.909253+00	2025-09-26 13:43:52.909253+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	145.132.100.182	\N
986d2ca2-c766-427b-b4d6-0dcdbe085d4c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:43:53.641532+00	2025-09-26 13:43:53.641532+00	\N	aal1	\N	\N	node	145.132.100.182	\N
40517ea9-a00c-4cb8-a89d-a14ee426f720	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:45:23.460464+00	2025-09-26 13:45:23.460464+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
be9cb2d5-df2b-4a53-9101-6bde6df4aaa6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:45:55.211462+00	2025-09-27 15:45:55.211462+00	\N	aal1	\N	\N	node	172.203.30.211	\N
e5820dfb-edb9-4d81-8692-e301e3667c1a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:53:45.53652+00	2025-09-27 15:53:45.53652+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.165.251.242	\N
06b38ec1-3923-42e1-9571-b6f82ad66e7c	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 13:45:37.906377+00	2025-09-26 19:59:38.465573+00	\N	aal1	\N	2025-09-26 19:59:38.465491	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
b2a269be-8c39-4f0a-b6bb-aa79fa0f7807	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 12:52:54.90169+00	2025-09-26 20:04:20.313198+00	\N	aal1	\N	2025-09-26 20:04:20.313126	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
305ec29a-67bc-49c3-bfcf-10d0e086e084	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:54:02.206751+00	2025-09-27 15:54:02.206751+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.165.251.242	\N
3e53b1a7-27a5-412f-a6b2-c6f3981ab2e1	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:54:18.989471+00	2025-09-27 15:54:18.989471+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	52.165.251.242	\N
370baf72-b539-4345-aa2a-e17d866ff162	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:54:34.963982+00	2025-09-27 15:54:34.963982+00	\N	aal1	\N	\N	node	52.165.251.242	\N
6c62ec8f-27fe-461b-9759-5012f01e5ce8	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:01:29.689116+00	2025-09-27 16:01:29.689116+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.161.30.224	\N
cf59d320-cfbf-4e0f-a18d-4ea2fd8c767a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:01:46.269582+00	2025-09-27 16:01:46.269582+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.161.30.224	\N
e452093c-3261-404b-a8fd-053165270d9b	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 20:44:21.968026+00	2025-09-27 02:01:32.861956+00	\N	aal1	\N	2025-09-27 02:01:32.861886	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
9bb2e1f7-2c9b-4f56-b831-dbfe581267dc	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 02:14:25.867495+00	2025-09-27 02:14:25.867495+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
cd55b051-19f9-410c-8a41-8a71dce1db1a	b7ce34ce-bbf1-4793-a827-559c510fcb1a	2025-09-27 02:23:23.41612+00	2025-09-27 02:23:23.41612+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	216.24.219.67	\N
7b39ed7e-84c5-4e45-8a4b-eddee38a726d	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:02:03.031432+00	2025-09-27 16:02:03.031432+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	20.161.30.224	\N
00154e1d-1b1e-4ee2-b870-6fa1075b4086	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 22:52:05.457942+00	2025-09-27 05:18:41.763366+00	\N	aal1	\N	2025-09-27 05:18:41.763283	Mozilla/5.0 (iPhone; CPU iPhone OS 18_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1	209.122.138.167	\N
1025abf3-4bde-42ac-8dd7-878bcdf1c715	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:02:18.912071+00	2025-09-27 16:02:18.912071+00	\N	aal1	\N	\N	node	20.161.30.224	\N
6954b641-48e6-4295-9a96-fb9147f42ea5	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 02:23:20.806419+00	2025-09-27 12:57:27.834113+00	\N	aal1	\N	2025-09-27 12:57:27.834033	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
399e1abf-1fee-4ff5-93a3-ffe54fb71b16	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 13:08:50.463772+00	2025-09-27 14:09:47.647929+00	\N	aal1	\N	2025-09-27 14:09:47.647854	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
25967779-9633-48aa-a32a-ee6b7f2b8a75	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 17:20:53.844254+00	2025-09-27 19:17:00.550149+00	\N	aal1	\N	2025-09-27 19:17:00.550052	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
f8ace05e-01ab-4a5a-87aa-25f634762218	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:45:05.934825+00	2025-09-27 15:45:05.934825+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.203.30.211	\N
807bb5c0-04ed-411f-9e0e-b52ed310c957	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:45:22.476912+00	2025-09-27 15:45:22.476912+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.203.30.211	\N
22e6dd2f-ccd5-4173-bd5d-75424abdce83	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:45:39.162971+00	2025-09-27 15:45:39.162971+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.203.30.211	\N
2801ad52-dc35-436b-84fe-53a62f56b599	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-26 20:44:06.689791+00	2025-09-27 15:45:44.865262+00	\N	aal1	\N	2025-09-27 15:45:44.865184	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
d509fecb-ca66-4551-8755-e5d179cbfbe2	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:03:18.41906+00	2025-09-27 16:03:18.41906+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.145.87	\N
62429f4b-27fb-4b65-afd3-41fdf3a79887	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:03:35.067878+00	2025-09-27 16:03:35.067878+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.145.87	\N
a04816a3-5348-4802-abad-4b7aadb6a463	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:03:51.819762+00	2025-09-27 16:03:51.819762+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	64.236.145.87	\N
152ad28b-07b7-40e0-b331-419f68cfc837	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 16:04:07.756763+00	2025-09-27 16:04:07.756763+00	\N	aal1	\N	\N	node	64.236.145.87	\N
1f8b6784-6f2b-4b33-8d4d-65242f7166f6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:22:36.091987+00	2025-09-28 03:22:36.091987+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.225.135	\N
baa203f0-93ff-4b85-8129-06dbfa276110	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:10:47.855182+00	2025-09-28 03:10:47.855182+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	57.151.128.136	\N
800d32c3-88a6-4f0f-acb2-eb75f37b79e0	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 14:16:27.510608+00	2025-09-27 16:53:32.253452+00	\N	aal1	\N	2025-09-27 16:53:32.253359	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
5a819b0c-1251-4285-9af7-f8b54b3e7630	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:11:04.466385+00	2025-09-28 03:11:04.466385+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	57.151.128.136	\N
14c79d59-5138-4315-9672-15ec2883390a	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 19:30:21.373775+00	2025-09-28 05:51:09.119943+00	\N	aal1	\N	2025-09-28 05:51:09.119843	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
239d9368-0e58-4c90-9b2a-4da2133d28f4	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 00:31:23.979191+00	2025-09-28 02:36:43.197258+00	\N	aal1	\N	2025-09-28 02:36:43.19718	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.1 Safari/605.1.15	24.148.52.41	\N
8f1c1f74-c0ac-4701-9f8e-57cc6cd403e6	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:11:21.389616+00	2025-09-28 03:11:21.389616+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	57.151.128.136	\N
ebbf0d50-c9f6-407a-9a3d-d3a09dd5cf78	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:11:37.611746+00	2025-09-28 03:11:37.611746+00	\N	aal1	\N	\N	node	57.151.128.136	\N
9675febf-0456-4479-a65b-dd4ba737c090	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:53:35.115381+00	2025-09-28 07:44:24.049015+00	\N	aal1	\N	2025-09-28 07:44:24.048939	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
47d2d5da-377e-4c8a-961d-aa4b281d73dc	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:22:52.747238+00	2025-09-28 03:22:52.747238+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.225.135	\N
03701a08-1d5c-43d9-b66f-cd6b47e97e64	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:23:09.450326+00	2025-09-28 03:23:09.450326+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36	172.182.225.135	\N
61921084-57a5-466c-b320-b3c90f52665f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 03:23:25.524001+00	2025-09-28 03:23:25.524001+00	\N	aal1	\N	\N	node	172.182.225.135	\N
6d498e01-1dce-4104-aa8e-52d841ecead9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 06:03:32.105587+00	2025-09-28 06:03:32.105587+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
6e9d586e-6798-4bda-bb28-b40d67afe4cb	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 06:04:17.087131+00	2025-09-28 06:04:17.087131+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
4642dd53-0177-4ac6-9e30-4da167f4f380	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-27 15:45:51.197952+00	2025-09-28 06:51:13.140742+00	\N	aal1	\N	2025-09-28 06:51:13.140647	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
4249eefa-6e3b-4d15-bb9e-be1c7337d5b9	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 06:49:06.986292+00	2025-09-28 15:26:16.276454+00	\N	aal1	\N	2025-09-28 15:26:16.276382	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
cbfd4219-7ea9-4b31-a3bb-9b2e64aeceee	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 15:31:58.007605+00	2025-09-28 16:47:51.09323+00	\N	aal1	\N	2025-09-28 16:47:51.093147	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
4ff2381f-2aa4-487f-a303-b98af72d80e2	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 07:42:04.575816+00	2025-09-29 19:22:51.140808+00	\N	aal1	\N	2025-09-29 19:22:51.140722	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
6b71da65-ad9c-43bc-8634-82e3ba8db791	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 16:57:31.548902+00	2025-09-28 21:18:37.710526+00	\N	aal1	\N	2025-09-28 21:18:37.710456	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
34ac5a9d-7a3b-4347-8d8d-bd0bca28614f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 21:22:14.646732+00	2025-09-29 20:49:21.181114+00	\N	aal1	\N	2025-09-29 20:49:21.181042	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
5b6b3d12-667d-46f6-97ea-1d96dc1ffc2e	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-28 15:47:50.788417+00	2025-09-28 22:51:19.239192+00	\N	aal1	\N	2025-09-28 22:51:19.239117	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
ce1fd41a-bf0e-4be7-800e-acd1e743877f	fca9d04a-e82a-43ad-b72a-127df226e75a	2025-09-29 14:15:50.11942+00	2025-09-29 14:15:50.11942+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36	24.148.52.41	\N
\.


--
-- Data for Name: sso_domains; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_domains (id, sso_provider_id, domain, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: sso_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_providers (id, resource_id, created_at, updated_at, disabled) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.users (instance_id, id, aud, role, email, encrypted_password, email_confirmed_at, invited_at, confirmation_token, confirmation_sent_at, recovery_token, recovery_sent_at, email_change_token_new, email_change, email_change_sent_at, last_sign_in_at, raw_app_meta_data, raw_user_meta_data, is_super_admin, created_at, updated_at, phone, phone_confirmed_at, phone_change, phone_change_token, phone_change_sent_at, email_change_token_current, email_change_confirm_status, banned_until, reauthentication_token, reauthentication_sent_at, is_sso_user, deleted_at, is_anonymous) FROM stdin;
00000000-0000-0000-0000-000000000000	c39b6edd-41bc-4b17-8d5c-375ef0f8d453	authenticated	authenticated	admin@kgay.com	$2a$10$2RJ.m00.2R4K81bGR4pxK.n3oCQsNJyeGLKDzy5vhLup9cA.mxyN2	2025-09-16 03:40:55.477061+00	\N		\N		\N			\N	2025-09-16 03:48:14.036878+00	{"provider": "email", "providers": ["email"]}	{"role": "content_manager", "username": "admin@atlantis.com", "full_name": "Bryan Tester", "email_verified": true}	\N	2025-09-16 03:40:55.461233+00	2025-09-20 00:06:10.702504+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	fca9d04a-e82a-43ad-b72a-127df226e75a	authenticated	authenticated	admin@atlantis.com	$2a$10$NX9vng9CVD74NRkOcNWBaOwN5udmHmKULnptzhxnRf9KLzKBNlGHa	2025-09-16 04:06:16.989347+00	\N		\N		\N			\N	2025-09-29 14:15:50.119338+00	{"provider": "email", "providers": ["email"]}	{"name": {"last": "Hearn", "first": "Bryan"}, "role": "super_admin", "username": "BryanH605", "email_verified": true}	\N	2025-09-16 04:06:16.984014+00	2025-09-29 20:49:21.179582+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	authenticated	authenticated	bryhearnchi@gmail.com	$2a$10$mPEPZLI.7zGA8v9eKxydWu1iR7mw9Pi5D96jENbyA0P1cbZU9viOe	2025-09-22 14:16:31.808315+00	\N		\N		\N			\N	2025-09-22 14:20:43.427457+00	{"provider": "email", "providers": ["email"]}	{"name": {"last": "2", "first": "Bryan", "middle": "", "suffix": "", "preferred": ""}, "role": "content_manager", "username": "bryhearnchi@gmail.com", "full_name": "Bryan 2", "email_verified": true}	\N	2025-09-22 14:16:31.802915+00	2025-09-29 13:26:20.406772+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	b7ce34ce-bbf1-4793-a827-559c510fcb1a	authenticated	authenticated	steven@kgaytravel.com	$2a$10$goeNhJKSn1zaD1fLH4afKebXKsLO5BXv0FhP7s2dZ1ZMCyf1SDhM.	2025-09-20 16:44:44.480372+00	\N		\N		\N			\N	2025-09-27 02:23:23.416037+00	{"provider": "email", "providers": ["email"]}	{"name": {"full": "Steven K", "last": "K", "first": "Steven", "middle": "", "suffix": "", "preferred": ""}, "role": "super_admin", "username": "steven@kgaytravel.com", "full_name": "Steven K", "email_verified": true}	\N	2025-09-20 16:44:44.47609+00	2025-09-29 13:47:27.913942+00	\N	\N			\N		0	\N		\N	f	\N	f
\.


--
-- Data for Name: amenities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.amenities (id, name, description, created_at, updated_at) FROM stdin;
1	WiFi	High-speed internet access throughout the ship	2025-09-27 14:50:15.423194	2025-09-27 14:50:15.423194
2	Pool	Large swimming pool with deck chairs	2025-09-27 14:50:15.423194	2025-09-27 14:50:15.423194
3	Spa	Full-service spa with massage treatments	2025-09-27 14:50:15.423194	2025-09-27 14:50:15.423194
4	Fitness Center	Modern gym with cardio and weight equipment	2025-09-27 14:50:15.423194	2025-09-27 14:50:15.423194
5	Kids Club	Supervised activities for children	2025-09-27 14:50:15.423194	2025-09-27 14:50:15.423194
7	Wi-Fi	High-speed internet throughout the ship	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
8	Gym	Fully equipped fitness center	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
9	Spa	Full-service spa and wellness center	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
10	Casino	Gaming and entertainment	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
11	Theater	Live entertainment venue	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
12	Nightclub	Dance club and bar	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
13	Library	Quiet reading space	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
14	Kids Club	Children activities area	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
15	Teen Zone	Teen hangout area	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
16	Jogging Track	Outdoor running track	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
17	Basketball Court	Sports facility	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
18	Mini Golf	Mini golf course	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
19	Rock Climbing	Rock climbing wall	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
20	Zip Line	Zip line attraction	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
21	Water Slides	Water park features	2025-09-27 23:34:26.155564	2025-09-27 23:34:26.155564
\.


--
-- Data for Name: charter_companies; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.charter_companies (id, name, created_at, updated_at) FROM stdin;
2	VACAYA	2025-09-29 00:15:57.547704	2025-09-29 00:15:57.547704
1	Atlantis	2025-09-29 00:15:57.547704	2025-09-29 00:21:26.688965
\.


--
-- Data for Name: events; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.events (id, trip_id, date, "time", title, type, venue, talent_ids, created_at, updated_at, party_theme_id) FROM stdin;
1	1	2025-08-20 15:00:00	17:00	Pre-Cruise Happy Hour by KGay Travel	social	Academias Hotel RoofTop Bar	\N	2025-09-14 12:35:37.723	2025-09-14 12:35:37.723	\N
4	1	2025-08-21 15:00:00	19:30	Monét X Change	show	Red Room	[2]	2025-09-14 12:35:37.855	2025-09-14 12:35:37.855	\N
5	1	2025-08-21 15:00:00	22:00	Monét X Change	show	Red Room	[2]	2025-09-14 12:35:37.895	2025-09-14 12:35:37.895	\N
6	1	2025-08-21 15:00:00	21:00	Rob Houchen	show	The Manor	[7]	2025-09-14 12:35:37.933	2025-09-14 12:35:37.933	\N
7	1	2025-08-21 15:00:00	23:00	Gay Comedy Stars (Brad Loekle, Rachel Scanlon, Daniel Webb)	show	The Manor	[9, 10, 11]	2025-09-14 12:35:37.975	2025-09-14 12:35:37.975	\N
8	1	2025-08-21 15:00:00	23:00	Piano Bar with Brian Nash	lounge	On the Rocks	[21]	2025-09-14 12:35:38.015	2025-09-14 12:35:38.015	\N
10	1	2025-08-22 15:00:00	17:00	Another Rose (Dinner show)	dining	The Manor	[13]	2025-09-14 12:35:38.097	2025-09-14 12:35:38.097	\N
11	1	2025-08-22 15:00:00	22:00	Monét X Change	show	Red Room	[2]	2025-09-14 12:35:38.137	2025-09-14 12:35:38.137	\N
12	1	2025-08-22 15:00:00	21:00	Alyssa Wray	show	The Manor	[8]	2025-09-14 12:35:38.179	2025-09-14 12:35:38.179	\N
13	1	2025-08-22 15:00:00	23:00	Sherry Vine	show	The Manor	[5]	2025-09-14 12:35:38.221	2025-09-14 12:35:38.221	\N
16	1	2025-08-23 15:00:00	19:00	Alexis Michelle	show	The Manor	[3]	2025-09-14 12:35:38.347	2025-09-14 12:35:38.347	\N
17	1	2025-08-23 15:00:00	19:30	AirOtic	show	Red Room	[12]	2025-09-14 12:35:38.387	2025-09-14 12:35:38.387	\N
18	1	2025-08-23 15:00:00	22:00	AirOtic	show	Red Room	[12]	2025-09-14 12:35:38.425	2025-09-14 12:35:38.425	\N
19	1	2025-08-23 15:00:00	21:00	Rob Houchen	show	The Manor	[7]	2025-09-14 12:35:38.463	2025-09-14 12:35:38.463	\N
20	1	2025-08-23 15:00:00	23:00	Gay Comedy Stars (Rachel Scanlon, Daniel Webb)	show	The Manor	[10, 11]	2025-09-14 12:35:38.505	2025-09-14 12:35:38.505	\N
22	1	2025-08-23 15:00:00	23:00	Piano Bar with William TN Hall	lounge	On the Rocks	[20]	2025-09-14 12:35:38.587	2025-09-14 12:35:38.587	\N
23	1	2025-08-24 15:00:00	22:00	AirOtic	show	Red Room	[12]	2025-09-14 12:35:38.629	2025-09-14 12:35:38.629	\N
24	1	2025-08-24 15:00:00	21:00	Leona Winter	show	The Manor	[4]	2025-09-14 12:35:38.671	2025-09-14 12:35:38.671	\N
25	1	2025-08-24 15:00:00	23:00	Rob Houchen	show	The Manor	[7]	2025-09-14 12:35:38.711	2025-09-14 12:35:38.711	\N
26	1	2025-08-24 15:00:00	23:00	Piano Bar with Brandon James Gwinn	lounge	On the Rocks	[22]	2025-09-14 12:35:38.753	2025-09-14 12:35:38.753	\N
28	1	2025-08-25 15:00:00	17:00	Another Rose (Dinner show)	dining	The Manor	[13]	2025-09-14 12:35:38.837	2025-09-14 12:35:38.837	\N
29	1	2025-08-25 15:00:00	19:30	Persephone	show	Red Room	[14]	2025-09-14 12:35:38.877	2025-09-14 12:35:38.877	\N
30	1	2025-08-25 15:00:00	22:00	Persephone	show	Red Room	[14]	2025-09-14 12:35:38.919	2025-09-14 12:35:38.919	\N
31	1	2025-08-25 15:00:00	21:00	Alyssa Wray	show	The Manor	[8]	2025-09-14 12:35:38.959	2025-09-14 12:35:38.959	\N
32	1	2025-08-25 15:00:00	23:00	Alexis Michelle	show	The Manor	[3]	2025-09-14 12:35:39.001	2025-09-14 12:35:39.001	\N
34	1	2025-08-25 15:00:00	23:00	Piano Bar with Brian Nash	lounge	On the Rocks	[21]	2025-09-14 12:35:39.085	2025-09-14 12:35:39.085	\N
35	1	2025-08-26 15:00:00	14:00	Bingo with The Diva	show	Red Room	[15]	2025-09-14 12:35:39.125	2025-09-14 12:35:39.125	\N
37	1	2025-08-26 15:00:00	19:30	Reuben Kaye	show	Red Room	[6]	2025-09-14 12:35:39.207	2025-09-14 12:35:39.207	\N
38	1	2025-08-26 15:00:00	22:00	Reuben Kaye	show	Red Room	[6]	2025-09-14 12:35:39.251	2025-09-14 12:35:39.251	\N
39	1	2025-08-26 15:00:00	19:00	Leona Winter	show	The Manor	[4]	2025-09-14 12:35:39.293	2025-09-14 12:35:39.293	\N
40	1	2025-08-26 15:00:00	21:00	Comedy All-Stars (Brad Loekle, Rachel Scanlon, Daniel Webb)	show	The Manor	[9, 10, 11]	2025-09-14 12:35:39.333	2025-09-14 12:35:39.333	\N
41	1	2025-08-26 15:00:00	23:00	Sherry Vine	show	The Manor	[5]	2025-09-14 12:35:39.376	2025-09-14 12:35:39.376	\N
42	1	2025-08-26 15:00:00	23:00	Piano Bar with William TN Hall	lounge	On the Rocks	[20]	2025-09-14 12:35:39.417	2025-09-14 12:35:39.417	\N
44	1	2025-08-27 15:00:00	22:00	Persephone	show	Red Room	[14]	2025-09-14 12:35:39.507	2025-09-14 12:35:39.507	\N
45	1	2025-08-27 15:00:00	21:00	Comedy All-Stars (Brad Loekle, Rachel Scanlon, Daniel Webb)	show	The Manor	[9, 10, 11]	2025-09-14 12:35:39.549	2025-09-14 12:35:39.549	\N
46	1	2025-08-27 15:00:00	23:00	Sherry Vine	show	The Manor	[5]	2025-09-14 12:35:39.591	2025-09-14 12:35:39.591	\N
9	1	2025-08-21 15:00:00	23:00	Welcome Party	party	Aquatic Club	\N	2025-09-14 12:35:38.055	2025-09-14 12:35:38.055	15
48	1	2025-08-28 15:00:00	17:00	Another Rose (Dinner show)	dining	The Manor	[13]	2025-09-14 12:35:39.677	2025-09-14 12:35:39.677	\N
49	1	2025-08-28 15:00:00	17:00	Audra McDonald	show	Red Room	[1]	2025-09-14 12:35:39.718	2025-09-14 12:35:39.718	\N
50	1	2025-08-28 15:00:00	20:00	Audra McDonald	show	Red Room	[1]	2025-09-14 12:35:39.761	2025-09-14 12:35:39.761	\N
51	1	2025-08-28 15:00:00	22:00	Audra McDonald	show	Red Room	[1]	2025-09-14 12:35:39.803	2025-09-14 12:35:39.803	\N
52	1	2025-08-28 15:00:00	21:00	Leona Winter	show	The Manor	[4]	2025-09-14 12:35:39.845	2025-09-14 12:35:39.845	\N
53	1	2025-08-28 15:00:00	23:00	Alyssa Wray	show	The Manor	[8]	2025-09-14 12:35:39.889	2025-09-14 12:35:39.889	\N
54	1	2025-08-28 15:00:00	23:00	Piano Bar with William TN Hall	lounge	On the Rocks	[20]	2025-09-14 12:35:39.929	2025-09-14 12:35:39.929	\N
56	1	2025-08-29 15:00:00	19:00	Another Rose (Dinner show)	dining	The Manor	[13]	2025-09-14 12:35:40.011	2025-09-14 12:35:40.011	\N
57	1	2025-08-29 15:00:00	23:00	Sherry Vine	show	The Manor	[5]	2025-09-14 12:35:40.051	2025-09-14 12:35:40.051	\N
58	1	2025-08-29 15:00:00	23:00	Piano Bar with Brandon James Gwinn	lounge	On the Rocks	[22]	2025-09-14 12:35:40.093	2025-09-14 12:35:40.093	\N
62	1	2025-08-30 15:00:00	19:00	Alexis Michelle	show	The Manor	[3]	2025-09-14 12:35:40.261	2025-09-14 12:35:40.261	\N
63	1	2025-08-30 15:00:00	21:00	Alyssa Wray	show	The Manor	[8]	2025-09-14 12:35:40.301	2025-09-14 12:35:40.301	\N
64	1	2025-08-30 15:00:00	19:30	Brad's Last Laugh (Brad Loekle)	show	Red Room	[9]	2025-09-14 12:35:40.353	2025-09-14 12:35:40.353	\N
65	1	2025-08-30 15:00:00	22:00	Brad's Last Laugh (Brad Loekle)	show	Red Room	[9]	2025-09-14 12:35:40.403	2025-09-14 12:35:40.403	\N
66	1	2025-08-30 15:00:00	23:00	Piano Bar with Brian Nash	lounge	On the Rocks	[21]	2025-09-14 12:35:40.445	2025-09-14 12:35:40.445	\N
2	1	2025-08-21 15:00:00	18:00	Sail-Away Party	party	Aquatic Club	\N	2025-09-14 12:35:37.77	2025-09-14 12:35:37.77	11
14	1	2025-08-22 15:00:00	23:00	UNITE	party	Aquatic Club	\N	2025-09-14 12:35:38.263	2025-09-14 12:35:38.263	13
47	1	2025-08-27 15:00:00	23:00	Greek Isles: Here We Go Again!	party	Aquatic Club	\N	2025-09-14 12:35:39.631	2025-09-14 12:35:39.631	5
55	1	2025-08-29 15:00:00	00:30	Neon Playground	party	Red Room	\N	2025-09-14 12:35:39.969	2025-09-14 12:35:39.969	8
61	1	2025-08-30 15:00:00	17:00	Revival! Classic Disco T-Dance	party	Aquatic Club	\N	2025-09-14 12:35:40.219	2025-09-14 12:35:40.219	10
60	1	2025-08-29 15:00:00	05:00	Off-White After party	party	The Manor	\N	2025-09-14 12:35:40.177	2025-09-14 12:35:40.177	9
21	1	2025-08-23 15:00:00	23:00	Lost At Sea	party	Aquatic Club	\N	2025-09-14 12:35:38.546	2025-09-14 12:35:38.546	7
27	1	2025-08-24 15:00:00	23:00	Atlantis Night Club	party	On the Rocks	\N	2025-09-14 12:35:38.795	2025-09-14 12:35:38.795	2
33	1	2025-08-25 15:00:00	23:00	Empires	party	Aquatic Club	\N	2025-09-14 12:35:39.043	2025-09-14 12:35:39.043	4
36	1	2025-08-26 15:00:00	17:00	Think Pink T-Dance	party	Aquatic Club	\N	2025-09-14 12:35:39.167	2025-09-14 12:35:39.167	12
43	1	2025-08-26 15:00:00	23:00	Atlantis Classics	party	Aquatic Club	\N	2025-09-14 12:35:39.459	2025-09-14 12:35:39.459	1
67	1	2025-08-30 15:00:00	23:00	Last Dance	party	The Manor	\N	2025-09-14 12:35:40.484	2025-09-14 12:35:40.484	6
15	1	2025-08-23 15:00:00	17:00	Dog Tag T-Dance	party	Aquatic Club	\N	2025-09-14 12:35:38.307	2025-09-14 12:35:38.307	3
59	1	2025-08-29 15:00:00	24:00	Virgin White Party	party	Aquatic Club	\N	2025-09-14 12:35:40.135	2025-09-14 12:35:40.135	14
\.


--
-- Data for Name: invitations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invitations (id, email, role, invited_by, trip_id, metadata, token_hash, salt, expires_at, created_at, used, used_at, used_by) FROM stdin;
\.


--
-- Data for Name: itinerary; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.itinerary (id, trip_id, date, day, location_name, arrival_time, departure_time, all_aboard_time, location_image_url, description, highlights, order_index, segment, location_id, location_type_id) FROM stdin;
1	1	2025-08-20 15:00:00	1	Athens, Greece	Pre-Cruise			https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png		\N	0	main	9	1
2	1	2025-08-21 15:00:00	2	Athens, Greece (Embarkation Day)		6:00 PM	6:00 PM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png		\N	1	main	1	1
3	1	2025-08-22 15:00:00	3	Santorini, Greece	9:00 AM	10:00 PM	10:00 PM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/santorini-greece.png		\N	2	main	2	3
4	1	2025-08-23 15:00:00	4	Kuşadası, Turkey	8:00 AM	3:00 PM	3:00 PM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/kusadasi-turkey.png		\N	3	main	8	3
5	1	2025-08-24 15:00:00	5	Istanbul, Turkey	1:00 PM	Overnight		https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/istanbul-turkey.png		\N	4	main	6	3
6	1	2025-08-25 15:00:00	6	Istanbul, Turkey		2:00 PM	2:00 PM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/istanbul-turkey.png		\N	5	main	5	3
7	1	2025-08-26 15:00:00	7	Day at Sea				https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/day-at-sea-1.jpg	Enjoy a relaxing day at sea with all the ship amenities and Atlantis activities.	\N	6	main	4	4
8	1	2025-08-27 15:00:00	8	Alexandria (Cairo), Egypt	7:00 AM	12:00 AM	12:00 AM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/alexandria-egypt.png		\N	7	main	8	3
9	1	2025-08-28 15:00:00	9	Day at Sea				https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/day-at-sea-1.jpg	Enjoy a relaxing day at sea with all the ship amenities and Atlantis activities.	\N	8	main	3	4
10	1	2025-08-29 15:00:00	10	Mykonos, Greece	9:00 AM	2:00 AM	2:00 AM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/mykonos-greece.png		\N	9	main	7	3
11	1	2025-08-30 15:00:00	11	Iraklion, Crete	11:00 AM	6:00 PM	6:00 PM	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/iraklion-crete.png		\N	10	main	10	3
12	1	2025-08-31 15:00:00	12	Athens, Greece (Disembarkation Day)	7:00 AM			https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png		\N	11	main	9	1
13	7	2025-10-15 22:00:00	1	Miami	—	17:00	16:30	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/miami-1.webp	Embarkation day in the vibrant city of Miami	["Embarkation", "Ship exploration", "Welcome activities"]	1	main	31	1
14	7	2025-10-16 17:00:00	2	Day at Sea	—	—	—	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/day-at-sea-2.jpg	Slay Day at Sea - Full day of drag performances and activities	["Drag performances", "Poolside shows", "Themed events", "Ship amenities"]	2	main	8	4
15	7	2025-10-17 13:00:00	3	Key West	08:00	17:00	16:30	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/key-west.png	Explore the colorful island paradise of Key West, Florida	["Duval Street", "Hemingway House", "Mallory Square sunset", "Local bars and restaurants"]	3	main	32	3
16	7	2025-10-18 14:00:00	4	Bimini	09:00	18:00	17:30	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/bimini.avif	Beautiful Bahamian island with pristine beaches and crystal waters	["Beach time", "Water activities", "Local culture", "Duty-free shopping"]	4	main	33	3
17	7	2025-10-19 12:00:00	5	Miami	07:00	—	—	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/miami-2.jpg	Disembarkation in Miami - end of cruise	["Disembarkation", "Farewell breakfast", "Luggage collection"]	5	main	31	2
\.


--
-- Data for Name: location_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.location_types (id, type, created_at, updated_at) FROM stdin;
1	Embarkation	2025-09-20 22:50:56.433417	2025-09-20 22:50:56.433417
2	Disembarkation	2025-09-20 22:50:56.433417	2025-09-20 22:50:56.433417
3	Port	2025-09-20 22:50:56.433417	2025-09-20 22:50:56.433417
4	Day at Sea	2025-09-20 22:50:56.433417	2025-09-20 22:50:56.433417
\.


--
-- Data for Name: locations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.locations (id, name, country, description, image_url, created_at, updated_at, city, state_province, country_code, location) FROM stdin;
39	Testing 	France	adssadasdassadsa	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/images/locations/locations-da146a68-fd8d-476b-aa5e-89bbae5a5114.jpg	2025-09-29 12:23:18.116488	2025-09-29 12:23:18.116488	Paris	Ile-de-France	FR	\N
8	Sea Day	Multiple	Test update through ports view - working correctly	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/day-at-sea-1.jpg	2025-09-16 05:06:14.62	2025-09-26 12:57:32.154	\N	\N	\N	\N
1	Athens (Piraeus)	Greece	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png	2025-09-16 05:06:14.62	2025-09-29 12:31:38.137	Athens	Attica	GR	\N
3	Mykonos	Greece	dsadasda	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/mykonos-greece.png	2025-09-16 05:06:14.62	2025-09-28 03:08:38	\N	\N	\N	\N
6	Cairo, Eygpt (Alexandria) 	Egypt	sdsa	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/alexandria-egypt.png	2025-09-16 05:06:14.62	2025-09-29 03:07:12.311	\N	\N	\N	\N
9	Embarkation	Greece	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.288	\N	\N	\N	\N
10	Disembarkation	Greece	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/athens-greece.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.328	\N	\N	\N	\N
31	Miami, FL	United States	Capital of Greece	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/miami-1.webp	2025-09-16 05:21:25.007	2025-09-16 05:21:25.007	\N	\N	\N	\N
32	Key West, FL	United States	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/key-west.png	2025-09-16 05:21:25.085	2025-09-16 05:21:25.085	\N	\N	\N	\N
33	Bimini	Bahamas	Where East meets West	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/bimini.avif	2025-09-16 05:21:25.223	2025-09-16 05:21:25.291	\N	\N	\N	\N
2	Santorini	Greece	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/santorini-greece.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.406	\N	\N	\N	\N
4	Istanbul	Turkey	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/istanbul-turkey.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.484	\N	\N	\N	\N
5	Kuşadası	Turkey	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/kusadasi-turkey.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.522	\N	\N	\N	\N
7	Iraklion	Greece	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/itinerary/iraklion-crete.png	2025-09-16 05:06:14.62	2025-09-16 05:07:16.6	\N	\N	\N	\N
\.


--
-- Data for Name: party_themes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.party_themes (id, name, long_description, short_description, costume_ideas, image_url, amazon_shopping_list_url, created_at, updated_at) FROM stdin;
2	Atlantis Night Club	\N	\N	Club kid fashion, avant-garde, leather, mesh, metallic fabrics, platform boots, bold makeup.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/IMG-ENT-Never-Sleep-Alone-The-Manor-V1_1361-3000x1700-1-800x600_w62xm0.webp	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
3	Dog Tag T-Dance	Longest-running afternoon party with military uniform inspiration. We provide souvenir dog tags; you bring the strength and style.	Longest-running afternoon party with military uniform inspiration. We provide souvenir dog tags; you...	Military uniforms, camo prints, combat boots, tank tops, dog tags. Army green, khaki, military-inspired accessories.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/dogtag_gcui6m.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
4	Empires	Ancient world glamour featuring Greece, Egypt, Rome, and Ottoman empires. Golden togas, silks, and Cleopatra-level dazzle welcome.	Ancient world glamour featuring Greece, Egypt, Rome, and Ottoman empires. Golden togas, silks, and C...	Togas, Egyptian pharaohs, Cleopatra, Roman senators, Greek gods, Ottoman sultans. Golden accessories, laurel crowns, ancient jewelry.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/empires_cpd6zo.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
5	Greek Isles: Here We Go Again!	Mamma Mia fantasy with Greek island chic meets ABBA disco. Blue & white, sequins, platform boots, and Mediterranean drama.	Mamma Mia fantasy with Greek island chic meets ABBA disco. Blue & white, sequins, platform boots, an...	Blue & white Greek island colors, sequins, platform boots, ABBA-inspired outfits, flowing fabrics, Mediterranean beach wear.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/greek_proadv.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
6	Last Dance	One last boogie into Athens.	One last boogie into Athens.	Farewell glamour, your best outfit saved for last, memorable finale looks, anything goes.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/sea_dyhgwy.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
1	Atlantis Classics 	Three decades of anthems & divas.	Three decades of anthems & divas - save test successful!	Diva-inspired, glamorous gowns, sequins, tribute to music icons, vintage concert tees, dramatic accessories.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/classics_thqbx2.jpg	\N	2025-09-21 14:50:07.959717	2025-09-28 15:02:30.141
7	Lost At Sea	Nautical silliness with sea creatures, pirates, and mythical characters. Cruise passengers and TV escapees welcome too.	Nautical silliness with sea creatures, pirates, and mythical characters. Cruise passengers and TV es...	Pirates, mermaids, sailors, sea creatures, nautical stripes, captain hats, tropical cruise wear, shipwreck chic.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/sea_dyhgwy.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
8	Neon Playground	Fast, flashy, bright musical playground in the Red Room. Neon, sparkles, lights, and bouncy sounds that make you smile. This event happens at 12:30am on Friday morning.	Fast, flashy, bright musical playground in the Red Room. Neon, sparkles, lights, and bouncy sounds t...	Neon colors, glow sticks, UV reactive clothing, bright wigs, LED accessories, fluorescent body paint, cyber punk.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/neon_cqdmz3.jpg	https://www.amazon.com/shop/neonRaveGear	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
9	Off-White After party	Late-late afters post-White.	Late-late afters post-White.	Off-white, cream, beige, tan, ivory. Relaxed late-night looks, comfortable but stylish.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/off-white_yvcnsq.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
10	Revival! Classic Disco T-Dance	Glory days of 70s disco with pure musical magic. Artificial fabrics, facial hair, oversized shoes, and obnoxious accessories welcome.	Glory days of 70s disco with pure musical magic. Artificial fabrics, facial hair, oversized shoes, a...	70s disco fashion, bell bottoms, platform shoes, afro wigs, metallic fabrics, vintage band tees, John Travolta white suits.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/classics_thqbx2.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
11	Sail-Away Party	Top-deck vibes as we depart.	Top-deck vibes as we depart.	Nautical themes, sailor stripes, captain hats, deck party attire, sunset colors, breezy fabrics.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/sailaway_m3tnsb.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
12	Think Pink T-Dance	Pink is in! It's everywhere and brings out the playful in all of us. From Barbie butch to fluffy fantastic, throw on your favorite interpretation for a hot afternoon of frivolous dolled up fun.	Pink is in! It's everywhere and brings out the playful in all of us. From Barbie butch to fluffy fan...	All shades of pink, Barbie-inspired, tutus, pink wigs, flamingo accessories, rose gold, hot pink, pastel pink mix.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/pink_fotvpt.jpg	https://www.amazon.com/shop/pinkPartyFashion	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
13	UNITE	Global community celebration with 60+ nations represented. Show off your country's colors and unite in fun, frolic, and friendship.	Global community celebration with 60+ nations represented. Show off your country's colors and unite ...	National flags as capes or clothing, country colors, Olympic-inspired, international soccer jerseys, cultural traditional wear.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/unite_af3vyi.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
14	Virgin White Party	Atlantis' pinnacle party in one perfect color. Be creative, sexy, irreverent, or simple in your favorite white outfit.	Atlantis' pinnacle party in one perfect color. Be creative, sexy, irreverent, or simple in your favo...	All white outfits - be creative, sexy, irreverent, or simple. White shirts, pants, dresses, accessories. Add LED lights or glow elements for extra flair.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/white_wcg2hw.jpg	https://www.amazon.com/shop/whitePartyOutfits	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
15	Welcome Party	First night under the stars.	First night under the stars.	Casual cruise chic, tropical prints, resort wear, comfortable but stylish first night outfits.	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/parties/welcome_lwr9md.jpg	\N	2025-09-21 14:50:07.959717	2025-09-21 14:50:07.959717
\.


--
-- Data for Name: profiles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.profiles (id, email, username, avatar_url, role, bio, website, created_at, updated_at, phone_number, communication_preferences, trip_updates_opt_in, marketing_emails, last_sign_in_at, account_status, is_active, name, social_links, location_text, city, state_province, country, country_code) FROM stdin;
c39b6edd-41bc-4b17-8d5c-375ef0f8d453	admin@kgay.com	admin@atlantis.com	\N	content_manager	\N	\N	2025-09-16 03:40:55.460287+00	2025-09-28 22:32:13.338847+00	\N	\N	f	f	2025-09-20 17:13:12.722933	active	t	{"last": "Admin", "first": "Bryan", "middle": "", "suffix": "", "preferred": ""}	{"tiktok": "", "twitter": "", "website": "", "youtube": "", "facebook": "", "linkedin": "", "instagram": ""}	\N	\N	\N	\N	\N
b7ce34ce-bbf1-4793-a827-559c510fcb1a	steven@kgaytravel.com	steven@kgaytravel.com	\N	super_admin	\N	\N	2025-09-20 16:44:44.475721+00	2025-09-28 22:32:13.338847+00	\N	\N	f	f	2025-09-18 19:13:09.932733	active	t	{"last": "K", "first": "Steven", "middle": "", "suffix": "", "preferred": ""}	{"tiktok": "", "twitter": "", "website": "", "youtube": "", "facebook": "", "linkedin": "", "instagram": ""}	\N	\N	\N	\N	\N
46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	bryhearnchi@gmail.com	bryhearnchi@gmail.com		content_manager			2025-09-22 14:16:31.802527+00	2025-09-29 13:26:20.46378+00		\N	f	f	\N	active	t	{"last": "2", "first": "Bryan"}	{"tiktok": "", "twitter": "", "website": "", "youtube": "", "facebook": "", "linkedin": "", "instagram": ""}	\N	Chicago		United States	\N
fca9d04a-e82a-43ad-b72a-127df226e75a	admin@atlantis.com	BryanH605	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/images/profiles/profiles-156989d2-f915-4ead-882a-86ac4adc45d4.jpg	super_admin	Let me test re-doing the profile. I'll add some additional information, and then see if this actually shows up and stays or if it actually deletes. Let's see what actually happens. 		2025-09-16 04:06:16.983655+00	2025-09-29 16:52:30.72752+00	8478992811	{"sms": false, "email": true}	f	f	2025-09-20 19:13:06.611616	active	t	{"last": "Hearn", "first": "Bryan"}	{"twitter": "", "facebook": "", "telegram": "", "instagram": "@bryanh605"}	Chicago, Illinois, United States	Chicago	Illinois	United States	US
\.


--
-- Data for Name: resort_amenities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resort_amenities (resort_id, amenity_id) FROM stdin;
1	2
1	17
\.


--
-- Data for Name: resort_venues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resort_venues (resort_id, venue_id) FROM stdin;
1	2
1	4
1	6
1	7
1	8
\.


--
-- Data for Name: resorts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resorts (id, name, location, capacity, room_count, image_url, description, property_map_url, check_in_time, check_out_time, created_at, updated_at, city, state_province, country, country_code) FROM stdin;
1	Paradise Resort & Spa	Cancún, Quintana Roo, Mexico	850	400	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/images/resorts/resorts-65033464-595e-44c2-8a0a-bf1996095309.jpg	Luxury all-inclusive resort on pristine beaches	https://d1l4e1efm2qo9x.cloudfront.net/margaritavilleresorts.com-1367967347/cms/cache/v2/68127d7fdaf6f.jpg/4205x2539/fit;c:0,0,4205,2539/80/c3fc728a21043827b9d089ea0d9f5606.jpg	12	11	2025-09-27 14:50:59.798541	2025-09-29 02:52:19.741	Cancún	Quintana Roo	Mexico	MX
\.


--
-- Data for Name: security_audit_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.security_audit_log (id, user_id, action, table_name, record_id, old_data, new_data, ip_address, user_agent, created_at) FROM stdin;
f52ee5d1-4122-49f5-9dbb-0335f7cad2fa	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 13:49:13.051573+00
2e2ef6bc-495d-44f7-b679-449df01a50ae	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "admin"}	\N	\N	2025-09-22 13:49:23.542858+00
56a68dfb-09a6-49d0-9a47-f10b773a9229	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 13:54:46.147725+00
12b30879-4834-47a9-85b7-d4c2b1b14ad9	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "admin"}	\N	\N	2025-09-22 13:56:49.835002+00
d89837ef-efe9-46b3-9742-5dee259141d4	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 14:02:04.59058+00
e30042b0-eba3-410c-8de1-bd0ac90c41c4	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "viewer"}	\N	\N	2025-09-22 14:07:20.631289+00
dd7116eb-2fc2-4a24-a04e-c8447242611b	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "viewer"}	{"role": "content_manager"}	\N	\N	2025-09-22 14:07:27.638947+00
1ba088f8-56b8-4245-ad71-89da2f4b76be	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "viewer"}	\N	\N	2025-09-22 14:09:13.445253+00
0e548854-8bb3-4a3c-ab1c-1f55fd139fdf	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "viewer"}	{"role": "admin"}	\N	\N	2025-09-22 14:09:39.754625+00
55253ab7-3e49-48c7-be4d-04758a0373a8	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 14:11:13.600098+00
27d21edd-335d-4d29-8e8e-0be21b7755a6	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "admin"}	{"role": "viewer"}	\N	\N	2025-09-22 14:20:26.764177+00
46761962-a6ed-4f9e-8d02-4cd1cc996a99	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "viewer"}	{"role": "content_manager"}	\N	\N	2025-09-22 14:21:13.385257+00
aeaa78f6-6e4f-4a6e-a19d-34b257a5c696	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "content_manager"}	{"role": "admin"}	\N	\N	2025-09-22 21:11:06.500275+00
e845c35d-aa83-4935-83a7-b7c694ba4cea	\N	ROLE_CHANGE	profiles	fca9d04a-e82a-43ad-b72a-127df226e75a	{"role": "admin"}	{"role": "super_admin"}	\N	\N	2025-09-22 21:45:17.829403+00
76a3fc76-ce80-40cc-9051-171922926a4c	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 22:06:49.840091+00
6ddb9ee5-ead9-4b16-8105-e5baa8dc50f0	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "admin"}	\N	\N	2025-09-22 22:18:44.166534+00
6dd1a62a-4180-416d-a81e-a2bb94751f03	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-22 22:21:01.576706+00
268f067c-3b54-4f37-9ec2-786b8c60c75f	\N	ROLE_CHANGE	profiles	b7ce34ce-bbf1-4793-a827-559c510fcb1a	{"role": "content_manager"}	{"role": "super_admin"}	\N	\N	2025-09-22 22:24:01.21917+00
56e4b3f7-e750-4cdb-8e52-45b33eac6d1c	\N	ROLE_CHANGE	profiles	5b2c59b8-95b0-4ece-94ef-bee0aa82c5b4	{"role": "super_admin"}	{"role": "admin"}	\N	\N	2025-09-22 22:27:23.240252+00
260266c6-71ee-4b8e-bb53-dd68ae045097	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "content_manager"}	{"role": "super_admin"}	\N	\N	2025-09-22 22:40:45.614452+00
4ed332eb-b8d9-4adf-b3d5-518cf640d1b9	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "super_admin"}	{"role": "viewer"}	\N	\N	2025-09-22 22:40:52.002955+00
37dc9a56-8fe6-4f0c-8ad3-791be5dcb271	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "viewer"}	{"role": "admin"}	\N	\N	2025-09-23 23:22:32.130344+00
3dd20535-f242-490c-b256-9fc550dcf52f	\N	ROLE_CHANGE	profiles	46a2f8f9-64f6-4873-8f3e-23264ee0f4c3	{"role": "admin"}	{"role": "content_manager"}	\N	\N	2025-09-25 03:12:32.898359+00
56f87d97-1d1a-4d94-860e-9c5b796e40e0	\N	ROLE_CHANGE	profiles	859c5050-ba6d-4f65-80b1-79cd0af53dea	{"role": "viewer"}	{"role": "content_manager"}	\N	\N	2025-09-28 16:14:36.848128+00
\.


--
-- Data for Name: ship_amenities; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ship_amenities (ship_id, amenity_id) FROM stdin;
1	1
1	2
1	3
1	4
\.


--
-- Data for Name: ship_venues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ship_venues (ship_id, venue_id) FROM stdin;
2	12
2	13
2	14
1	1
1	2
1	3
1	5
1	6
1	7
\.


--
-- Data for Name: ships; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ships (id, name, cruise_line, capacity, decks, image_url, description, created_at, updated_at, deck_plans_url) FROM stdin;
2	Resilient Lady	Virgin Voyages	2770	17	https://virginvoyages.imgix.net/dam/jcr:dbe00aac-ae9f-46e6-92a6-ec9ddb2e37c4/Valiant%20lady-2252x1266.png	Resilient Lady is the third ship in Virgin Voyages' fleet, continuing the brand's commitment to sustainable, adults-only cruising with innovative design and experiences.	2025-09-17 02:42:35.74539	2025-09-28 03:14:37.588	\N
1	Valiant Lady	Virgin Voyages	2770	17	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/images/ships/ships-e9ea3f0f-2cf5-49f0-823e-4e6641ac6361.jpg	Test update from admin panel booo	2025-09-17 02:42:35.74539	2025-09-28 18:22:07.538	https://www.cruisemapper.com/deckplans/Resilient-Lady-1978
\.


--
-- Data for Name: talent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.talent (id, name, bio, known_for, profile_image_url, social_links, website, created_at, updated_at, talent_category_id) FROM stdin;
2	Monét X Change	Born in New York City, Monét is a classically trained performer who won RuPaul's Drag Race All Stars 4. With her signature wit and powerful vocals, she's become a beloved figure in drag culture and comedy.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/monet-x-change.jpg	{"twitter": "https://x.com/monetxchange", "website": "https://www.monetxchange.com", "instagram": "https://www.instagram.com/monetxchange/"}	\N	2025-09-11 13:11:43.502	2025-09-14 07:15:56.263	3
13	Another Rose	Virgin Voyages' premium dinner theater experience featuring interactive storytelling and culinary artistry in an immersive setting.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/another-rose.jpg	{}	\N	2025-09-11 13:15:19.754	2025-09-14 07:15:54.445	7
9	Brad Loekle	American stand-up comedian from Upstate New York who was a regular on premium cable comedy shows. Known for his appearances at Pride events, circuit parties, and cruise ships.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/brad-loekle.jpg	{"website": "https://www.bradloekle.com", "instagram": "https://www.instagram.com/bradloekle/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:54.846	6
3	Alexis Michelle	Broadway-trained drag performer who placed 5th on RuPaul's Drag Race Season 9. Known for her theatrical performances and cabaret shows at venues like Feinstein's/54 Below.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/alexis-michelle.jpg	{"tiktok": "https://www.tiktok.com/@alexismichelleofficial", "instagram": "https://www.instagram.com/alexismichelleofficial/"}	\N	2025-09-11 13:11:43.502	2025-09-14 07:15:54.022	3
4	Leona Winter	French drag queen and countertenor baritone with a three-octave range. Known for her appearances at Queen of the Universe and The Voice France in 2019.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/leona-winter.jpg	{"tiktok": "https://www.tiktok.com/@leonawinterofficiel", "instagram": "https://www.instagram.com/leonawinter16/"}	\N	2025-09-11 13:11:43.502	2025-09-14 07:15:56.09	2
5	Sherry Vine	Legendary NYC drag icon with over 35 years in entertainment. Known for her hilarious parody songs and has been a fixture of NYC nightlife since the 1990s.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/sherry-vine.jpg	{"instagram": "https://www.instagram.com/misssherryvine/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:57.103	3
8	Alyssa Wray	Singer and performer from Kentucky who made it to the Top 9 on American Idol. Katy Perry called her a 'once in a generation' performer.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/alyssa-wray.jpg	{"instagram": "https://www.instagram.com/itsalyssawray/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:54.308	2
10	Rachel Scanlon	LA-based stand-up comedian and co-host of the popular podcast 'Two Dykes and a Mic'. Known for her sharp queer humor and sex-positive comedy.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/rachel-scanlon.jpg	{"linktree": "https://linktr.ee/rachelscanlon", "instagram": "https://www.instagram.com/rachelscanloncomedy/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:56.67	6
11	Daniel Webb	Texas-born LA-based comedian who currently tours as the opening act for Margaret Cho. Featured in the documentary 'Queer Riot' and released his hour-long special 'Hoe's Parade: Live at the Rose Bowl' in 2021.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/daniel-webb.jpg	{"website": "https://www.thedanielwebb.com", "instagram": "https://www.instagram.com/the_danielwebb/"}	\N	2025-09-11 13:15:19.754	2025-09-14 07:15:55.75	6
12	AirOtic	High-energy circus cabaret show created by Les Farfadais featuring aerial acrobatics, dance, and stunning costumes.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/airotic.jpg	{"instagram": "https://www.instagram.com/airoticshow/"}	\N	2025-09-11 13:15:19.754	2025-09-14 07:15:53.864	7
25	Trinity the Tuck	RuPaul's Drag Race All Stars 4 Winner, known for her pageant excellence and performance skills.	RuPaul's Drag Race All Stars 4 Winner, Pageant Excellence	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/trinity_pxalyq.jpg	\N	\N	2025-09-15 06:03:54.931	2025-09-15 07:34:58.866	3
26	Alyssa Edwards	Fan favorite from RuPaul's Drag Race, dance teacher, and entertainer extraordinaire.	RuPaul's Drag Race, Dancing Queen, Viral Memes	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/alyssa_ecvvvx.jpg	\N	\N	2025-09-15 06:03:55.009	2025-09-15 07:34:58.83	3
28	Plasma	Fierce drag performer known for high-energy performances and stunning looks.	RuPaul's Drag Race, High-Energy Performances	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/plasma_g6ajyj.jpg	\N	\N	2025-09-15 06:03:55.17	2025-09-15 07:34:31.376	3
29	Jackie Cox	Persian-American drag queen known for her political activism and stunning runway looks.	RuPaul's Drag Race Season 12, Political Activism	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/jackie_eheucy.jpg	\N	\N	2025-09-15 06:03:55.24	2025-09-15 07:34:07.523	3
30	House of Avalon	Dynamic drag house known for group performances and collaborative artistry.	Group Performances, Drag House Collective	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/avalon_fav1qd.jpg	\N	\N	2025-09-15 06:03:55.31	2025-09-15 07:34:31.328	3
31	Bianca del Rio	The self-proclaimed 'Joan Rivers of drag,' Bianca del Rio won RuPaul's Drag Race Season 6 with her razor-sharp tongue and impeccable fashion sense. Known for her quick wit and brutal honesty, she has released multiple comedy specials, written books, and toured worldwide with her stand-up comedy shows.	RuPaul's Drag Race Season 6 Winner, Comedy Queen	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/bianca_jh9ojg.jpg	{"twitter": "https://twitter.com/biancadelrio", "website": "https://www.biancadelrio.com", "instagram": "https://www.instagram.com/thebiancadelrio"}	\N	2025-09-15 07:10:18.466	2025-09-15 07:33:27.516	3
32	Sugar	One half of the dynamic twin duo from RuPaul's Drag Race Season 15, Sugar brings sweetness with a side of spice to every performance. Known for her bubbly personality, stunning looks, and strong sisterly bond with Spice, she represents the new generation of drag excellence.	RuPaul's Drag Race Season 15 Contestant	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/sugar_vpd0ut.jpg	{"twitter": null, "website": null, "instagram": "https://www.instagram.com/sugarrush.drag"}	\N	2025-09-15 07:10:18.934	2025-09-15 07:33:48.224	3
6	Reuben Kaye	Award-winning Australian comedian, cabaret host, and writer known for pushing boundaries. Nominated for Best Show at the 2024 Edinburgh Comedy Awards.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/reuben-kaye.jpg	{"twitter": "https://x.com/reubenkaye", "website": "https://www.reubenkaye.com/about", "instagram": "https://www.instagram.com/reubenkayeofficial/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:56.816	3
7	Rob Houchen	British stage actor and producer best known for playing Marius in Les Misérables. Also starred in musicals including Titanique, South Pacific, and The Light in the Piazza.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/rob-houchen.jpg	{"instagram": "https://www.instagram.com/robhouchen/"}	\N	2025-09-11 13:14:55.262	2025-09-14 07:15:56.974	2
33	Spice	The fiercer half of the twin duo from RuPaul's Drag Race Season 15, Spice brings attitude and glamour to every stage. Along with her sister Sugar, she made history as part of the first twin contestants on the show, showcasing both individual talent and unbreakable sisterly bonds.	RuPaul's Drag Race Season 15 Contestant	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/sugar_vpd0ut.jpg	{"twitter": null, "website": null, "instagram": "https://www.instagram.com/spicerush.drag"}	\N	2025-09-15 07:10:19.09	2025-09-28 15:28:11.899	3
17	Dan Slater	Australian DJ and producer based in the United States, with a career spanning over two decades and collaborations with major artists.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/dan-slater.jpg	{"website": "https://www.djdanSlater.com", "instagram": "https://www.instagram.com/danielsl8r/"}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:55.581	4
1	Audra McDonald	Six-time Tony Award winner and Grammy Award recipient, Audra McDonald is one of Broadway's most celebrated performers. Known for her powerful voice and versatility across musical theater, opera, and television.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/audra-mcdonald.jpg	{"twitter": "https://x.com/AudraEqualityMc", "instagram": "https://www.instagram.com/audramcdonald/"}	\N	2025-09-11 13:11:43.502	2025-09-14 07:15:54.634	1
18	DJ Suri	Valencia-born DJ specializing in electronic and house music. Known for his performances at major clubs worldwide and his ability to blend various electronic music subgenres.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/dj-suri.jpg	{"youtube": "https://www.youtube.com/suridj", "instagram": "https://www.instagram.com/djsurimusic/"}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:55.365	4
19	GSP	Greek-born international DJ and producer George Spiliopoulos. Has performed in over 30 countries and produced remixes for Ariana Grande and Lil Nas X.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/gsp.jpg	{"instagram": "https://www.instagram.com/gspdj/"}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:55.951	4
20	William TN Hall	NYC-based composer, arranger, and piano entertainer who specializes in Broadway music and pop standards. Has worked with artists including Sharon Needles and the late Joan Rivers.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/william-tn-hall.jpg	{"twitter": "https://x.com/williamtnhall", "instagram": "https://www.instagram.com/williamtnhall?igsh=MXJjZnR1aGl0MmpxMQ=="}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:57.446	5
21	Brian Nash	Award-winning pianist, singer, and musical director from Nashville. Serves as entertainment coordinator and resident MD for Atlantis Events worldwide.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/brian-nash.jpg	{"instagram": "https://www.instagram.com/brianjnash/"}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:55.215	5
22	Brandon James Gwinn	Piano bar entertainer and vocalist known for his late-night performances and ability to take audience requests for an engaging experience.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/brandon-james-gwinn.jpg	{"twitter": "https://x.com/brandonjamesg", "website": "https://www.brandonjamesgwinn.com", "instagram": "https://www.instagram.com/brandonjamesg"}	\N	2025-09-11 13:15:45.979	2025-09-14 07:15:55.002	5
24	Bob the Drag Queen	Winner of RuPaul's Drag Race Season 8, comedian, musician, and activist.	RuPaul's Drag Race Season 8 Winner, Comedy, Music	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/bob_sl4ox8.jpg	\N	\N	2025-09-15 06:03:54.853	2025-09-15 07:35:18.945	3
14	Persephone	Virgin Voyages' signature acrobatic production show featuring aerial performances and theatrical storytelling for an adult-oriented entertainment experience.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/persephone.jpg	{}	\N	2025-09-11 13:15:19.754	2025-09-14 07:15:56.445	7
15	The Diva (Bingo)	Virgin Voyages' drag bingo experience featuring outrageous hosts, ridiculous prizes, and camp chaos in a uniquely entertaining format.	\N	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/the-diva-bingo.jpg	{}	\N	2025-09-11 13:15:19.754	2025-09-14 07:15:57.256	3
16	Abel	Grammy-nominated DJ and producer from Miami, half of the electronic duo Abel. Known for producing tracks for Madonna, Rihanna, and Jennifer Lopez.		https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/talent/abel.jpg	{"instagram": "https://www.instagram.com/djabelaguilera/"}	\N	2025-09-11 13:15:19.754	2025-09-28 13:27:30.639	4
\.


--
-- Data for Name: talent_categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.talent_categories (id, category, created_at, updated_at) FROM stdin;
1	Headliners	2025-09-20 22:42:47.183328	2025-09-20 22:42:47.183328
2	Vocalists	2025-09-20 22:42:47.183328	2025-09-20 22:42:47.183328
3	Drag & Variety	2025-09-20 22:42:47.183328	2025-09-20 22:42:47.183328
4	DJ's	2025-09-20 22:42:47.183328	2025-09-20 22:42:47.183328
5	Piano Bar / Cabaret	2025-09-20 22:42:47.183328	2025-09-20 22:42:47.183328
6	Comedy	2025-09-21 17:23:51.91565	2025-09-21 17:23:51.91565
7	Shows	2025-09-21 17:25:52.41941	2025-09-21 17:25:52.41941
\.


--
-- Data for Name: trip_info_sections; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trip_info_sections (id, trip_id, title, content, updated_by, updated_at, section_type) FROM stdin;
3	1	First Day Tips	1. Look for Atlantis team members in polo shirts with name badges\\n2. Use meal times to meet other guests at shared seating\\n3. Don't try to do everything on day 1 - pace yourself\\n4. Luggage takes time to arrive - pack carry-on essentials	\N	2025-09-15 04:55:16.144	trip_specific
4	1	Virgin Voyages App	Registration Steps: 6\\nNote: Must register in app - cannot register online	\N	2025-09-15 04:55:16.144	trip_specific
1	1	Entertainment Booking 2	Booking Start: 5:00 PM Thursday in Virgin Voyages App\\nWalk-ins: Available - 'Sold out' only means no reservations available\\nStandby Release: 10 minutes before showtime\\nRockstar Suites: Reserved space held until 10 minutes before showtime. TEST 2	\N	2025-09-26 23:24:12.055	trip_specific
2	1	Dining Information 2	Reservations: Limited but not necessary\\nWalk-ins: 40% of tables reserved for walk-ins after 7 PM\\nIncluded: All restaurants included in cruise fare\\nLate Night: Several late-night options availables	\N	2025-09-28 23:40:14.617	trip_specific
\.


--
-- Data for Name: trip_section_assignments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trip_section_assignments (id, trip_id, section_id, order_index, created_at, updated_at) FROM stdin;
1	1	3	3	2025-09-28 23:17:33.632396	2025-09-28 23:17:33.632396
2	1	4	4	2025-09-28 23:17:33.632396	2025-09-28 23:17:33.632396
3	1	1	1	2025-09-28 23:17:33.632396	2025-09-28 23:17:33.632396
4	1	2	2	2025-09-28 23:17:33.632396	2025-09-28 23:17:33.632396
\.


--
-- Data for Name: trip_status; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trip_status (id, status, created_at, updated_at) FROM stdin;
1	Upcoming	2025-09-20 22:10:15.432595	2025-09-20 22:10:15.432595
2	Current	2025-09-20 22:10:15.432595	2025-09-20 22:10:15.432595
3	Past	2025-09-20 22:10:15.432595	2025-09-20 22:10:15.432595
\.


--
-- Data for Name: trip_talent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trip_talent (trip_id, talent_id, role, performance_count, notes, created_at) FROM stdin;
1	2	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	3	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	4	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	5	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	6	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	7	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	8	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	9	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	10	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	11	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	12	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	13	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	14	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	15	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	16	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	17	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	1	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	18	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	19	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	20	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	21	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
1	22	Featured Performer	\N	\N	2025-09-20 23:04:02.394519
7	24	\N	\N	\N	2025-09-21 17:14:25.60463
7	25	\N	\N	\N	2025-09-21 17:14:25.60463
7	26	\N	\N	\N	2025-09-21 17:14:25.60463
7	28	\N	\N	\N	2025-09-21 17:14:25.60463
7	29	\N	\N	\N	2025-09-21 17:14:25.60463
7	30	\N	\N	\N	2025-09-21 17:14:25.60463
7	31	\N	\N	\N	2025-09-21 17:14:25.60463
7	32	\N	\N	\N	2025-09-21 17:14:25.60463
7	33	\N	\N	\N	2025-09-21 17:14:25.60463
\.


--
-- Data for Name: trip_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trip_types (id, trip_type, created_at, updated_at) FROM stdin;
2	Resort	2025-09-20 22:05:24.611278	2025-09-20 22:05:24.611278
1	Cruise	2025-09-20 22:05:24.611278	2025-09-28 17:14:14.048
\.


--
-- Data for Name: trips; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.trips (id, name, slug, ship_name, cruise_line, start_date, end_date, status, hero_image_url, description, highlights, includes_info, pricing, created_by, created_at, updated_at, ship_id, trip_type_id, trip_status_id, resort_id, charter_company_id) FROM stdin;
7	Drag Stars at Sea 2025	drag-stars-at-sea-2025	Valiant Lady	Virgin Voyages	2025-10-15 05:00:00	2025-10-19 05:00:00	upcoming	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/trips/drag_stars_ngd64u.jpg	An unforgettable 4-night drag extravaganza featuring world-class performers including Bianca Del Rio, Bob the Drag Queen, and Trinity the Tuck aboard Virgin Voyages' Valiant Lady.	["Headlining performances by RuPaul's Drag Race stars", "Multiple performance venues and poolside shows", "Themed events and spontaneous performances", "Premium Virgin Voyages amenities included", "Produced by Atlantis Events with 35+ years experience"]	{"fitness": "Fitness classes included", "beverages": "Basic non-alcoholic beverages included", "basic_wifi": "Included", "gratuities": "All gratuities included", "premium_dining": "All restaurants included"}	{"currency": "USD", "duration": "4 nights", "pricing_note": "Starting price for interior cabin", "starting_price": "$699"}	e3b2cdea-d3ac-4bfa-9f97-4cc1d624c5ac	2025-09-14 20:03:54	2025-09-15 08:01:12.134	1	1	1	\N	1
1	Greek Isles Atlantis Cruise	greek-isles-2025	Virgin Resilient Lady	Virgin Voyages	2025-08-21 10:00:00	2025-08-31 10:00:00	upcoming	https://bxiiodeyqvqqcgzzqzvt.supabase.co/storage/v1/object/public/app-images/trips/resillent_lady_ijl8cr.jpg	Join us for an unforgettable journey through the Greek Isles aboard the Virgin Resilient Lady. Experience ancient wonders, stunning beaches, and legendary Atlantis parties.	["Visit iconic Greek islands including Mykonos and Santorini", "Explore ancient ruins in Athens and Ephesus", "Legendary Atlantis parties and entertainment", "World-class talent and performances", "All-gay vacation experience"]	{"included": ["Accommodation in your selected cabin category", "All meals and entertainment onboard", "Access to all ship facilities", "Atlantis parties and events", "Talent performances and shows"], "notIncluded": ["Airfare", "Shore excursions", "Alcoholic beverages", "Gratuities", "Spa services"]}	\N	\N	2025-09-14 12:35:36.999	2025-09-14 12:35:36.999	2	1	1	\N	1
4	Paradise Resort Escape 2025	paradise-resort-escape-2025	Paradise Resort & Spa	\N	2025-06-15 00:00:00	2025-06-22 00:00:00	upcoming	\N	Luxury all-inclusive resort getaway in beautiful Cancun	\N	\N	\N	\N	2025-09-27 14:52:15.860263	2025-09-27 14:52:15.860263	\N	2	1	1	1
\.


--
-- Data for Name: venue_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.venue_types (id, name, created_at, updated_at) FROM stdin;
2	Entertainment	2025-09-27 01:36:01.361652	2025-09-27 01:36:01.361652
3	Bars	2025-09-27 01:36:01.361652	2025-09-27 01:36:01.361652
4	Spa	2025-09-27 01:36:01.361652	2025-09-27 01:36:01.361652
5	Recreation	2025-09-27 01:36:01.361652	2025-09-27 01:36:01.361652
1	Dining	2025-09-27 01:36:01.361652	2025-09-28 17:04:55.77
\.


--
-- Data for Name: venues; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.venues (id, name, venue_type_id, description, created_at, updated_at) FROM stdin;
1	Main Dining Room	1	Traditional cruise dining with assigned seating	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
2	Buffet Restaurant	1	Casual buffet with international cuisine	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
3	Theater	2	Main entertainment venue with Broadway-style shows	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
4	Comedy Club	2	Intimate venue for stand-up comedy performances	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
5	Martini Bar	3	Upscale cocktail lounge	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
6	Pool Bar	3	Casual drinks by the pool	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
7	Serenity Spa	4	Relaxing spa treatments and wellness services	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
8	Sports Deck	5	Basketball, volleyball, and other activities	2025-09-27 14:50:25.088742	2025-09-27 14:50:25.088742
9	Main Dining Room	1	Grand formal dining venue	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
10	Buffet Restaurant	1	Casual all-day dining	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
11	Specialty Steakhouse	1	Premium steakhouse	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
12	Sushi Bar	1	Japanese cuisine	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
13	Italian Bistro	1	Authentic Italian dining	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
14	Pool Grill	1	Poolside casual dining	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
15	Show Lounge	2	Main entertainment venue	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
16	Comedy Club	2	Stand-up comedy venue	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
17	Jazz Lounge	2	Live jazz performances	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
18	Piano Bar	3	Piano entertainment and cocktails	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
19	Sports Bar	3	Sports viewing and drinks	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
20	Martini Bar	3	Specialty martinis	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
21	Pool Bar	3	Poolside bar service	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
22	Champagne Bar	3	Premium champagne selection	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
23	Thermal Suite	4	Heated relaxation area	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
24	Massage Rooms	4	Private treatment rooms	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
25	Arcade	5	Video game arcade	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
26	Mini Golf Course	5	Outdoor mini golf	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
27	Basketball Court	5	Full court	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
28	Rock Wall	5	Climbing wall	2025-09-27 23:34:52.428127	2025-09-27 23:34:52.428127
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.schema_migrations (version, inserted_at) FROM stdin;
20211116024918	2025-09-15 20:11:33
20211116045059	2025-09-15 20:11:35
20211116050929	2025-09-15 20:11:37
20211116051442	2025-09-15 20:11:39
20211116212300	2025-09-15 20:11:42
20211116213355	2025-09-15 20:11:44
20211116213934	2025-09-15 20:11:46
20211116214523	2025-09-15 20:11:48
20211122062447	2025-09-15 20:11:50
20211124070109	2025-09-15 20:11:52
20211202204204	2025-09-15 20:11:54
20211202204605	2025-09-15 20:11:56
20211210212804	2025-09-15 20:12:03
20211228014915	2025-09-15 20:12:03
20220107221237	2025-09-15 20:12:03
20220228202821	2025-09-15 20:12:04
20220312004840	2025-09-15 20:12:04
20220603231003	2025-09-15 20:12:04
20220603232444	2025-09-15 20:12:04
20220615214548	2025-09-15 20:12:05
20220712093339	2025-09-15 20:12:05
20220908172859	2025-09-15 20:12:05
20220916233421	2025-09-15 20:12:05
20230119133233	2025-09-15 20:12:05
20230128025114	2025-09-15 20:12:06
20230128025212	2025-09-15 20:12:06
20230227211149	2025-09-15 20:12:06
20230228184745	2025-09-15 20:12:06
20230308225145	2025-09-15 20:12:06
20230328144023	2025-09-15 20:12:07
20231018144023	2025-09-15 20:12:07
20231204144023	2025-09-15 20:12:07
20231204144024	2025-09-15 20:12:07
20231204144025	2025-09-15 20:12:07
20240108234812	2025-09-15 20:12:08
20240109165339	2025-09-15 20:12:08
20240227174441	2025-09-15 20:12:08
20240311171622	2025-09-15 20:12:08
20240321100241	2025-09-15 20:12:09
20240401105812	2025-09-15 20:12:09
20240418121054	2025-09-15 20:12:09
20240523004032	2025-09-15 20:12:10
20240618124746	2025-09-15 20:12:10
20240801235015	2025-09-15 20:12:10
20240805133720	2025-09-15 20:12:11
20240827160934	2025-09-15 20:12:11
20240919163303	2025-09-15 20:12:11
20240919163305	2025-09-15 20:12:11
20241019105805	2025-09-15 20:12:11
20241030150047	2025-09-15 20:12:12
20241108114728	2025-09-15 20:12:12
20241121104152	2025-09-15 20:12:13
20241130184212	2025-09-15 20:12:13
20241220035512	2025-09-15 20:12:13
20241220123912	2025-09-15 20:12:13
20241224161212	2025-09-15 20:12:13
20250107150512	2025-09-15 20:12:14
20250110162412	2025-09-15 20:12:14
20250123174212	2025-09-15 20:12:14
20250128220012	2025-09-15 20:12:14
20250506224012	2025-09-15 20:12:14
20250523164012	2025-09-15 20:12:15
20250714121412	2025-09-15 20:12:15
20250905041441	2025-09-26 18:34:39
\.


--
-- Data for Name: subscription; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.subscription (id, subscription_id, entity, filters, claims, created_at) FROM stdin;
\.


--
-- Data for Name: buckets; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets (id, name, owner, created_at, updated_at, public, avif_autodetection, file_size_limit, allowed_mime_types, owner_id, type) FROM stdin;
app-images	app-images	\N	2025-09-21 13:12:50.650979+00	2025-09-21 13:12:50.650979+00	t	f	5242880	{image/jpeg,image/png,image/gif,image/webp}	\N	STANDARD
images	images	\N	2025-09-28 18:05:28.103222+00	2025-09-28 18:05:28.103222+00	t	f	5242880	{image/jpeg,image/png,image/webp,image/gif,image/avif}	\N	STANDARD
\.


--
-- Data for Name: buckets_analytics; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets_analytics (id, type, format, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.migrations (id, name, hash, executed_at) FROM stdin;
0	create-migrations-table	e18db593bcde2aca2a408c4d1100f6abba2195df	2025-09-15 20:11:29.75817
1	initialmigration	6ab16121fbaa08bbd11b712d05f358f9b555d777	2025-09-15 20:11:29.762019
2	storage-schema	5c7968fd083fcea04050c1b7f6253c9771b99011	2025-09-15 20:11:29.767169
3	pathtoken-column	2cb1b0004b817b29d5b0a971af16bafeede4b70d	2025-09-15 20:11:29.78348
4	add-migrations-rls	427c5b63fe1c5937495d9c635c263ee7a5905058	2025-09-15 20:11:29.797773
5	add-size-functions	79e081a1455b63666c1294a440f8ad4b1e6a7f84	2025-09-15 20:11:29.803347
6	change-column-name-in-get-size	f93f62afdf6613ee5e7e815b30d02dc990201044	2025-09-15 20:11:29.81035
7	add-rls-to-buckets	e7e7f86adbc51049f341dfe8d30256c1abca17aa	2025-09-15 20:11:29.816097
8	add-public-to-buckets	fd670db39ed65f9d08b01db09d6202503ca2bab3	2025-09-15 20:11:29.819162
9	fix-search-function	3a0af29f42e35a4d101c259ed955b67e1bee6825	2025-09-15 20:11:29.822423
10	search-files-search-function	68dc14822daad0ffac3746a502234f486182ef6e	2025-09-15 20:11:29.826742
11	add-trigger-to-auto-update-updated_at-column	7425bdb14366d1739fa8a18c83100636d74dcaa2	2025-09-15 20:11:29.836137
12	add-automatic-avif-detection-flag	8e92e1266eb29518b6a4c5313ab8f29dd0d08df9	2025-09-15 20:11:29.844482
13	add-bucket-custom-limits	cce962054138135cd9a8c4bcd531598684b25e7d	2025-09-15 20:11:29.849776
14	use-bytes-for-max-size	941c41b346f9802b411f06f30e972ad4744dad27	2025-09-15 20:11:29.859753
15	add-can-insert-object-function	934146bc38ead475f4ef4b555c524ee5d66799e5	2025-09-15 20:11:29.92574
16	add-version	76debf38d3fd07dcfc747ca49096457d95b1221b	2025-09-15 20:11:29.942277
17	drop-owner-foreign-key	f1cbb288f1b7a4c1eb8c38504b80ae2a0153d101	2025-09-15 20:11:29.948776
18	add_owner_id_column_deprecate_owner	e7a511b379110b08e2f214be852c35414749fe66	2025-09-15 20:11:29.957433
19	alter-default-value-objects-id	02e5e22a78626187e00d173dc45f58fa66a4f043	2025-09-15 20:11:29.969091
20	list-objects-with-delimiter	cd694ae708e51ba82bf012bba00caf4f3b6393b7	2025-09-15 20:11:29.979806
21	s3-multipart-uploads	8c804d4a566c40cd1e4cc5b3725a664a9303657f	2025-09-15 20:11:30.001407
22	s3-multipart-uploads-big-ints	9737dc258d2397953c9953d9b86920b8be0cdb73	2025-09-15 20:11:30.108769
23	optimize-search-function	9d7e604cddc4b56a5422dc68c9313f4a1b6f132c	2025-09-15 20:11:30.126254
24	operation-function	8312e37c2bf9e76bbe841aa5fda889206d2bf8aa	2025-09-15 20:11:30.134312
25	custom-metadata	d974c6057c3db1c1f847afa0e291e6165693b990	2025-09-15 20:11:30.13941
26	objects-prefixes	ef3f7871121cdc47a65308e6702519e853422ae2	2025-09-16 11:55:57.724532
27	search-v2	33b8f2a7ae53105f028e13e9fcda9dc4f356b4a2	2025-09-16 11:55:58.723527
28	object-bucket-name-sorting	ba85ec41b62c6a30a3f136788227ee47f311c436	2025-09-16 11:55:58.910291
29	create-prefixes	a7b1a22c0dc3ab630e3055bfec7ce7d2045c5b7b	2025-09-16 11:55:58.922172
30	update-object-levels	6c6f6cc9430d570f26284a24cf7b210599032db7	2025-09-16 11:55:58.930703
31	objects-level-index	33f1fef7ec7fea08bb892222f4f0f5d79bab5eb8	2025-09-16 11:55:59.008579
32	backward-compatible-index-on-objects	2d51eeb437a96868b36fcdfb1ddefdf13bef1647	2025-09-16 11:55:59.127309
33	backward-compatible-index-on-prefixes	fe473390e1b8c407434c0e470655945b110507bf	2025-09-16 11:55:59.208542
34	optimize-search-function-v1	82b0e469a00e8ebce495e29bfa70a0797f7ebd2c	2025-09-16 11:55:59.211335
35	add-insert-trigger-prefixes	63bb9fd05deb3dc5e9fa66c83e82b152f0caf589	2025-09-16 11:55:59.219148
36	optimise-existing-functions	81cf92eb0c36612865a18016a38496c530443899	2025-09-16 11:55:59.227738
37	add-bucket-name-length-trigger	3944135b4e3e8b22d6d4cbb568fe3b0b51df15c1	2025-09-16 11:55:59.237373
38	iceberg-catalog-flag-on-buckets	19a8bd89d5dfa69af7f222a46c726b7c41e462c5	2025-09-16 11:55:59.310464
39	add-search-v2-sort-support	39cf7d1e6bf515f4b02e41237aba845a7b492853	2025-09-23 14:02:14.891992
40	fix-prefix-race-conditions-optimized	fd02297e1c67df25a9fc110bf8c8a9af7fb06d1f	2025-09-23 14:02:14.902079
41	add-object-level-update-trigger	44c22478bf01744b2129efc480cd2edc9a7d60e9	2025-09-25 19:29:06.723258
42	rollback-prefix-triggers	f2ab4f526ab7f979541082992593938c05ee4b47	2025-09-25 19:29:06.731656
43	fix-object-level	ab837ad8f1c7d00cc0b7310e989a23388ff29fc6	2025-09-25 19:29:06.736914
\.


--
-- Data for Name: objects; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.objects (id, bucket_id, name, owner, created_at, updated_at, last_accessed_at, metadata, version, owner_id, user_metadata, level) FROM stdin;
646b3369-1d67-41f6-8351-528b2c44b8bc	app-images	parties/classics_thqbx2.jpg	\N	2025-09-21 13:18:31.855946+00	2025-09-21 13:18:31.855946+00	2025-09-21 13:18:31.855946+00	{"eTag": "\\"bc39ec47308d6453afa86fdfb8031c93\\"", "size": 368626, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:32.000Z", "contentLength": 368626, "httpStatusCode": 200}	30bf7754-7ec8-40f4-a298-b60900af247a	\N	{}	2
ad14ec40-2fef-443b-afb3-21f2b9fa10ed	images	profiles/profiles-55502975-9688-4c53-ada6-1ec62a1c8e12.jpg	\N	2025-09-28 18:45:11.92848+00	2025-09-28 18:45:11.92848+00	2025-09-28 18:45:11.92848+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:45:12.000Z", "contentLength": 124769, "httpStatusCode": 200}	add06745-2810-4586-ab81-72370a0074d7	\N	{}	2
ef6b3dca-e2bc-47d8-95e5-61d35f893564	app-images	parties/dogtag_gcui6m.jpg	\N	2025-09-21 13:18:32.720642+00	2025-09-21 13:18:32.720642+00	2025-09-21 13:18:32.720642+00	{"eTag": "\\"e521cb6faa2228f664dba78b049345cd\\"", "size": 88413, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:33.000Z", "contentLength": 88413, "httpStatusCode": 200}	0c6f4dd8-8c0a-4665-b1d7-efc2cbd5058d	\N	{}	2
4c2d02a9-7f58-4e80-83f8-667234b78385	app-images	parties/empires_cpd6zo.jpg	\N	2025-09-21 13:18:34.154191+00	2025-09-21 13:18:34.154191+00	2025-09-21 13:18:34.154191+00	{"eTag": "\\"15872520e3eb7c18dc80efca7cc5b6a1\\"", "size": 3204886, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:35.000Z", "contentLength": 3204886, "httpStatusCode": 200}	6ffb06a4-0e0e-4385-a57e-c7a6d8506dfb	\N	{}	2
dbcdec7b-80d9-400a-8d49-948675ea3d4c	app-images	talent/abel.jpg	\N	2025-09-21 13:13:34.189094+00	2025-09-21 13:14:12.585207+00	2025-09-21 13:13:34.189094+00	{"eTag": "\\"2b905aea7e41887f3836fd096df8af47\\"", "size": 19301, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:13.000Z", "contentLength": 19301, "httpStatusCode": 200}	a4aaf95e-4c0c-4ec9-ac42-a9cf73452e90	\N	{}	2
17842364-6249-44cf-b83c-622597aa4041	app-images	talent/airotic.jpg	\N	2025-09-21 13:13:34.631939+00	2025-09-21 13:14:12.882659+00	2025-09-21 13:13:34.631939+00	{"eTag": "\\"f4acdc89ee08e22d74b5acfedc7df527\\"", "size": 17279, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:13.000Z", "contentLength": 17279, "httpStatusCode": 200}	015f0854-6700-46a8-bf05-6c7de940949a	\N	{}	2
5b873ade-fc32-424a-90a1-0392516bfe95	app-images	talent/alyssa_ecvvvx.jpg	\N	2025-09-21 13:13:35.337825+00	2025-09-21 13:14:13.48463+00	2025-09-21 13:13:35.337825+00	{"eTag": "\\"7429898eecb1726c73f6f4d3830d2c34\\"", "size": 54514, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:14.000Z", "contentLength": 54514, "httpStatusCode": 200}	07fc8ee2-1e6d-4f17-bf9a-57b0f891abf5	\N	{}	2
7af33f7c-0583-466c-9329-137a367e8550	app-images	talent/alexis-michelle.jpg	\N	2025-09-21 13:13:34.978742+00	2025-09-21 13:14:13.196118+00	2025-09-21 13:13:34.978742+00	{"eTag": "\\"2437f6af9d0dc5f810131e4f620c2207\\"", "size": 24172, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:14.000Z", "contentLength": 24172, "httpStatusCode": 200}	41e55f50-944c-4617-bd61-dae23f483f18	\N	{}	2
81dc744d-e4b3-4fc0-b05d-d3994ffb25e2	app-images	talent/another-rose.jpg	\N	2025-09-21 13:13:36.250476+00	2025-09-21 13:14:14.147873+00	2025-09-21 13:13:36.250476+00	{"eTag": "\\"d87ec5cfb3654611bdf45d9d42b62ac7\\"", "size": 41468, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:15.000Z", "contentLength": 41468, "httpStatusCode": 200}	86fede29-36ab-4f3d-945a-452243e676d5	\N	{}	2
f9d04df5-656c-4485-b335-4d36c7544381	app-images	talent/alyssa-wray.jpg	\N	2025-09-21 13:13:35.650686+00	2025-09-21 13:14:13.7962+00	2025-09-21 13:13:35.650686+00	{"eTag": "\\"4c8b8021931bc337c80d040f2a525cfb\\"", "size": 50014, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:14.000Z", "contentLength": 50014, "httpStatusCode": 200}	b96af11d-30fe-4833-a497-2fc33f14832b	\N	{}	2
4e7a5687-95ff-4405-9308-6bf2c26bf3b2	app-images	talent/avalon_fav1qd.jpg	\N	2025-09-21 13:13:37.013053+00	2025-09-21 13:14:14.831438+00	2025-09-21 13:13:37.013053+00	{"eTag": "\\"74ad1daa13337dcc78af1bb8122416b0\\"", "size": 23240, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:15.000Z", "contentLength": 23240, "httpStatusCode": 200}	d415e96f-23c7-467d-9b84-dae17174c669	\N	{}	2
76d5f217-3ac6-4ed8-89e6-fb6c38f299be	app-images	talent/audra-mcdonald.jpg	\N	2025-09-21 13:13:36.565606+00	2025-09-21 13:14:14.578655+00	2025-09-21 13:13:36.565606+00	{"eTag": "\\"3326314808546ea43a12d5f28b729167\\"", "size": 12944, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:15.000Z", "contentLength": 12944, "httpStatusCode": 200}	c82ab34f-c5be-492e-8e73-9efe06d5e46c	\N	{}	2
8e6da131-3b05-4801-a702-95e0fbc758e1	app-images	talent/bob_sl4ox8.jpg	\N	2025-09-21 13:13:37.809933+00	2025-09-21 13:14:15.389065+00	2025-09-21 13:13:37.809933+00	{"eTag": "\\"fd02cd6fec471aaa8841a83055d53177\\"", "size": 55538, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:16.000Z", "contentLength": 55538, "httpStatusCode": 200}	2c9d696a-0eb5-478f-a9f0-c51f3faaccc9	\N	{}	2
3591f9e7-5cbe-49c2-80df-c11e8cd795b7	app-images	talent/bianca_jh9ojg.jpg	\N	2025-09-21 13:13:37.430709+00	2025-09-21 13:14:15.118762+00	2025-09-21 13:13:37.430709+00	{"eTag": "\\"1196fc0eb34ff1ca298acafd19187a26\\"", "size": 59284, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:16.000Z", "contentLength": 59284, "httpStatusCode": 200}	7e1a2da4-4bf0-44b2-aa16-d9b8c3285cfb	\N	{}	2
0b67e0a8-8d47-474e-8b80-a74d387ae72f	app-images	talent/brandon-james-gwinn.jpg	\N	2025-09-21 13:13:38.56498+00	2025-09-21 13:14:15.885105+00	2025-09-21 13:13:38.56498+00	{"eTag": "\\"9bbc865e81f95fdfae2ff604759754cc\\"", "size": 13501, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:16.000Z", "contentLength": 13501, "httpStatusCode": 200}	99eeacaf-c841-47bc-9dbf-0cbdcfb1457e	\N	{}	2
007abbeb-de8d-4ff5-9737-4fb899f3fd31	app-images	talent/brad-loekle.jpg	\N	2025-09-21 13:13:38.196347+00	2025-09-21 13:14:15.643943+00	2025-09-21 13:13:38.196347+00	{"eTag": "\\"ec54b0d4ead5e9f105abdf35a9dbfe3a\\"", "size": 18653, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:16.000Z", "contentLength": 18653, "httpStatusCode": 200}	97b8fc10-4bcb-4c99-9c9d-5fb6c84588e6	\N	{}	2
c2fef0e4-dc17-491d-a674-4cf1d6825ed8	app-images	parties/greek_proadv.jpg	\N	2025-09-21 13:18:35.288569+00	2025-09-21 13:18:35.288569+00	2025-09-21 13:18:35.288569+00	{"eTag": "\\"ade0627783f04a807737917a3a402398\\"", "size": 2703374, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:36.000Z", "contentLength": 2703374, "httpStatusCode": 200}	0aecab62-a769-4ec2-9788-69cf086b5519	\N	{}	2
443a3372-de1b-4d07-b989-9a18829482d0	app-images	parties/IMG-ENT-Never-Sleep-Alone-The-Manor-V1_1361-3000x1700-1-800x600_w62xm0.webp	\N	2025-09-21 13:18:36.268218+00	2025-09-21 13:18:36.268218+00	2025-09-21 13:18:36.268218+00	{"eTag": "\\"0d1072871889a8e426c55e2071aff239\\"", "size": 30104, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:37.000Z", "contentLength": 30104, "httpStatusCode": 200}	bf8d35a6-86b1-4d91-a762-85b8f254bada	\N	{}	2
82731dbb-0f45-4bcd-af19-7c1e86a9601a	app-images	parties/neon_cqdmz3.jpg	\N	2025-09-21 13:18:37.138207+00	2025-09-21 13:18:37.138207+00	2025-09-21 13:18:37.138207+00	{"eTag": "\\"9956e4117d9dd3c64d69eaf3f15de6ec\\"", "size": 20192, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:38.000Z", "contentLength": 20192, "httpStatusCode": 200}	4132fb35-623d-44cf-b9d3-986850d008c5	\N	{}	2
3b09b4fd-da4a-4488-af0b-3e16d4c56d46	app-images	talent/brian-nash.jpg	\N	2025-09-21 13:13:38.880169+00	2025-09-21 13:14:16.124476+00	2025-09-21 13:13:38.880169+00	{"eTag": "\\"e0db7d6ed7f3cc14b2c72f39f990aa59\\"", "size": 14979, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:17.000Z", "contentLength": 14979, "httpStatusCode": 200}	287f634b-221f-4e6f-8ddd-22b31b35e910	\N	{}	2
2304e5da-a297-4965-b4da-baf51d2068bb	app-images	talent/monet-x-change.jpg	\N	2025-09-21 13:13:41.531701+00	2025-09-21 13:14:18.215642+00	2025-09-21 13:13:41.531701+00	{"eTag": "\\"183ee2ace922e1acd533d111b37d7a4b\\"", "size": 19386, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:19.000Z", "contentLength": 19386, "httpStatusCode": 200}	fe7f0bb6-16fc-4d33-ae4c-580be8304815	\N	{}	2
1a1965dc-13cd-4932-bf62-2764a70bd267	app-images	talent/dan-slater.jpg	\N	2025-09-21 13:13:39.253307+00	2025-09-21 13:14:16.41698+00	2025-09-21 13:13:39.253307+00	{"eTag": "\\"f24d21bbb4abab3923bd92585b732354\\"", "size": 18019, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:17.000Z", "contentLength": 18019, "httpStatusCode": 200}	58c4eac3-2d22-4e6f-aadb-912accfaef82	\N	{}	2
b4bb351b-f640-4223-a284-db8ef6986db4	app-images	talent/daniel-webb.jpg	\N	2025-09-21 13:13:39.57646+00	2025-09-21 13:14:16.659468+00	2025-09-21 13:13:39.57646+00	{"eTag": "\\"a9eb84da4ee8b23f93a9db4db094d920\\"", "size": 19223, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:17.000Z", "contentLength": 19223, "httpStatusCode": 200}	ddadea51-a3e6-4593-9780-f810c900557b	\N	{}	2
e3b237e1-81f4-4b20-8621-9d34024b5664	app-images	talent/gsp.jpg	\N	2025-09-21 13:13:40.395129+00	2025-09-21 13:14:17.125622+00	2025-09-21 13:13:40.395129+00	{"eTag": "\\"2f137e363b958937438ea0a37116cfdc\\"", "size": 32640, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:18.000Z", "contentLength": 32640, "httpStatusCode": 200}	3eee16f3-2d89-47cd-82c7-e3ed20e4d062	\N	{}	2
b72528c8-942e-4225-bbdc-90c5ab43554f	app-images	talent/dj-suri.jpg	\N	2025-09-21 13:13:40.052422+00	2025-09-21 13:14:16.940031+00	2025-09-21 13:13:40.052422+00	{"eTag": "\\"ee0005d7ea1ff038ca7f77f16e8d1893\\"", "size": 15026, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:17.000Z", "contentLength": 15026, "httpStatusCode": 200}	3027576e-dcc5-462e-8773-852555bcc67f	\N	{}	2
3b543756-bad5-4546-a201-00ec912759e7	app-images	talent/leona-winter.jpg	\N	2025-09-21 13:13:41.147219+00	2025-09-21 13:14:17.977766+00	2025-09-21 13:13:41.147219+00	{"eTag": "\\"2e57ea6ea47d58f488d6d4a0368bd3a2\\"", "size": 14782, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:18.000Z", "contentLength": 14782, "httpStatusCode": 200}	653a4604-dd42-4f17-9e97-e8796ba4d481	\N	{}	2
634b50d6-cc11-45db-9b8d-9139611d2d40	app-images	talent/jackie_eheucy.jpg	\N	2025-09-21 13:13:40.764496+00	2025-09-21 13:14:17.631003+00	2025-09-21 13:13:40.764496+00	{"eTag": "\\"0c5479206df9433de0af926575b5c212\\"", "size": 55502, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:18.000Z", "contentLength": 55502, "httpStatusCode": 200}	bf09676e-c925-4ec7-9b6e-d88fc12374d2	\N	{}	2
873c7991-f09b-4858-8a7d-395f8602504c	app-images	talent/rachel-scanlon.jpg	\N	2025-09-21 13:13:42.831689+00	2025-09-21 13:14:19.126083+00	2025-09-21 13:13:42.831689+00	{"eTag": "\\"a3874f3e96cdb5ac0854e18b58a15497\\"", "size": 17894, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:20.000Z", "contentLength": 17894, "httpStatusCode": 200}	174ee1b0-cbaf-4a45-a10d-307905552121	\N	{}	2
e8ecbb8d-ca7f-468a-8fbb-918e7b83855f	app-images	talent/persephone.jpg	\N	2025-09-21 13:13:42.009589+00	2025-09-21 13:14:18.534214+00	2025-09-21 13:13:42.009589+00	{"eTag": "\\"fec047a4c4485cd0e71314157dc41789\\"", "size": 45409, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:19.000Z", "contentLength": 45409, "httpStatusCode": 200}	7721e103-da6a-44ad-b91c-51f2b81ce894	\N	{}	2
0652b0f1-aee5-47b2-9965-bd26af482b38	app-images	talent/plasma_g6ajyj.jpg	\N	2025-09-21 13:13:42.418316+00	2025-09-21 13:14:18.807756+00	2025-09-21 13:13:42.418316+00	{"eTag": "\\"d6958d1ff271a3737cd3361d6efb6950\\"", "size": 51282, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:19.000Z", "contentLength": 51282, "httpStatusCode": 200}	026a23cd-56a5-46f4-98a1-3e13cf0462fa	\N	{}	2
3c43f9df-9e49-4ea6-b143-9291068c2179	app-images	talent/reuben-kaye.jpg	\N	2025-09-21 13:13:43.333958+00	2025-09-21 13:14:19.365868+00	2025-09-21 13:13:43.333958+00	{"eTag": "\\"6f79faafe2f585de5d507d694f24120e\\"", "size": 18005, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:20.000Z", "contentLength": 18005, "httpStatusCode": 200}	946e5cca-10ec-4867-97a7-39a43b6a52ef	\N	{}	2
c574a75c-3518-4a9e-a1e3-6c20433e3a59	app-images	talent/rob-houchen.jpg	\N	2025-09-21 13:13:43.676968+00	2025-09-21 13:14:19.690855+00	2025-09-21 13:13:43.676968+00	{"eTag": "\\"f240d74fdf4c479a02254cb1b36fc8a8\\"", "size": 13938, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:20.000Z", "contentLength": 13938, "httpStatusCode": 200}	d48968f2-f159-462b-8e49-32d073199646	\N	{}	2
d6658622-662d-4b94-a9f4-c99a33e9a50d	images	profiles/profiles-1dda5667-6f49-4625-a205-927f4b021dd1.jpg	\N	2025-09-28 18:45:55.747089+00	2025-09-28 18:45:55.747089+00	2025-09-28 18:45:55.747089+00	{"eTag": "\\"4a21cc3770a04c756de615a5d54150d5\\"", "size": 16102, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:45:56.000Z", "contentLength": 16102, "httpStatusCode": 200}	ead877fd-2dfe-48e1-81fb-75645e81ae83	\N	{}	2
b8707792-e53a-4cf3-ab52-64a02930cfce	app-images	parties/off-white_yvcnsq.jpg	\N	2025-09-21 13:18:38.448836+00	2025-09-21 13:18:38.448836+00	2025-09-21 13:18:38.448836+00	{"eTag": "\\"a691f09af57faf799a5e0fda14922938\\"", "size": 2866369, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:39.000Z", "contentLength": 2866369, "httpStatusCode": 200}	21a716dc-6fbf-46af-9512-bb44ee508b66	\N	{}	2
a6f89459-a240-407d-a30b-9417c77727e5	app-images	parties/pink_fotvpt.jpg	\N	2025-09-21 13:18:40.210008+00	2025-09-21 13:18:40.210008+00	2025-09-21 13:18:40.210008+00	{"eTag": "\\"7666944900da38473697cca7aca0f5c7\\"", "size": 4434756, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:41.000Z", "contentLength": 4434756, "httpStatusCode": 200}	ec0a40b2-5e0b-46bd-b3ef-c778ec93be57	\N	{}	2
454c7eeb-b984-41e7-be33-3f0d3b3cc1e5	images	profiles/profiles-7254d0de-064a-4424-a694-ce7c0d75de51.jpg	\N	2025-09-28 18:50:40.634173+00	2025-09-28 18:50:40.634173+00	2025-09-28 18:50:40.634173+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:50:41.000Z", "contentLength": 124769, "httpStatusCode": 200}	086176e7-0e81-447c-8367-fb9dc0c17843	\N	{}	2
f24f0ea1-eaaf-43ef-9a6f-87de969f1dd8	app-images	parties/sailaway_m3tnsb.jpg	\N	2025-09-21 13:18:41.678256+00	2025-09-21 13:18:41.678256+00	2025-09-21 13:18:41.678256+00	{"eTag": "\\"7a001a63680914d795b0214fcdc77807\\"", "size": 3998706, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:42.000Z", "contentLength": 3998706, "httpStatusCode": 200}	6a6a8acc-87d8-4379-beab-82b6a7e7a6fd	\N	{}	2
c6a503af-ccac-4611-abf7-5c670bdff122	app-images	parties/sea_dyhgwy.jpg	\N	2025-09-21 13:18:42.987648+00	2025-09-21 13:18:42.987648+00	2025-09-21 13:18:42.987648+00	{"eTag": "\\"202c1665e629ffb0363cd2c343f04611\\"", "size": 3119811, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:43.000Z", "contentLength": 3119811, "httpStatusCode": 200}	38365904-b40a-4098-ac0c-63417d242afe	\N	{}	2
3f06935e-2e6a-45f6-83cb-1ae0c330dab6	app-images	parties/unite_af3vyi.jpg	\N	2025-09-21 13:18:43.94264+00	2025-09-21 13:18:43.94264+00	2025-09-21 13:18:43.94264+00	{"eTag": "\\"da8da8f9df30f98dd054001f9039fe1d\\"", "size": 708769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:44.000Z", "contentLength": 708769, "httpStatusCode": 200}	014aa991-eae1-4bbb-8876-5e5f8f6abcb4	\N	{}	2
89a85cef-f361-4aa2-a4ce-70ddbc535d03	app-images	talent/sherry-vine.jpg	\N	2025-09-21 13:13:44.003694+00	2025-09-21 13:14:20.041309+00	2025-09-21 13:13:44.003694+00	{"eTag": "\\"e687f3a353abc6386a8ca15d7b3a86b9\\"", "size": 21321, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:20.000Z", "contentLength": 21321, "httpStatusCode": 200}	0c589bc7-6517-4060-bd31-778d50c44e11	\N	{}	2
0bd0675e-fbed-440e-8a60-890128a4e9be	app-images	talent/the-diva-bingo.jpg	\N	2025-09-21 13:13:44.9549+00	2025-09-21 13:14:20.515187+00	2025-09-21 13:13:44.9549+00	{"eTag": "\\"f66e6def79b2c00b0068ac723751454e\\"", "size": 32696, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:21.000Z", "contentLength": 32696, "httpStatusCode": 200}	343331ee-a296-4d82-8186-f4b2c3ca8155	\N	{}	2
d1b0d754-8f91-4e61-a2c2-f0b72bf8f176	app-images	talent/sugar_vpd0ut.jpg	\N	2025-09-21 13:13:44.48139+00	2025-09-21 13:14:20.262443+00	2025-09-21 13:13:44.48139+00	{"eTag": "\\"dc344deaceb10286243258533aed2a25\\"", "size": 56481, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:21.000Z", "contentLength": 56481, "httpStatusCode": 200}	8798a572-4361-4932-a333-36853953c1d3	\N	{}	2
ed824b17-3341-4b92-8244-0290f9819c80	app-images	talent/william-tn-hall.jpg	\N	2025-09-21 13:13:45.789527+00	2025-09-21 13:14:21.117335+00	2025-09-21 13:13:45.789527+00	{"eTag": "\\"37b10440d984b50bdeb5e7d119284a8f\\"", "size": 13214, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:22.000Z", "contentLength": 13214, "httpStatusCode": 200}	3450cdb0-8268-4103-9a41-f458d78bcef3	\N	{}	2
a631567c-5d5e-4340-bf8f-ea99b35915b5	app-images	talent/trinity_pxalyq.jpg	\N	2025-09-21 13:13:45.378136+00	2025-09-21 13:14:20.88193+00	2025-09-21 13:13:45.378136+00	{"eTag": "\\"e6011fd92d2588749e9e15bab9170c87\\"", "size": 56662, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:21.000Z", "contentLength": 56662, "httpStatusCode": 200}	548d9d99-bd50-4fba-9589-87cb768c5366	\N	{}	2
2351fccc-ed8f-48ff-9441-6319453202f4	app-images	parties/welcome_lwr9md.jpg	\N	2025-09-21 13:18:45.534137+00	2025-09-21 13:18:45.534137+00	2025-09-21 13:18:45.534137+00	{"eTag": "\\"4352ceb12658c825ab3ffa47fc0f300b\\"", "size": 3133289, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:46.000Z", "contentLength": 3133289, "httpStatusCode": 200}	d98e6015-944f-4fcc-ab4d-ae99c92ba13a	\N	{}	2
53ea3f5d-293a-4ff1-880b-b6b57c2e8a5a	app-images	parties/white_wcg2hw.jpg	\N	2025-09-21 13:18:46.421147+00	2025-09-21 13:18:46.421147+00	2025-09-21 13:18:46.421147+00	{"eTag": "\\"6bbcce0603f27d95bd272b7c2dd06926\\"", "size": 235359, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:18:47.000Z", "contentLength": 235359, "httpStatusCode": 200}	5b494544-fafc-4a96-925d-1d7810302076	\N	{}	2
921a6e0a-4e81-4959-a2de-a39021ea6c9a	images	ships/ships-e9ea3f0f-2cf5-49f0-823e-4e6641ac6361.jpg	\N	2025-09-28 18:22:04.416082+00	2025-09-28 18:22:04.416082+00	2025-09-28 18:22:04.416082+00	{"eTag": "\\"e118889c54a7a1ed147bf19c16c4ea46\\"", "size": 259773, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:22:05.000Z", "contentLength": 259773, "httpStatusCode": 200}	cd54c349-a625-41e6-9df2-35810063b877	\N	{}	2
75b1f61c-974c-4808-8307-17634c74161e	images	resorts/resorts-798432c0-8955-4f8b-9a38-7fca9d9b16e3.jpg	\N	2025-09-28 18:23:08.705061+00	2025-09-28 18:23:08.705061+00	2025-09-28 18:23:08.705061+00	{"eTag": "\\"595cc3d397ab1be530946d965ba7e840\\"", "size": 191857, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:23:09.000Z", "contentLength": 191857, "httpStatusCode": 200}	1f089641-5742-427c-b8ad-c7bb446aee17	\N	{}	2
04667220-2942-49a7-a027-b14cd0df34d9	images	profiles/profiles-9d845849-748e-49df-b4f8-ce37ae008cf4.jpg	\N	2025-09-28 18:51:01.555245+00	2025-09-28 18:51:01.555245+00	2025-09-28 18:51:01.555245+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:51:02.000Z", "contentLength": 124769, "httpStatusCode": 200}	b5f7604f-f9de-40b8-8355-2f82fdc62453	\N	{}	2
f2f6f009-90c3-46ac-af1f-f7d31a04dcb0	images	profiles/profiles-d256b747-4a2b-46c5-aa89-e8b757bc810b.jpg	\N	2025-09-28 18:54:47.117876+00	2025-09-28 18:54:47.117876+00	2025-09-28 18:54:47.117876+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:54:48.000Z", "contentLength": 124769, "httpStatusCode": 200}	92b5180c-9e53-40d4-81b1-090be5cf1dbe	\N	{}	2
be60f98e-f0c0-4586-8934-b394ef1d24da	app-images	itinerary/athens-greece.png	\N	2025-09-21 13:28:46.097626+00	2025-09-21 13:28:46.097626+00	2025-09-21 13:28:46.097626+00	{"eTag": "\\"a47d6a4a48bc5968cbd7ffb2c89f474f\\"", "size": 336665, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:47.000Z", "contentLength": 336665, "httpStatusCode": 200}	2f5e45bb-2667-4d11-93b5-db8038166574	\N	{}	2
838e0b41-f750-447b-9f22-d609c277a594	images	profiles/profiles-089ecc5a-865d-4c77-9f28-3c95ba4f371f.jpg	\N	2025-09-28 18:56:30.1912+00	2025-09-28 18:56:30.1912+00	2025-09-28 18:56:30.1912+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:56:31.000Z", "contentLength": 124769, "httpStatusCode": 200}	36ed3c69-ad4b-4c19-9bc5-57526a46196a	\N	{}	2
4d8b6cb0-8ced-46be-8f90-092bf13186ac	app-images	itinerary/santorini-greece.png	\N	2025-09-21 13:28:46.880071+00	2025-09-21 13:28:46.880071+00	2025-09-21 13:28:46.880071+00	{"eTag": "\\"e93879f08e88b82d1d875d232c1e329f\\"", "size": 320994, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:47.000Z", "contentLength": 320994, "httpStatusCode": 200}	e3e7ba87-6abb-4da5-8bab-e41e19be293d	\N	{}	2
e17156b7-d367-4c56-bc75-af2fe18a957b	images	profiles/profiles-654e2250-55f5-4a25-b91b-abfcbb6d40a6.jpg	\N	2025-09-28 18:57:05.230711+00	2025-09-28 18:57:05.230711+00	2025-09-28 18:57:05.230711+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:57:06.000Z", "contentLength": 124769, "httpStatusCode": 200}	185117cf-a65c-4ecb-881e-b0276c2db21f	\N	{}	2
4b98b5e3-6371-4b84-bb42-54477a74d4d5	images	profiles/profiles-7fda6d90-b405-4b9a-b47d-af12fba0f0d1.jpg	\N	2025-09-28 18:58:42.902697+00	2025-09-28 18:58:42.902697+00	2025-09-28 18:58:42.902697+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:58:43.000Z", "contentLength": 124769, "httpStatusCode": 200}	b8e528f4-f77c-4e09-bd01-9fd81492d5d7	\N	{}	2
42ed0dbf-e82c-461e-92c3-d40faf7cc006	images	profiles/profiles-7e72bc59-03d3-409d-ade0-b5c100021bed.avif	\N	2025-09-28 22:10:45.664974+00	2025-09-28 22:10:45.664974+00	2025-09-28 22:10:45.664974+00	{"eTag": "\\"ad4c4bc68c33117ddf50420075a3772f\\"", "size": 1229651, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:10:46.000Z", "contentLength": 1229651, "httpStatusCode": 200}	9845a4ea-289c-4f36-8bd1-cc1976c0e3e1	\N	{}	2
fc69241c-a4a9-491d-8aba-104174908879	images	profiles/profiles-7918fb84-a943-4d69-b38a-dc55ab331a5c.jpg	\N	2025-09-28 22:17:10.528845+00	2025-09-28 22:17:10.528845+00	2025-09-28 22:17:10.528845+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:17:11.000Z", "contentLength": 124769, "httpStatusCode": 200}	52b6a4d8-6944-46e9-9fa3-cd6ea8d44d08	\N	{}	2
04812d8c-4a7e-4ff4-bd58-4b2c0dd78c41	app-images	itinerary/kusadasi-turkey.png	\N	2025-09-21 13:28:47.472125+00	2025-09-21 13:28:47.472125+00	2025-09-21 13:28:47.472125+00	{"eTag": "\\"8937450aad31172b3361f2fe3f36a0a2\\"", "size": 363726, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:48.000Z", "contentLength": 363726, "httpStatusCode": 200}	2d101c90-0eb9-495c-9862-07686eb1bbe2	\N	{}	2
95040a3c-6e62-4b26-bd44-8a1084995362	app-images	itinerary/istanbul-turkey.png	\N	2025-09-21 13:28:47.97668+00	2025-09-21 13:28:47.97668+00	2025-09-21 13:28:47.97668+00	{"eTag": "\\"92e2dce4aab3e757992130492507f228\\"", "size": 134657, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:48.000Z", "contentLength": 134657, "httpStatusCode": 200}	61f66ed3-b447-4991-b97d-29f492e4c273	\N	{}	2
f8b5d68b-e8ab-4a33-a474-7899354bd298	images	resorts/resorts-65033464-595e-44c2-8a0a-bf1996095309.jpg	\N	2025-09-28 18:23:56.999477+00	2025-09-28 18:23:56.999477+00	2025-09-28 18:23:56.999477+00	{"eTag": "\\"595cc3d397ab1be530946d965ba7e840\\"", "size": 191857, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:23:57.000Z", "contentLength": 191857, "httpStatusCode": 200}	f671e1bd-2523-49e5-9b6f-516162e41e7b	\N	{}	2
722a9516-d7f9-488d-abb8-4df0fcb2e6ab	images	general/general-b0c9515a-0da9-4fae-a8a8-0097edd47ffb.avif	\N	2025-09-28 18:28:19.038843+00	2025-09-28 18:28:19.038843+00	2025-09-28 18:28:19.038843+00	{"eTag": "\\"ad4c4bc68c33117ddf50420075a3772f\\"", "size": 1229651, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:28:19.000Z", "contentLength": 1229651, "httpStatusCode": 200}	87be3fc2-87f3-457b-a505-97fe691436ad	\N	{}	2
c13ab69e-d336-4b28-bd39-de7f3a601ccf	images	profiles/profiles-0b30a2fd-6670-410a-af7c-2b1d07fb40bb.jpg	\N	2025-09-28 21:48:16.042427+00	2025-09-28 21:48:16.042427+00	2025-09-28 21:48:16.042427+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T21:48:16.000Z", "contentLength": 124769, "httpStatusCode": 200}	2dde5edb-6d61-419c-b069-b61e1ebf98fc	\N	{}	2
3e50fce4-c2aa-4f39-9d8d-31ea6689b36f	images	profiles/profiles-5bebf0c5-6503-4f25-9371-cc1163cd003f.jpg	\N	2025-09-28 21:58:24.022328+00	2025-09-28 21:58:24.022328+00	2025-09-28 21:58:24.022328+00	{"eTag": "\\"595cc3d397ab1be530946d965ba7e840\\"", "size": 191857, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T21:58:24.000Z", "contentLength": 191857, "httpStatusCode": 200}	6fa022ad-321a-45fa-888b-e79e812eacb7	\N	{}	2
c68bf104-25e2-4e9c-99d3-94b13765c59c	app-images	itinerary/day-at-sea-1.jpg	\N	2025-09-21 13:28:49.345114+00	2025-09-21 13:28:49.345114+00	2025-09-21 13:28:49.345114+00	{"eTag": "\\"f222579536d77e022d648ad712eb40e6\\"", "size": 60169, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:50.000Z", "contentLength": 60169, "httpStatusCode": 200}	a7a5513f-4a62-4fb2-9b00-39476d2947c3	\N	{}	2
e1d30fff-c5b4-46d6-80c5-f803da194cab	app-images	itinerary/alexandria-egypt.png	\N	2025-09-21 13:28:49.872484+00	2025-09-21 13:28:49.872484+00	2025-09-21 13:28:49.872484+00	{"eTag": "\\"c5ed27bc313bede8cf9b96aa8bc5b304\\"", "size": 134812, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:50.000Z", "contentLength": 134812, "httpStatusCode": 200}	234ffcf1-953a-401f-9eaa-b21f745dc5df	\N	{}	2
758df9a8-fac3-447c-81c9-d2f76dedaa7d	images	profiles/profiles-94335b3d-50d4-403c-ae6e-f7d9bede193d.avif	\N	2025-09-28 22:04:29.968969+00	2025-09-28 22:04:29.968969+00	2025-09-28 22:04:29.968969+00	{"eTag": "\\"36f846a7cf77552ffb121a83e78de02e\\"", "size": 185475, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:04:30.000Z", "contentLength": 185475, "httpStatusCode": 200}	eef295d2-0db5-4d43-82e6-594e0f56354c	\N	{}	2
a31cd115-019f-48c5-b95c-3da1bdf00106	app-images	itinerary/mykonos-greece.png	\N	2025-09-21 13:28:50.326169+00	2025-09-21 13:28:50.326169+00	2025-09-21 13:28:50.326169+00	{"eTag": "\\"aaa13fa334dff08eb9acc194192c95f4\\"", "size": 119009, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:51.000Z", "contentLength": 119009, "httpStatusCode": 200}	637feab4-4a1c-4efc-ba0c-e71babfdc0f4	\N	{}	2
c69c1984-6c1b-41ce-94c3-935d1f4f2830	app-images	itinerary/iraklion-crete.png	\N	2025-09-21 13:28:50.746557+00	2025-09-21 13:28:50.746557+00	2025-09-21 13:28:50.746557+00	{"eTag": "\\"8f7ecfb09e4d23ba8d7f931f8ac44443\\"", "size": 141770, "mimetype": "image/png", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:51.000Z", "contentLength": 141770, "httpStatusCode": 200}	0a942716-97f4-40d6-a12b-f9701c59e6a9	\N	{}	2
be7605e6-df74-42bd-89e4-4928d5812922	images	profiles/profiles-5b84b2a4-8428-48dd-ae6c-67140e5ac812.jpg	\N	2025-09-28 22:07:12.131093+00	2025-09-28 22:07:12.131093+00	2025-09-28 22:07:12.131093+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:07:13.000Z", "contentLength": 124769, "httpStatusCode": 200}	bdf4de7a-f529-4389-b4c2-5430dbeff39e	\N	{}	2
081dfdbf-2bba-45b6-be78-2721fc93f259	app-images	itinerary/miami-1.webp	\N	2025-09-21 13:28:51.931659+00	2025-09-21 13:28:51.931659+00	2025-09-21 13:28:51.931659+00	{"eTag": "\\"6de2c07ff36ce0a297314cf96f535bf7\\"", "size": 72045, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:52.000Z", "contentLength": 72045, "httpStatusCode": 200}	a88528aa-706d-44a3-8b43-ddad7974f43b	\N	{}	2
a67e1cf4-04d5-4e41-b86e-9823c14c3aa8	app-images	itinerary/day-at-sea-2.jpg	\N	2025-09-21 13:28:52.397787+00	2025-09-21 13:28:52.397787+00	2025-09-21 13:28:52.397787+00	{"eTag": "\\"25da9ed9c1cd048e7d633fa358daf65d\\"", "size": 26282, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:53.000Z", "contentLength": 26282, "httpStatusCode": 200}	21be42fc-0572-498b-9982-806400387c7c	\N	{}	2
ae3b8d1c-8b6b-4bd2-8d1f-5713ff20ed04	images	profiles/profiles-17559143-903d-46bf-9b95-f0728ea8f4b8.jpg	\N	2025-09-28 22:18:37.492815+00	2025-09-28 22:18:37.492815+00	2025-09-28 22:18:37.492815+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:18:38.000Z", "contentLength": 124769, "httpStatusCode": 200}	d3976bee-26fa-453f-b6ef-fe2edc8a6451	\N	{}	2
c970ed6f-087a-4afa-8e5b-618e46bbbfb7	app-images	itinerary/key-west.png	\N	2025-09-21 13:28:53.244313+00	2025-09-21 13:28:53.244313+00	2025-09-21 13:28:53.244313+00	{"eTag": "\\"7bf439bfcc7f5383dbb520d00f7d4067\\"", "size": 97534, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:54.000Z", "contentLength": 97534, "httpStatusCode": 200}	7f4bc254-1f60-47fd-912b-787a5b4e1bcf	\N	{}	2
622bb9a0-8cc5-4d3e-b891-2c8291ecf43e	app-images	itinerary/bimini.avif	\N	2025-09-21 13:28:54.694891+00	2025-09-21 13:28:54.694891+00	2025-09-21 13:28:54.694891+00	{"eTag": "\\"d0238a1810a0bb4fce78ccf99e5331f8\\"", "size": 79910, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:55.000Z", "contentLength": 79910, "httpStatusCode": 200}	bb42721a-4773-4f50-916d-29f0b9d31248	\N	{}	2
e9d8f81e-105b-4e4c-8b80-278daf703bf1	app-images	itinerary/miami-2.jpg	\N	2025-09-21 13:28:55.684031+00	2025-09-21 13:28:55.684031+00	2025-09-21 13:28:55.684031+00	{"eTag": "\\"f2924b410a4ae73e6ddcca1aca6f055b\\"", "size": 54060, "mimetype": "image/jpeg", "cacheControl": "no-cache", "lastModified": "2025-09-21T13:28:56.000Z", "contentLength": 54060, "httpStatusCode": 200}	143490e4-a6ec-4538-9ec7-81bb46ed0541	\N	{}	2
8916b2d9-0d9c-458f-98c6-ba446eb4aebc	images	profiles/profiles-156989d2-f915-4ead-882a-86ac4adc45d4.jpg	\N	2025-09-28 21:55:55.734044+00	2025-09-28 21:55:55.734044+00	2025-09-28 21:55:55.734044+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T21:55:56.000Z", "contentLength": 124769, "httpStatusCode": 200}	3ae602af-58a8-481c-af21-419d22c0d9e6	\N	{}	2
8773968b-0f72-42f9-8af7-1b99ca37b971	images	profiles/profiles-b37f6e0e-bc68-4c22-9d0f-d75ea4689b8d.avif	\N	2025-09-28 21:56:41.538321+00	2025-09-28 21:56:41.538321+00	2025-09-28 21:56:41.538321+00	{"eTag": "\\"36f846a7cf77552ffb121a83e78de02e\\"", "size": 185475, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T21:56:42.000Z", "contentLength": 185475, "httpStatusCode": 200}	7ed19070-0b56-40f8-8867-e90e54a9af03	\N	{}	2
326d1c04-6e9e-475c-ae85-b0172987415b	images	profiles/profiles-cb779c17-e2f3-4dce-bc0c-c8ec991a949c.jpg	\N	2025-09-28 22:19:54.411295+00	2025-09-28 22:19:54.411295+00	2025-09-28 22:19:54.411295+00	{"eTag": "\\"595cc3d397ab1be530946d965ba7e840\\"", "size": 191857, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:19:55.000Z", "contentLength": 191857, "httpStatusCode": 200}	7e0fe56a-0dcb-4de9-b37c-3995c2269342	\N	{}	2
f7d5dec5-1f1f-4399-a3a4-589aa3d1342d	images	profiles/profiles-f6ee2dea-e1b4-4be9-ba7b-f9b9c4c8a866.jpg	\N	2025-09-28 22:22:26.673047+00	2025-09-28 22:22:26.673047+00	2025-09-28 22:22:26.673047+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:22:27.000Z", "contentLength": 124769, "httpStatusCode": 200}	590fd88c-ce40-4f49-8c71-b986bcbfc9cc	\N	{}	2
2dcafe31-9a0f-41aa-8abb-fb3abe2706ae	images	profiles/profiles-c8382f87-6d23-443d-b095-81e975941e39.avif	\N	2025-09-28 22:25:44.569319+00	2025-09-28 22:25:44.569319+00	2025-09-28 22:25:44.569319+00	{"eTag": "\\"1a9cb868905f38caaf4dfab0d2374799\\"", "size": 94969, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:25:45.000Z", "contentLength": 94969, "httpStatusCode": 200}	36e4e25f-6538-43e0-851d-f26fadfee470	\N	{}	2
c32059a9-833a-4ff0-b5a6-73ca449f29bf	images	profiles/profiles-24ab9046-24c8-4364-83c7-e3caf05ddb70.jpg	\N	2025-09-28 22:35:25.085629+00	2025-09-28 22:35:25.085629+00	2025-09-28 22:35:25.085629+00	{"eTag": "\\"89c810caf56f25ea98e0234d0f416825\\"", "size": 395204, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:35:26.000Z", "contentLength": 395204, "httpStatusCode": 200}	41f36d67-e034-4239-8c43-14c1f4444e15	\N	{}	2
b03390ba-60da-446f-aa87-0f2198e06794	images	profiles/profiles-7f624d24-8ab7-49e2-9cfe-a258cb424168.jpg	\N	2025-09-28 22:09:49.920007+00	2025-09-28 22:09:49.920007+00	2025-09-28 22:09:49.920007+00	{"eTag": "\\"43fe6e0320a017bc3df4521620db8b67\\"", "size": 124769, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T22:09:50.000Z", "contentLength": 124769, "httpStatusCode": 200}	c49f9225-074a-46b6-a7fa-1625a04811cc	\N	{}	2
cde8ab61-411b-460d-8aa8-b6e1d0ff0808	images	ships/ships-10cba878-7759-4c76-a04a-0d750f2089dd.avif	\N	2025-09-28 18:19:56.888722+00	2025-09-28 18:19:56.888722+00	2025-09-28 18:19:56.888722+00	{"eTag": "\\"36f846a7cf77552ffb121a83e78de02e\\"", "size": 185475, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:19:57.000Z", "contentLength": 185475, "httpStatusCode": 200}	aeeb5891-d038-4d8b-aaf0-aef08c7073a4	\N	{}	2
2c8e228f-ffe8-4228-90b1-a3ce02028958	images	locations/locations-57770424-ecb9-4145-8d01-b7e5232dedd0.avif	\N	2025-09-29 12:16:50.885706+00	2025-09-29 12:16:50.885706+00	2025-09-29 12:16:50.885706+00	{"eTag": "\\"ad4c4bc68c33117ddf50420075a3772f\\"", "size": 1229651, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-29T12:16:51.000Z", "contentLength": 1229651, "httpStatusCode": 200}	3a130a44-d496-4ea8-a3cb-36ccc8932821	\N	{}	2
9f13ab71-bba8-459f-9462-9c5fe64e2b8d	images	ships/ships-520b1cd2-6a95-4d20-a2a3-18dc3eaea1e4.avif	\N	2025-09-28 18:21:34.935109+00	2025-09-28 18:21:34.935109+00	2025-09-28 18:21:34.935109+00	{"eTag": "\\"36f846a7cf77552ffb121a83e78de02e\\"", "size": 185475, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:21:35.000Z", "contentLength": 185475, "httpStatusCode": 200}	0a21b035-e5b0-4bc1-bdb8-bcccd66d3106	\N	{}	2
ef62df06-4527-44fa-be16-e46d3bddcf46	images	resorts/resorts-ded580bb-2c1c-4896-81c2-2ca0ae24e722.jpg	\N	2025-09-28 18:23:38.959318+00	2025-09-28 18:23:38.959318+00	2025-09-28 18:23:38.959318+00	{"eTag": "\\"47a84ccb79e049956ee436fe0ed60462\\"", "size": 92500, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-28T18:23:39.000Z", "contentLength": 92500, "httpStatusCode": 200}	5bf6fdf6-b345-4e2e-88d5-4f6670a2441d	\N	{}	2
906f219f-aa8f-41ad-8bce-524424444936	images	locations/locations-cd50300d-b46c-4da1-af05-521e4d9ee224.avif	\N	2025-09-29 12:17:39.050129+00	2025-09-29 12:17:39.050129+00	2025-09-29 12:17:39.050129+00	{"eTag": "\\"ad4c4bc68c33117ddf50420075a3772f\\"", "size": 1229651, "mimetype": "image/avif", "cacheControl": "max-age=3600", "lastModified": "2025-09-29T12:17:39.000Z", "contentLength": 1229651, "httpStatusCode": 200}	92745a90-2599-4226-a6ae-b38f27022006	\N	{}	2
0531409b-6a2b-4fc2-851e-439dd0139797	images	locations/locations-da146a68-fd8d-476b-aa5e-89bbae5a5114.jpg	\N	2025-09-29 12:23:13.686702+00	2025-09-29 12:23:13.686702+00	2025-09-29 12:23:13.686702+00	{"eTag": "\\"89c810caf56f25ea98e0234d0f416825\\"", "size": 395204, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-29T12:23:14.000Z", "contentLength": 395204, "httpStatusCode": 200}	7e65225b-a6ab-4db8-b91e-3dabdbd34422	\N	{}	2
b33174f2-413d-4a5d-90a3-d873b21ef151	app-images	trips/drag_stars_ngd64u.jpg	\N	2025-09-21 13:13:56.714578+00	2025-09-21 13:14:31.614827+00	2025-09-21 13:13:56.714578+00	{"eTag": "\\"4a876f7d128eab74b92691dc4eda1ab2\\"", "size": 392878, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:32.000Z", "contentLength": 392878, "httpStatusCode": 200}	2b119759-8c2d-4879-bc50-d8040c8550fd	\N	{}	2
656079bd-83ef-4288-929b-c39c04af7f85	app-images	trips/resillent_lady_ijl8cr.jpg	\N	2025-09-21 13:13:57.182385+00	2025-09-21 13:14:31.981232+00	2025-09-21 13:13:57.182385+00	{"eTag": "\\"500aed58382230d38dd96bbf0e22b626\\"", "size": 434929, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-21T13:14:32.000Z", "contentLength": 434929, "httpStatusCode": 200}	f7c84944-7e93-4f07-acbe-4ad0e61e9757	\N	{}	2
\.


--
-- Data for Name: prefixes; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.prefixes (bucket_id, name, created_at, updated_at) FROM stdin;
app-images	talent	2025-09-21 13:13:34.189094+00	2025-09-21 13:13:34.189094+00
app-images	trips	2025-09-21 13:13:56.714578+00	2025-09-21 13:13:56.714578+00
app-images	parties	2025-09-21 13:18:31.855946+00	2025-09-21 13:18:31.855946+00
app-images	itinerary	2025-09-21 13:28:46.097626+00	2025-09-21 13:28:46.097626+00
images	ships	2025-09-28 18:19:56.888722+00	2025-09-28 18:19:56.888722+00
images	resorts	2025-09-28 18:23:08.705061+00	2025-09-28 18:23:08.705061+00
images	general	2025-09-28 18:28:19.038843+00	2025-09-28 18:28:19.038843+00
images	profiles	2025-09-28 18:45:11.92848+00	2025-09-28 18:45:11.92848+00
images	locations	2025-09-29 12:16:50.885706+00	2025-09-29 12:16:50.885706+00
\.


--
-- Data for Name: s3_multipart_uploads; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads (id, in_progress_size, upload_signature, bucket_id, key, version, owner_id, created_at, user_metadata) FROM stdin;
\.


--
-- Data for Name: s3_multipart_uploads_parts; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads_parts (id, upload_id, size, part_number, bucket_id, key, etag, owner_id, version, created_at) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: supabase_migrations; Owner: postgres
--

COPY supabase_migrations.schema_migrations (version, statements, name, created_by, idempotency_key) FROM stdin;
20250916020748	{"-- Create sequences\nCREATE SEQUENCE IF NOT EXISTS cruises_id_seq;\nCREATE SEQUENCE IF NOT EXISTS talent_id_seq;\nCREATE SEQUENCE IF NOT EXISTS ports_id_seq;\nCREATE SEQUENCE IF NOT EXISTS parties_id_seq;\nCREATE SEQUENCE IF NOT EXISTS itinerary_id_seq;\nCREATE SEQUENCE IF NOT EXISTS events_id_seq;\nCREATE SEQUENCE IF NOT EXISTS event_talent_id_seq;\nCREATE SEQUENCE IF NOT EXISTS trip_info_sections_id_seq;\n\n-- Table: cruises\nCREATE TABLE cruises (\n  id integer NOT NULL DEFAULT nextval('cruises_id_seq'::regclass),\n  name text NOT NULL,\n  slug character varying(255) NOT NULL,\n  ship_name text NOT NULL,\n  cruise_line text,\n  trip_type text NOT NULL DEFAULT 'cruise'::text,\n  start_date timestamp without time zone NOT NULL,\n  end_date timestamp without time zone NOT NULL,\n  status text DEFAULT 'upcoming'::text,\n  hero_image_url text,\n  description text,\n  highlights jsonb,\n  includes_info jsonb,\n  pricing jsonb,\n  created_by character varying,\n  created_at timestamp without time zone DEFAULT now(),\n  updated_at timestamp without time zone DEFAULT now()\n);\n\n-- Table: talent\nCREATE TABLE talent (\n  id integer NOT NULL DEFAULT nextval('talent_id_seq'::regclass),\n  name text NOT NULL,\n  category text NOT NULL,\n  bio text,\n  known_for text,\n  profile_image_url text,\n  social_links jsonb,\n  website text,\n  created_at timestamp without time zone DEFAULT now(),\n  updated_at timestamp without time zone DEFAULT now()\n);\n\n-- Table: ports\nCREATE TABLE ports (\n  id integer NOT NULL DEFAULT nextval('ports_id_seq'::regclass),\n  name character varying(255) NOT NULL,\n  country character varying(100) NOT NULL,\n  region character varying(100),\n  port_type character varying(20) DEFAULT 'port'::character varying,\n  coordinates jsonb,\n  description text,\n  image_url text,\n  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,\n  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Table: parties\nCREATE TABLE parties (\n  id integer NOT NULL DEFAULT nextval('parties_id_seq'::regclass),\n  name character varying(255) NOT NULL,\n  theme text,\n  venue_type character varying(20) DEFAULT 'deck'::character varying,\n  capacity integer,\n  duration_hours numeric(3,1),\n  requirements jsonb,\n  image_url text,\n  usage_count integer DEFAULT 0,\n  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,\n  updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Table: itinerary\nCREATE TABLE itinerary (\n  id integer NOT NULL DEFAULT nextval('itinerary_id_seq'::regclass),\n  cruise_id integer NOT NULL,\n  date timestamp without time zone NOT NULL,\n  day integer NOT NULL,\n  port_name text NOT NULL,\n  country text,\n  arrival_time text,\n  departure_time text,\n  all_aboard_time text,\n  port_image_url text,\n  description text,\n  highlights jsonb,\n  order_index integer NOT NULL,\n  segment text DEFAULT 'main'::text,\n  port_id integer\n);\n\n-- Table: events\nCREATE TABLE events (\n  id integer NOT NULL DEFAULT nextval('events_id_seq'::regclass),\n  cruise_id integer NOT NULL,\n  date timestamp without time zone NOT NULL,\n  party_name text NOT NULL,\n  day integer NOT NULL,\n  venue text,\n  dress_code text,\n  description text,\n  rsvp_required boolean DEFAULT false,\n  start_time text,\n  end_time text,\n  host_type text,\n  host_names jsonb,\n  party_id integer\n);\n\n-- Table: event_talent\nCREATE TABLE event_talent (\n  id integer NOT NULL DEFAULT nextval('event_talent_id_seq'::regclass),\n  event_id integer NOT NULL,\n  talent_id integer NOT NULL,\n  role character varying(50) DEFAULT 'performer'::character varying,\n  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Table: trip_info_sections\nCREATE TABLE trip_info_sections (\n  id integer NOT NULL DEFAULT nextval('trip_info_sections_id_seq'::regclass),\n  cruise_id integer NOT NULL,\n  section_type text NOT NULL,\n  title text NOT NULL,\n  content text,\n  order_index integer DEFAULT 0,\n  icon text,\n  updated_at timestamp without time zone DEFAULT now()\n);\n\n-- Table: cruise_talent\nCREATE TABLE cruise_talent (\n  cruise_id integer NOT NULL,\n  talent_id integer NOT NULL,\n  billing_order integer DEFAULT 1\n);\n\n-- Add primary keys\nALTER TABLE cruises ADD PRIMARY KEY (id);\nALTER TABLE talent ADD PRIMARY KEY (id);\nALTER TABLE ports ADD PRIMARY KEY (id);\nALTER TABLE parties ADD PRIMARY KEY (id);\nALTER TABLE itinerary ADD PRIMARY KEY (id);\nALTER TABLE events ADD PRIMARY KEY (id);\nALTER TABLE event_talent ADD PRIMARY KEY (id);\nALTER TABLE trip_info_sections ADD PRIMARY KEY (id);\nALTER TABLE cruise_talent ADD PRIMARY KEY (cruise_id, talent_id);\n\n-- Add foreign keys\nALTER TABLE itinerary ADD CONSTRAINT itinerary_cruise_id_fkey FOREIGN KEY (cruise_id) REFERENCES cruises(id);\nALTER TABLE itinerary ADD CONSTRAINT itinerary_port_id_fkey FOREIGN KEY (port_id) REFERENCES ports(id);\nALTER TABLE events ADD CONSTRAINT events_cruise_id_fkey FOREIGN KEY (cruise_id) REFERENCES cruises(id);\nALTER TABLE events ADD CONSTRAINT events_party_id_fkey FOREIGN KEY (party_id) REFERENCES parties(id);\nALTER TABLE event_talent ADD CONSTRAINT event_talent_event_id_fkey FOREIGN KEY (event_id) REFERENCES events(id);\nALTER TABLE event_talent ADD CONSTRAINT event_talent_talent_id_fkey FOREIGN KEY (talent_id) REFERENCES talent(id);\nALTER TABLE trip_info_sections ADD CONSTRAINT trip_info_sections_cruise_id_fkey FOREIGN KEY (cruise_id) REFERENCES cruises(id);\nALTER TABLE cruise_talent ADD CONSTRAINT cruise_talent_cruise_id_fkey FOREIGN KEY (cruise_id) REFERENCES cruises(id);\nALTER TABLE cruise_talent ADD CONSTRAINT cruise_talent_talent_id_fkey FOREIGN KEY (talent_id) REFERENCES talent(id);\n\n-- Create indexes\nCREATE INDEX idx_itinerary_cruise_id ON itinerary(cruise_id);\nCREATE INDEX idx_itinerary_port_id ON itinerary(port_id);\nCREATE INDEX idx_events_cruise_id ON events(cruise_id);\nCREATE INDEX idx_events_party_id ON events(party_id);\nCREATE INDEX idx_event_talent_event_id ON event_talent(event_id);\nCREATE INDEX idx_event_talent_talent_id ON event_talent(talent_id);\nCREATE INDEX idx_trip_info_sections_cruise_id ON trip_info_sections(cruise_id);\nCREATE INDEX idx_cruise_talent_cruise_id ON cruise_talent(cruise_id);\nCREATE INDEX idx_cruise_talent_talent_id ON cruise_talent(talent_id);"}	create_tables_from_railway	bryhearnchi@gmail.com	\N
20250916020949	{"-- Import talent data (31 rows)\nINSERT INTO talent (id, name, category, bio, known_for, profile_image_url, social_links, website, created_at, updated_at) VALUES \n(1, 'Audra McDonald', 'Broadway Legend', 'Six-time Tony Award winner and Grammy Award recipient, Audra McDonald is one of Broadway''s most celebrated performers. Known for her powerful voice and versatility across musical theater, opera, and television.', NULL, 'https://res.cloudinary.com/dfqoebbyj/image/upload/w_400,h_400,c_fill,g_face,q_auto,f_auto/v1757789604/cruise-app/talent/audra-mcdonald.jpg', '{\\"twitter\\":\\"https://x.com/AudraEqualityMc\\",\\"instagram\\":\\"https://www.instagram.com/audramcdonald/\\"}', NULL, '2025-09-11T13:11:43.502Z', '2025-09-14T07:15:54.634Z'),\n(2, 'Monét X Change', 'Drag & Variety', 'Born in New York City, Monét is a classically trained performer who won RuPaul''s Drag Race All Stars 4. With her signature wit and powerful vocals, she''s become a beloved figure in drag culture and comedy.', NULL, 'https://res.cloudinary.com/dfqoebbyj/image/upload/w_400,h_400,c_fill,g_face,q_auto,f_auto/v1757789604/cruise-app/talent/monet-x-change.jpg', '{\\"twitter\\":\\"https://x.com/monetxchange\\",\\"website\\":\\"https://www.monetxchange.com\\",\\"instagram\\":\\"https://www.instagram.com/monetxchange/\\"}', NULL, '2025-09-11T13:11:43.502Z', '2025-09-14T07:15:56.263Z'),\n(3, 'Alexis Michelle', 'Drag & Variety', 'Broadway-trained drag performer who placed 5th on RuPaul''s Drag Race Season 9. Known for her theatrical performances and cabaret shows at venues like Feinstein''s/54 Below.', NULL, 'https://res.cloudinary.com/dfqoebbyj/image/upload/w_400,h_400,c_fill,g_face,q_auto,f_auto/v1757789604/cruise-app/talent/alexis-michelle.jpg', '{\\"tiktok\\":\\"https://www.tiktok.com/@alexismichelleofficial\\",\\"instagram\\":\\"https://www.instagram.com/alexismichelleofficial/\\"}', NULL, '2025-09-11T13:11:43.502Z', '2025-09-14T07:15:54.022Z'),\n(4, 'Leona Winter', 'Vocalists', 'French drag queen and countertenor baritone with a three-octave range. Known for her appearances at Queen of the Universe and The Voice France in 2019.', NULL, 'https://res.cloudinary.com/dfqoebbyj/image/upload/w_400,h_400,c_fill,g_face,q_auto,f_auto/v1757789604/cruise-app/talent/leona-winter.jpg', '{\\"tiktok\\":\\"https://www.tiktok.com/@leonawinterofficiel\\",\\"instagram\\":\\"https://www.instagram.com/leonawinter16/\\"}', NULL, '2025-09-11T13:11:43.502Z', '2025-09-14T07:15:56.090Z'),\n(5, 'Sherry Vine', 'Drag & Variety', 'Legendary NYC drag icon with over 35 years in entertainment. Known for her hilarious parody songs and has been a fixture of NYC nightlife since the 1990s.', NULL, 'https://res.cloudinary.com/dfqoebbyj/image/upload/w_400,h_400,c_fill,g_face,q_auto,f_auto/v1757789604/cruise-app/talent/sherry-vine.jpg', '{\\"instagram\\":\\"https://www.instagram.com/misssherryvine/\\"}', NULL, '2025-09-11T13:14:55.262Z', '2025-09-14T07:15:57.103Z');"}	import_all_data_from_railway	bryhearnchi@gmail.com	\N
20250916022258	{"-- Create events table with correct structure from Railway\nCREATE TABLE events (\n  id integer NOT NULL DEFAULT nextval('events_id_seq'::regclass),\n  cruise_id integer NOT NULL,\n  date timestamp without time zone NOT NULL,\n  time text,\n  title text,\n  type text,\n  venue text,\n  deck text,\n  description text,\n  short_description text,\n  image_url text,\n  theme_description text,\n  dress_code text,\n  capacity integer,\n  requires_reservation boolean DEFAULT false,\n  talent_ids jsonb,\n  created_at timestamp without time zone DEFAULT now(),\n  updated_at timestamp without time zone DEFAULT now(),\n  party_id integer\n);\n\n-- Add primary key\nALTER TABLE events ADD PRIMARY KEY (id);\n\n-- Add foreign keys\nALTER TABLE events ADD CONSTRAINT events_cruise_id_fkey FOREIGN KEY (cruise_id) REFERENCES cruises(id);\nALTER TABLE events ADD CONSTRAINT events_party_id_fkey FOREIGN KEY (party_id) REFERENCES parties(id);\n\n-- Create indexes\nCREATE INDEX idx_events_cruise_id ON events(cruise_id);\nCREATE INDEX idx_events_party_id ON events(party_id);"}	fix_events_table_structure	bryhearnchi@gmail.com	\N
20250916033256	{"-- Create user profiles table that extends auth.users\nCREATE TABLE IF NOT EXISTS profiles (\n  id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,\n  email TEXT UNIQUE NOT NULL,\n  full_name TEXT,\n  username TEXT UNIQUE,\n  avatar_url TEXT,\n  role TEXT DEFAULT 'user' CHECK (role IN ('user', 'admin', 'moderator')),\n  bio TEXT,\n  website TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW(),\n  updated_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Create an index on email for faster lookups\nCREATE INDEX IF NOT EXISTS idx_profiles_email ON profiles(email);\nCREATE INDEX IF NOT EXISTS idx_profiles_username ON profiles(username);\nCREATE INDEX IF NOT EXISTS idx_profiles_role ON profiles(role);\n\n-- Enable RLS\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\n\n-- Drop existing policies if they exist\nDROP POLICY IF EXISTS \\"Public profiles are viewable by everyone\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can insert their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\n\n-- Create policies\nCREATE POLICY \\"Public profiles are viewable by everyone\\"\n  ON profiles FOR SELECT\n  USING (true);\n\nCREATE POLICY \\"Users can insert their own profile\\"\n  ON profiles FOR INSERT\n  WITH CHECK (auth.uid() = id);\n\nCREATE POLICY \\"Users can update own profile\\"\n  ON profiles FOR UPDATE\n  USING (auth.uid() = id);\n\n-- Function to handle new user creation\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n  INSERT INTO public.profiles (id, email, full_name)\n  VALUES (\n    new.id,\n    new.email,\n    new.raw_user_meta_data->>'full_name'\n  );\n  RETURN new;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Drop the trigger if it exists\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\n\n-- Trigger to create profile on user signup\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT ON auth.users\n  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();\n\n-- Function to check if user is admin\nCREATE OR REPLACE FUNCTION is_admin()\nRETURNS BOOLEAN AS $$\n  SELECT EXISTS (\n    SELECT 1 FROM profiles\n    WHERE id = auth.uid()\n    AND role = 'admin'\n  );\n$$ LANGUAGE sql SECURITY DEFINER;\n\n-- Function to check if user is moderator or admin\nCREATE OR REPLACE FUNCTION is_moderator()\nRETURNS BOOLEAN AS $$\n  SELECT EXISTS (\n    SELECT 1 FROM profiles\n    WHERE id = auth.uid()\n    AND role IN ('admin', 'moderator')\n  );\n$$ LANGUAGE sql SECURITY DEFINER;"}	create_auth_profiles	bryhearnchi@gmail.com	\N
20250916041630	{"-- Enable RLS on profiles table\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\n\n-- Create policy to allow users to read their own profile\nCREATE POLICY \\"Users can read own profile\\" ON profiles\n  FOR SELECT \n  USING (auth.uid() = id);\n\n-- Create policy to allow service role to manage all profiles\nCREATE POLICY \\"Service role can manage all profiles\\" ON profiles\n  FOR ALL \n  USING (auth.role() = 'service_role');"}	enable_profiles_rls	bryhearnchi@gmail.com	\N
20250917024235	{"-- Migration: Create Ships as Reusable Entity\n-- Purpose: Make ships reusable across multiple cruises\n-- Date: 2025-01-16\n\n-- Step 1: Create the ships table\nCREATE TABLE IF NOT EXISTS ships (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    cruise_line VARCHAR(255) NOT NULL,\n    ship_code VARCHAR(50), -- Short code like \\"VL\\" for Valiant Lady\n    capacity INTEGER, -- Passenger capacity\n    crew_size INTEGER, -- Number of crew\n    gross_tonnage INTEGER, -- Ship size\n    length_meters DECIMAL(10, 2), -- Ship length\n    beam_meters DECIMAL(10, 2), -- Ship width\n    decks INTEGER, -- Number of decks\n    built_year INTEGER, -- Year built\n    refurbished_year INTEGER, -- Last refurbishment\n    ship_class VARCHAR(100), -- Ship class/series\n    flag VARCHAR(100), -- Country of registration\n    image_url TEXT, -- Hero image of the ship\n    deck_plans JSONB, -- Array of deck plan URLs or data\n    amenities JSONB, -- Ship amenities and features\n    dining_venues JSONB, -- Dining options on board\n    entertainment_venues JSONB, -- Entertainment venues\n    stateroom_categories JSONB, -- Room types and counts\n    description TEXT, -- Ship description\n    highlights JSONB, -- Array of highlight features\n    created_at TIMESTAMP DEFAULT NOW(),\n    updated_at TIMESTAMP DEFAULT NOW()\n);\n\n-- Create indexes for performance\nCREATE INDEX IF NOT EXISTS ships_name_idx ON ships(name);\nCREATE INDEX IF NOT EXISTS ships_cruise_line_idx ON ships(cruise_line);\nCREATE UNIQUE INDEX IF NOT EXISTS ships_name_cruise_line_unique ON ships(name, cruise_line);\n\n-- Step 2: Insert existing ships from cruises table (avoiding duplicates)\nINSERT INTO ships (name, cruise_line, created_at, updated_at)\nSELECT DISTINCT\n    ship_name as name,\n    COALESCE(cruise_line, 'Unknown') as cruise_line,\n    NOW() as created_at,\n    NOW() as updated_at\nFROM cruises\nWHERE ship_name IS NOT NULL\nON CONFLICT (name, cruise_line) DO NOTHING;\n\n-- Step 3: Add ship_id column to cruises table\nALTER TABLE cruises\nADD COLUMN IF NOT EXISTS ship_id INTEGER REFERENCES ships(id);\n\n-- Step 4: Update cruises table to link to ships\nUPDATE cruises c\nSET ship_id = s.id\nFROM ships s\nWHERE c.ship_name = s.name\n  AND (c.cruise_line = s.cruise_line OR (c.cruise_line IS NULL AND s.cruise_line = 'Unknown'));\n\n-- Step 5: Create index on the foreign key for performance\nCREATE INDEX IF NOT EXISTS cruises_ship_id_idx ON cruises(ship_id);\n\n-- Step 6: Add some sample data for the existing ships\nUPDATE ships\nSET\n    ship_code = 'VL',\n    capacity = 2770,\n    crew_size = 1160,\n    gross_tonnage = 110000,\n    length_meters = 278,\n    beam_meters = 38,\n    decks = 17,\n    built_year = 2021,\n    ship_class = 'Lady Ships',\n    flag = 'Malta',\n    description = 'Valiant Lady is the second ship in Virgin Voyages'' fleet, offering adults-only cruising with a focus on wellness, entertainment, and unique dining experiences.',\n    highlights = '[\\"Adults-only\\", \\"20+ dining options\\", \\"Spa & wellness center\\", \\"Tattoo parlor at sea\\", \\"No buffets\\", \\"No formal nights\\"]'::jsonb,\n    amenities = '[\\"The Manor nightclub\\", \\"The Red Room theater\\", \\"Athletic Club\\", \\"Redemption Spa\\", \\"The Perch outdoor lounge\\", \\"The Dock beach club\\"]'::jsonb,\n    dining_venues = '[\n        {\\"name\\": \\"Wake\\", \\"type\\": \\"Steak & Seafood\\"},\n        {\\"name\\": \\"Razzle Dazzle\\", \\"type\\": \\"Vegetarian Forward\\"},\n        {\\"name\\": \\"Pink Agave\\", \\"type\\": \\"Mexican\\"},\n        {\\"name\\": \\"The Test Kitchen\\", \\"type\\": \\"Experimental\\"},\n        {\\"name\\": \\"Gunbae\\", \\"type\\": \\"Korean BBQ\\"},\n        {\\"name\\": \\"Extra Virgin\\", \\"type\\": \\"Italian\\"}\n    ]'::jsonb\nWHERE name = 'Valiant Lady' AND cruise_line = 'Virgin Voyages';\n\nUPDATE ships\nSET\n    ship_code = 'RL',\n    capacity = 2770,\n    crew_size = 1160,\n    gross_tonnage = 110000,\n    length_meters = 278,\n    beam_meters = 38,\n    decks = 17,\n    built_year = 2023,\n    ship_class = 'Lady Ships',\n    flag = 'Malta',\n    description = 'Resilient Lady is the third ship in Virgin Voyages'' fleet, continuing the brand''s commitment to sustainable, adults-only cruising with innovative design and experiences.',\n    highlights = '[\\"Adults-only\\", \\"20+ dining options\\", \\"Spa & wellness center\\", \\"Sustainability focused\\", \\"No single-use plastics\\", \\"Female-founded brand\\"]'::jsonb,\n    amenities = '[\\"The Manor nightclub\\", \\"The Red Room theater\\", \\"Athletic Club\\", \\"Redemption Spa\\", \\"The Perch outdoor lounge\\", \\"The Dock beach club\\"]'::jsonb,\n    dining_venues = '[\n        {\\"name\\": \\"Wake\\", \\"type\\": \\"Steak & Seafood\\"},\n        {\\"name\\": \\"Razzle Dazzle\\", \\"type\\": \\"Vegetarian Forward\\"},\n        {\\"name\\": \\"Pink Agave\\", \\"type\\": \\"Mexican\\"},\n        {\\"name\\": \\"The Test Kitchen\\", \\"type\\": \\"Experimental\\"},\n        {\\"name\\": \\"Gunbae\\", \\"type\\": \\"Korean BBQ\\"},\n        {\\"name\\": \\"Extra Virgin\\", \\"type\\": \\"Italian\\"}\n    ]'::jsonb\nWHERE name = 'Virgin Resilient Lady' AND cruise_line = 'Virgin Voyages';"}	add_ships_table	bryhearnchi@gmail.com	\N
20250919020021	{"-- ============================================================================\n-- Security Functions for User Invitations\n-- ============================================================================\n\n-- Generate secure invitation token\nCREATE OR REPLACE FUNCTION generate_invitation_token()\nRETURNS TABLE(token TEXT, hash TEXT, salt TEXT)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n    v_token TEXT;\n    v_salt TEXT;\n    v_hash TEXT;\nBEGIN\n    -- Generate 32 bytes of random data for token\n    v_token := encode(gen_random_bytes(32), 'base64');\n    -- Generate unique salt for this invitation\n    v_salt := encode(gen_random_bytes(16), 'base64');\n    -- Create salted hash\n    v_hash := encode(digest(v_token || v_salt, 'sha256'), 'hex');\n    RETURN QUERY SELECT v_token, v_hash, v_salt;\nEND;\n$$;\n\n-- Validate invitation token (with rate limiting)\nCREATE OR REPLACE FUNCTION validate_invitation_token(p_token TEXT)\nRETURNS TABLE(\n    invitation_id UUID,\n    email VARCHAR(255),\n    full_name VARCHAR(255),\n    role user_role,\n    is_valid BOOLEAN,\n    error_message TEXT\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n    v_invitation RECORD;\nBEGIN\n    -- Find invitation by computing hash with stored salt\n    SELECT i.* INTO v_invitation\n    FROM user_invitations i\n    WHERE i.consumed_at IS NULL\n    AND i.expires_at > NOW()\n    AND encode(digest(p_token || i.token_salt, 'sha256'), 'hex') = i.token_hash\n    LIMIT 1;\n\n    -- Check if invitation exists\n    IF v_invitation.id IS NULL THEN\n        -- Intentional delay to prevent timing attacks\n        PERFORM pg_sleep(0.1);\n        RETURN QUERY SELECT\n            NULL::UUID,\n            NULL::VARCHAR(255),\n            NULL::VARCHAR(255),\n            NULL::user_role,\n            false,\n            'Invalid or expired invitation'::TEXT;\n        RETURN;\n    END IF;\n\n    -- Check if locked\n    IF v_invitation.locked_until IS NOT NULL AND v_invitation.locked_until > NOW() THEN\n        RETURN QUERY SELECT\n            v_invitation.id,\n            v_invitation.email,\n            v_invitation.full_name,\n            v_invitation.role,\n            false,\n            'Too many attempts. Please try again later.'::TEXT;\n        RETURN;\n    END IF;\n\n    -- Update attempt counter\n    UPDATE user_invitations\n    SET\n        attempts = attempts + 1,\n        last_attempt_at = NOW(),\n        locked_until = CASE\n            WHEN attempts >= 9 THEN NOW() + INTERVAL '1 hour'\n            WHEN attempts >= 4 THEN NOW() + INTERVAL '15 minutes'\n            ELSE NULL\n        END\n    WHERE id = v_invitation.id;\n\n    -- Return valid invitation\n    RETURN QUERY SELECT\n        v_invitation.id,\n        v_invitation.email,\n        v_invitation.full_name,\n        v_invitation.role,\n        true,\n        NULL::TEXT;\nEND;\n$$;\n\n-- Consume invitation (mark as used)\nCREATE OR REPLACE FUNCTION consume_invitation(\n    p_invitation_id UUID,\n    p_user_id UUID\n)\nRETURNS BOOLEAN\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n    UPDATE user_invitations\n    SET\n        consumed_at = NOW(),\n        consumed_by = p_user_id\n    WHERE id = p_invitation_id\n    AND consumed_at IS NULL\n    AND expires_at > NOW();\n\n    RETURN FOUND;\nEND;\n$$;\n\n-- Create user invitation (admin function)\nCREATE OR REPLACE FUNCTION create_user_invitation(\n    p_email VARCHAR(255),\n    p_full_name VARCHAR(255),\n    p_role user_role,\n    p_message TEXT DEFAULT NULL\n)\nRETURNS TABLE(\n    invitation_id UUID,\n    token TEXT,\n    expires_at TIMESTAMPTZ\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n    v_token_data RECORD;\n    v_invitation_id UUID;\n    v_expires TIMESTAMPTZ;\nBEGIN\n    -- Check if user is admin\n    IF NOT EXISTS (\n        SELECT 1 FROM profiles\n        WHERE id = auth.uid()\n        AND role = 'admin'\n    ) THEN\n        RAISE EXCEPTION 'Unauthorized: Only admins can create invitations';\n    END IF;\n\n    -- Check for existing pending invitation\n    IF EXISTS (\n        SELECT 1 FROM user_invitations\n        WHERE email = p_email\n        AND consumed_at IS NULL\n        AND expires_at > NOW()\n    ) THEN\n        RAISE EXCEPTION 'An active invitation already exists for this email';\n    END IF;\n\n    -- Generate secure token\n    SELECT * INTO v_token_data FROM generate_invitation_token();\n\n    -- Calculate expiration\n    v_expires := NOW() + INTERVAL '48 hours';\n\n    -- Create invitation\n    INSERT INTO user_invitations (\n        email,\n        full_name,\n        role,\n        token_hash,\n        token_salt,\n        created_by,\n        expires_at,\n        invitation_message\n    ) VALUES (\n        p_email,\n        p_full_name,\n        p_role,\n        v_token_data.hash,\n        v_token_data.salt,\n        auth.uid(),\n        v_expires,\n        p_message\n    ) RETURNING id INTO v_invitation_id;\n\n    -- Return invitation details\n    RETURN QUERY SELECT\n        v_invitation_id,\n        v_token_data.token,\n        v_expires;\nEND;\n$$;\n\n-- Cancel invitation\nCREATE OR REPLACE FUNCTION cancel_invitation(p_invitation_id UUID)\nRETURNS BOOLEAN\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n    -- Check if user is admin\n    IF NOT EXISTS (\n        SELECT 1 FROM profiles\n        WHERE id = auth.uid()\n        AND role = 'admin'\n    ) THEN\n        RAISE EXCEPTION 'Unauthorized: Only admins can cancel invitations';\n    END IF;\n\n    -- Soft delete by expiring the invitation\n    UPDATE user_invitations\n    SET expires_at = NOW()\n    WHERE id = p_invitation_id\n    AND consumed_at IS NULL;\n\n    RETURN FOUND;\nEND;\n$$;\n\n-- Resend invitation (generates new token)\nCREATE OR REPLACE FUNCTION resend_invitation(p_invitation_id UUID)\nRETURNS TABLE(\n    token TEXT,\n    expires_at TIMESTAMPTZ\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nDECLARE\n    v_token_data RECORD;\n    v_expires TIMESTAMPTZ;\nBEGIN\n    -- Check if user is admin\n    IF NOT EXISTS (\n        SELECT 1 FROM profiles\n        WHERE id = auth.uid()\n        AND role = 'admin'\n    ) THEN\n        RAISE EXCEPTION 'Unauthorized: Only admins can resend invitations';\n    END IF;\n\n    -- Generate new token\n    SELECT * INTO v_token_data FROM generate_invitation_token();\n\n    -- Calculate new expiration\n    v_expires := NOW() + INTERVAL '48 hours';\n\n    -- Update invitation with new token\n    UPDATE user_invitations\n    SET\n        token_hash = v_token_data.hash,\n        token_salt = v_token_data.salt,\n        expires_at = v_expires,\n        attempts = 0,\n        locked_until = NULL,\n        last_attempt_at = NULL\n    WHERE id = p_invitation_id\n    AND consumed_at IS NULL;\n\n    IF NOT FOUND THEN\n        RAISE EXCEPTION 'Invitation not found or already consumed';\n    END IF;\n\n    -- Return new token\n    RETURN QUERY SELECT\n        v_token_data.token,\n        v_expires;\nEND;\n$$;\n\n-- View for active invitations\nCREATE OR REPLACE VIEW active_invitations AS\nSELECT\n    i.id,\n    i.email,\n    i.full_name,\n    i.role,\n    i.created_at,\n    i.expires_at,\n    i.attempts,\n    i.locked_until,\n    p.full_name as invited_by,\n    CASE\n        WHEN i.expires_at < NOW() THEN 'expired'\n        WHEN i.locked_until IS NOT NULL AND i.locked_until > NOW() THEN 'locked'\n        WHEN i.attempts > 5 THEN 'suspicious'\n        ELSE 'active'\n    END as status\nFROM user_invitations i\nLEFT JOIN profiles p ON i.created_by = p.id\nWHERE i.consumed_at IS NULL\nORDER BY i.created_at DESC;\n\n-- View for invitation statistics\nCREATE OR REPLACE VIEW invitation_statistics AS\nSELECT\n    COUNT(*) FILTER (WHERE consumed_at IS NULL AND expires_at > NOW()) as pending,\n    COUNT(*) FILTER (WHERE consumed_at IS NOT NULL) as accepted,\n    COUNT(*) FILTER (WHERE consumed_at IS NULL AND expires_at < NOW()) as expired,\n    COUNT(*) FILTER (WHERE locked_until IS NOT NULL AND locked_until > NOW()) as locked,\n    AVG(EXTRACT(EPOCH FROM (consumed_at - created_at))/3600)::INTEGER as avg_acceptance_hours\nFROM user_invitations;\n\n-- Grant necessary permissions\nGRANT SELECT ON active_invitations TO authenticated;\nGRANT SELECT ON invitation_statistics TO authenticated;\nGRANT EXECUTE ON FUNCTION create_user_invitation TO authenticated;\nGRANT EXECUTE ON FUNCTION cancel_invitation TO authenticated;\nGRANT EXECUTE ON FUNCTION resend_invitation TO authenticated;\nGRANT EXECUTE ON FUNCTION validate_invitation_token TO anon, authenticated;\nGRANT EXECUTE ON FUNCTION consume_invitation TO authenticated;"}	add_invitation_functions	bryhearnchi@gmail.com	\N
20250920024432	{"-- Fix is_admin and is_moderator functions with search_path\n\nDROP FUNCTION IF EXISTS public.is_admin();\nCREATE FUNCTION public.is_admin()\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1 FROM profiles\n    WHERE id = auth.uid()\n    AND role = 'admin'\n  );\n$$;\n\nDROP FUNCTION IF EXISTS public.is_moderator();\nCREATE FUNCTION public.is_moderator()\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1 FROM profiles\n    WHERE id = auth.uid()\n    AND role IN ('admin', 'moderator')\n  );\n$$;"}	fix_admin_moderator_functions	bryhearnchi@gmail.com	\N
20250920044125	{"-- Drop and recreate the function with proper metadata handling\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  INSERT INTO public.profiles (\n    id,\n    email,\n    full_name,\n    username,\n    role,\n    is_active,\n    account_status,\n    created_at,\n    updated_at\n  )\n  VALUES (\n    NEW.id,\n    NEW.email,\n    COALESCE(NEW.raw_user_meta_data->>'full_name', NULL),\n    COALESCE(NEW.raw_user_meta_data->>'username', NULL),\n    COALESCE(NEW.raw_user_meta_data->>'role', 'viewer'),\n    true,\n    'active',\n    NOW(),\n    NOW()\n  )\n  ON CONFLICT (id) DO UPDATE SET\n    full_name = COALESCE(EXCLUDED.full_name, profiles.full_name),\n    username = COALESCE(EXCLUDED.username, profiles.username),\n    role = COALESCE(EXCLUDED.role, profiles.role),\n    updated_at = NOW();\n  \n  RETURN NEW;\nEND;\n$$;"}	fix_handle_new_user_function	bryhearnchi@gmail.com	\N
20250919093713	{"-- Migration: Create Invitations Table\n-- Description: Add secure invitation system with token-based authentication\n-- Date: 2025-01-09\n\n-- Create invitations table\nCREATE TABLE IF NOT EXISTS invitations (\n    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid(),\n    email TEXT NOT NULL,\n    role TEXT NOT NULL CHECK (role IN ('admin', 'content_editor', 'media_manager', 'viewer')),\n    invited_by VARCHAR NOT NULL REFERENCES users(id) ON DELETE CASCADE,\n    cruise_id INTEGER REFERENCES cruises(id) ON DELETE SET NULL,\n    metadata JSONB,\n    token_hash TEXT NOT NULL,\n    salt TEXT NOT NULL,\n    expires_at TIMESTAMP NOT NULL,\n    created_at TIMESTAMP DEFAULT NOW(),\n    used BOOLEAN DEFAULT FALSE,\n    used_at TIMESTAMP,\n    used_by VARCHAR REFERENCES users(id) ON DELETE SET NULL\n);\n\n-- Create indexes for optimal performance\nCREATE INDEX IF NOT EXISTS invitation_email_idx ON invitations(email);\nCREATE INDEX IF NOT EXISTS invitation_inviter_idx ON invitations(invited_by);\nCREATE INDEX IF NOT EXISTS invitation_expires_idx ON invitations(expires_at);\nCREATE INDEX IF NOT EXISTS invitation_used_idx ON invitations(used);\nCREATE INDEX IF NOT EXISTS invitation_token_hash_idx ON invitations(token_hash);\n\n-- Create compound index for finding active invitations efficiently\nCREATE INDEX IF NOT EXISTS invitation_active_idx ON invitations(email, used, expires_at);\n\n-- Create index for cleanup queries (finding expired invitations)\nCREATE INDEX IF NOT EXISTS invitation_cleanup_idx ON invitations(used, expires_at) WHERE used = false;\n\n-- Add comments for documentation\nCOMMENT ON TABLE invitations IS 'Secure invitation system for user onboarding';\nCOMMENT ON COLUMN invitations.id IS 'Unique invitation identifier';\nCOMMENT ON COLUMN invitations.email IS 'Email address of the invitee';\nCOMMENT ON COLUMN invitations.role IS 'Role to be assigned to the user upon acceptance';\nCOMMENT ON COLUMN invitations.invited_by IS 'ID of the user who created the invitation';\nCOMMENT ON COLUMN invitations.cruise_id IS 'Optional cruise-specific invitation';\nCOMMENT ON COLUMN invitations.metadata IS 'Additional invitation data (JSON)';\nCOMMENT ON COLUMN invitations.token_hash IS 'SHA-256 hash of the invitation token';\nCOMMENT ON COLUMN invitations.salt IS 'Salt used for token hashing';\nCOMMENT ON COLUMN invitations.expires_at IS 'When the invitation expires';\nCOMMENT ON COLUMN invitations.created_at IS 'When the invitation was created';\nCOMMENT ON COLUMN invitations.used IS 'Whether the invitation has been accepted';\nCOMMENT ON COLUMN invitations.used_at IS 'When the invitation was accepted';\nCOMMENT ON COLUMN invitations.used_by IS 'ID of the user who accepted the invitation';\n\n-- Create function to automatically clean up expired invitations\nCREATE OR REPLACE FUNCTION cleanup_expired_invitations() RETURNS INTEGER AS $$\nDECLARE\n    deleted_count INTEGER;\nBEGIN\n    DELETE FROM invitations\n    WHERE used = false\n    AND expires_at < NOW() - INTERVAL '30 days';\n\n    GET DIAGNOSTICS deleted_count = ROW_COUNT;\n\n    RETURN deleted_count;\nEND;\n$$ LANGUAGE plpgsql;\n\nCOMMENT ON FUNCTION cleanup_expired_invitations() IS 'Removes expired invitations older than 30 days';\n\n-- Create function to get invitation statistics\nCREATE OR REPLACE FUNCTION get_invitation_stats() RETURNS TABLE (\n    total_invitations BIGINT,\n    active_invitations BIGINT,\n    expired_invitations BIGINT,\n    used_invitations BIGINT,\n    conversion_rate NUMERIC(5,2)\n) AS $$\nBEGIN\n    RETURN QUERY\n    SELECT\n        COUNT(*) as total_invitations,\n        COUNT(*) FILTER (WHERE used = false AND expires_at > NOW()) as active_invitations,\n        COUNT(*) FILTER (WHERE used = false AND expires_at <= NOW()) as expired_invitations,\n        COUNT(*) FILTER (WHERE used = true) as used_invitations,\n        CASE\n            WHEN COUNT(*) > 0 THEN\n                ROUND((COUNT(*) FILTER (WHERE used = true) * 100.0 / COUNT(*)), 2)\n            ELSE 0\n        END as conversion_rate\n    FROM invitations;\nEND;\n$$ LANGUAGE plpgsql;\n\nCOMMENT ON FUNCTION get_invitation_stats() IS 'Returns comprehensive invitation system statistics';\n\n-- Create security function to validate invitation tokens\nCREATE OR REPLACE FUNCTION validate_invitation_token(\n    p_email TEXT,\n    p_token_hash TEXT,\n    p_salt TEXT\n) RETURNS BOOLEAN AS $$\nDECLARE\n    invitation_count INTEGER;\nBEGIN\n    SELECT COUNT(*)\n    INTO invitation_count\n    FROM invitations\n    WHERE email = LOWER(p_email)\n    AND token_hash = p_token_hash\n    AND salt = p_salt\n    AND used = false\n    AND expires_at > NOW();\n\n    RETURN invitation_count > 0;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\nCOMMENT ON FUNCTION validate_invitation_token(TEXT, TEXT, TEXT) IS 'Securely validates invitation tokens';"}	create_invitations_table	bryhearnchi@gmail.com	\N
20250919100013	{"CREATE TABLE users (\n  id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid(),\n  username TEXT NOT NULL UNIQUE,\n  password TEXT NOT NULL,\n  email TEXT UNIQUE,\n  full_name TEXT,\n  role TEXT DEFAULT 'viewer',\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n  last_login TIMESTAMP,\n  is_active BOOLEAN DEFAULT true\n);"}	create_users_table	bryhearnchi@gmail.com	\N
20250919100546	{"ALTER TABLE users ALTER COLUMN id TYPE UUID USING id::UUID;"}	fix_users_table_id_type	bryhearnchi@gmail.com	\N
20250919114720	{"-- Migration: Remove conflicting users table - profiles table is already the main user system\n\n-- Step 1: Update profiles table to include missing fields from users table if needed\nALTER TABLE profiles ADD COLUMN IF NOT EXISTS account_status TEXT DEFAULT 'active';\nALTER TABLE profiles ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;\n\n-- Step 2: Update role field in profiles to match standardized roles (3-role system)\nUPDATE profiles SET role = 'admin' WHERE role IN ('super_admin', 'admin');\nUPDATE profiles SET role = 'content_manager' WHERE role IN ('trip_admin', 'content_editor', 'media_manager', 'moderator', 'editor');\nUPDATE profiles SET role = 'viewer' WHERE role NOT IN ('admin', 'content_manager');\n\n-- Step 3: Drop the conflicting users table completely \n-- (All foreign keys should already point to profiles table based on database inspection)\nDROP TABLE IF EXISTS users CASCADE;"}	remove_users_table_simple	bryhearnchi@gmail.com	\N
20250920120544	{"-- Fix profiles role constraint to match application roles\n-- Drop the old constraint\nALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_role_check;\n\n-- Add new constraint with correct role values\nALTER TABLE profiles ADD CONSTRAINT profiles_role_check \nCHECK (role = ANY (ARRAY['admin'::text, 'content_manager'::text, 'viewer'::text]));"}	fix_profiles_role_constraint	bryhearnchi@gmail.com	\N
20250920024316	{"-- Critical Security Fixes Part 1: Views and Indexes\n\n-- 1. Recreate views without SECURITY DEFINER\nDROP VIEW IF EXISTS public.active_invitations CASCADE;\nCREATE VIEW public.active_invitations AS\nSELECT i.id,\n    i.email,\n    i.full_name,\n    i.role,\n    i.created_at,\n    i.expires_at,\n    i.attempts,\n    i.locked_until,\n    p.full_name AS invited_by,\n    CASE\n        WHEN (i.expires_at < now()) THEN 'expired'::text\n        WHEN ((i.locked_until IS NOT NULL) AND (i.locked_until > now())) THEN 'locked'::text\n        WHEN (i.attempts > 5) THEN 'suspicious'::text\n        ELSE 'active'::text\n    END AS status\nFROM user_invitations i\nLEFT JOIN profiles p ON ((i.created_by = p.id))\nWHERE (i.consumed_at IS NULL)\nORDER BY i.created_at DESC;\n\nDROP VIEW IF EXISTS public.invitation_statistics CASCADE;\nCREATE VIEW public.invitation_statistics AS\nSELECT count(*) FILTER (WHERE ((consumed_at IS NULL) AND (expires_at > now()))) AS pending,\n    count(*) FILTER (WHERE (consumed_at IS NOT NULL)) AS accepted,\n    count(*) FILTER (WHERE ((consumed_at IS NULL) AND (expires_at < now()))) AS expired,\n    count(*) FILTER (WHERE ((locked_until IS NOT NULL) AND (locked_until > now()))) AS locked,\n    (avg((EXTRACT(epoch FROM (consumed_at - created_at)) / (3600)::numeric)))::integer AS avg_acceptance_hours\nFROM user_invitations;\n\n-- 2. Add missing foreign key indexes\nCREATE INDEX IF NOT EXISTS idx_invitations_used_by ON public.invitations(used_by) WHERE used_by IS NOT NULL;\nCREATE INDEX IF NOT EXISTS idx_user_invitations_consumed_by ON public.user_invitations(consumed_by) WHERE consumed_by IS NOT NULL;\nCREATE INDEX IF NOT EXISTS idx_user_invitations_created_by ON public.user_invitations(created_by);\n\n-- 3. Remove duplicate indexes\nDROP INDEX IF EXISTS public.profiles_email_idx;\nDROP INDEX IF EXISTS public.profiles_role_idx;"}	critical_security_fixes_v1	bryhearnchi@gmail.com	\N
20250920024331	{"-- Fix Function Search Path Vulnerabilities\n\n-- Check if functions exist before updating them\nDO $$\nBEGIN\n    -- Fix handle_new_user if it exists\n    IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'handle_new_user' AND pronamespace = 'public'::regnamespace) THEN\n        CREATE OR REPLACE FUNCTION public.handle_new_user()\n        RETURNS trigger\n        LANGUAGE plpgsql\n        SECURITY DEFINER\n        SET search_path = public\n        AS $func$\n        BEGIN\n            INSERT INTO public.profiles (id, email, created_at, updated_at)\n            VALUES (NEW.id, NEW.email, NOW(), NOW())\n            ON CONFLICT (id) DO NOTHING;\n            RETURN NEW;\n        END;\n        $func$;\n    END IF;\n\n    -- Fix update_updated_at_column if it exists  \n    IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'update_updated_at_column' AND pronamespace = 'public'::regnamespace) THEN\n        CREATE OR REPLACE FUNCTION public.update_updated_at_column()\n        RETURNS trigger\n        LANGUAGE plpgsql\n        SET search_path = public\n        AS $func$\n        BEGIN\n            NEW.updated_at = NOW();\n            RETURN NEW;\n        END;\n        $func$;\n    END IF;\nEND\n$$;\n\n-- Fix RLS policies for better performance\nDROP POLICY IF EXISTS \\"Users can insert their own profile\\" ON public.profiles;\nCREATE POLICY \\"Users can insert their own profile\\" ON public.profiles\n    FOR INSERT\n    WITH CHECK (id = (SELECT auth.uid()));\n\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON public.profiles;  \nCREATE POLICY \\"Users can update own profile\\" ON public.profiles\n    FOR UPDATE\n    USING (id = (SELECT auth.uid()));\n\nDROP POLICY IF EXISTS \\"Users can read own profile\\" ON public.profiles;\nCREATE POLICY \\"Users can read own profile\\" ON public.profiles\n    FOR SELECT  \n    USING (id = (SELECT auth.uid()));"}	fix_function_search_paths	bryhearnchi@gmail.com	\N
20250920100524	{"-- Step 1: Create trip_types table\nCREATE TABLE IF NOT EXISTS trip_types (\n    id SERIAL PRIMARY KEY,\n    trip_type VARCHAR(50) NOT NULL UNIQUE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Step 2: Insert initial trip types\nINSERT INTO trip_types (trip_type) VALUES \n    ('Cruise'),\n    ('Resort')\nON CONFLICT DO NOTHING;\n\n-- Step 3: Add trip_type_id column to cruises table\nALTER TABLE cruises \nADD COLUMN IF NOT EXISTS trip_type_id INTEGER;\n\n-- Step 4: Set default trip_type_id values based on existing trip_type field\n-- First, set all existing cruises to 'Cruise' type (id = 1)\nUPDATE cruises \nSET trip_type_id = (SELECT id FROM trip_types WHERE trip_type = 'Cruise')\nWHERE trip_type_id IS NULL;\n\n-- Step 5: Add foreign key constraint\nALTER TABLE cruises \nADD CONSTRAINT cruises_trip_type_id_fkey \nFOREIGN KEY (trip_type_id) REFERENCES trip_types(id);\n\n-- Step 6: Make trip_type_id NOT NULL after setting defaults\nALTER TABLE cruises \nALTER COLUMN trip_type_id SET NOT NULL;\n\n-- Step 7: Rename cruises table to trips\nALTER TABLE cruises RENAME TO trips;\n\n-- Step 8: Rename all foreign key constraints and references\n-- Update itinerary table\nALTER TABLE itinerary RENAME COLUMN cruise_id TO trip_id;\nALTER TABLE itinerary DROP CONSTRAINT IF EXISTS itinerary_cruise_id_fkey;\nALTER TABLE itinerary ADD CONSTRAINT itinerary_trip_id_fkey \n    FOREIGN KEY (trip_id) REFERENCES trips(id) ON DELETE CASCADE;\n\n-- Update events table  \nALTER TABLE events RENAME COLUMN cruise_id TO trip_id;\nALTER TABLE events DROP CONSTRAINT IF EXISTS events_cruise_id_fkey;\nALTER TABLE events ADD CONSTRAINT events_trip_id_fkey \n    FOREIGN KEY (trip_id) REFERENCES trips(id) ON DELETE CASCADE;\n\n-- Update cruise_talent table (rename to trip_talent)\nALTER TABLE cruise_talent RENAME TO trip_talent;\nALTER TABLE trip_talent RENAME COLUMN cruise_id TO trip_id;\nALTER TABLE trip_talent DROP CONSTRAINT IF EXISTS cruise_talent_cruise_id_fkey;\nALTER TABLE trip_talent ADD CONSTRAINT trip_talent_trip_id_fkey \n    FOREIGN KEY (trip_id) REFERENCES trips(id) ON DELETE CASCADE;\n\n-- Update trip_info_sections table\nALTER TABLE trip_info_sections RENAME COLUMN cruise_id TO trip_id;\nALTER TABLE trip_info_sections DROP CONSTRAINT IF EXISTS trip_info_sections_cruise_id_fkey;\nALTER TABLE trip_info_sections ADD CONSTRAINT trip_info_sections_trip_id_fkey \n    FOREIGN KEY (trip_id) REFERENCES trips(id) ON DELETE CASCADE;\n\n-- Update invitations table (if it has cruise_id)\nALTER TABLE invitations RENAME COLUMN cruise_id TO trip_id;\n\n-- Step 9: Update indexes\nDROP INDEX IF EXISTS trip_status_idx;\nCREATE INDEX IF NOT EXISTS trips_status_idx ON trips(status);\n\nDROP INDEX IF EXISTS trip_slug_idx;\nCREATE INDEX IF NOT EXISTS trips_slug_idx ON trips(slug);\n\nDROP INDEX IF EXISTS trip_trip_type_idx;\nCREATE INDEX IF NOT EXISTS trips_trip_type_idx ON trips(trip_type);\n\nDROP INDEX IF EXISTS cruises_ship_id_idx;\nCREATE INDEX IF NOT EXISTS trips_ship_id_idx ON trips(ship_id);\n\nDROP INDEX IF EXISTS itinerary_cruise_idx;\nCREATE INDEX IF NOT EXISTS itinerary_trip_idx ON itinerary(trip_id);\n\nDROP INDEX IF EXISTS events_cruise_idx;\nCREATE INDEX IF NOT EXISTS events_trip_idx ON events(trip_id);\n\nDROP INDEX IF EXISTS cruise_talent_cruise_idx;\nCREATE INDEX IF NOT EXISTS trip_talent_trip_idx ON trip_talent(trip_id);\n\nDROP INDEX IF EXISTS cruise_info_cruise_idx;\nCREATE INDEX IF NOT EXISTS trip_info_trip_idx ON trip_info_sections(trip_id);\n\n-- Step 10: Create index on trip_type_id for better query performance\nCREATE INDEX IF NOT EXISTS trips_trip_type_id_idx ON trips(trip_type_id);\n\n-- Step 11: Update sequences if needed\nALTER SEQUENCE IF EXISTS cruises_id_seq RENAME TO trips_id_seq;"}	001_create_trip_types_and_rename_cruises	bryhearnchi@gmail.com	\N
20250920101015	{"-- Step 1: Create trip_status table\nCREATE TABLE IF NOT EXISTS trip_status (\n    id SERIAL PRIMARY KEY,\n    status VARCHAR(50) NOT NULL UNIQUE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Step 2: Insert initial trip statuses\nINSERT INTO trip_status (status) VALUES \n    ('Upcoming'),\n    ('Current'),\n    ('Past')\nON CONFLICT DO NOTHING;\n\n-- Step 3: Add trip_status_id column to trips table\nALTER TABLE trips \nADD COLUMN IF NOT EXISTS trip_status_id INTEGER;\n\n-- Step 4: Map existing status values to new trip_status_id\nUPDATE trips \nSET trip_status_id = CASE \n    WHEN status = 'upcoming' THEN (SELECT id FROM trip_status WHERE status = 'Upcoming')\n    WHEN status = 'ongoing' THEN (SELECT id FROM trip_status WHERE status = 'Current')\n    WHEN status = 'past' THEN (SELECT id FROM trip_status WHERE status = 'Past')\n    ELSE (SELECT id FROM trip_status WHERE status = 'Upcoming') -- Default to Upcoming\nEND\nWHERE trip_status_id IS NULL;\n\n-- Step 5: Add foreign key constraint\nALTER TABLE trips \nADD CONSTRAINT trips_trip_status_id_fkey \nFOREIGN KEY (trip_status_id) REFERENCES trip_status(id);\n\n-- Step 6: Make trip_status_id NOT NULL after setting values\nALTER TABLE trips \nALTER COLUMN trip_status_id SET NOT NULL;\n\n-- Step 7: Drop the old trip_type column (deprecated from previous migration)\nALTER TABLE trips \nDROP COLUMN IF EXISTS trip_type;\n\n-- Step 8: Create index on trip_status_id for better query performance\nCREATE INDEX IF NOT EXISTS trips_trip_status_id_idx ON trips(trip_status_id);\n\n-- Step 9: Drop old indexes that referenced removed columns\nDROP INDEX IF EXISTS trips_trip_type_idx;"}	002_remove_trip_type_add_trip_status	bryhearnchi@gmail.com	\N
20250920103502	{"-- Step 1: Delete test rows from ports table (rows 34-37)\nDELETE FROM ports WHERE id IN (34, 35, 36, 37);\n\n-- Step 2: Rename ports table to locations\nALTER TABLE ports RENAME TO locations;\n\n-- Step 3: Drop the region and port_type columns from locations table\nALTER TABLE locations \nDROP COLUMN IF EXISTS region,\nDROP COLUMN IF EXISTS port_type;\n\n-- Step 4: Update foreign key constraint name in itinerary table\nALTER TABLE itinerary RENAME COLUMN port_id TO location_id;\nALTER TABLE itinerary DROP CONSTRAINT IF EXISTS itinerary_port_id_fkey;\nALTER TABLE itinerary ADD CONSTRAINT itinerary_location_id_fkey \n    FOREIGN KEY (location_id) REFERENCES locations(id) ON DELETE SET NULL;\n\n-- Step 5: Remove country field from itinerary table\nALTER TABLE itinerary \nDROP COLUMN IF EXISTS country;\n\n-- Step 6: Add resort_name field to trips table\nALTER TABLE trips \nADD COLUMN IF NOT EXISTS resort_name VARCHAR(255);\n\n-- Step 7: Update sequences\nALTER SEQUENCE IF EXISTS ports_id_seq RENAME TO locations_id_seq;\n\n-- Step 8: Update indexes\nDROP INDEX IF EXISTS ports_name_unique;\nCREATE UNIQUE INDEX IF NOT EXISTS locations_name_unique ON locations(name);\n\nDROP INDEX IF EXISTS ports_type_idx;  -- No longer needed since port_type is removed\n\n-- Step 9: Create new index for location_id in itinerary\nDROP INDEX IF EXISTS itinerary_port_idx;\nCREATE INDEX IF NOT EXISTS itinerary_location_idx ON itinerary(location_id);"}	003_rename_ports_to_locations_and_field_changes	bryhearnchi@gmail.com	\N
20250920104247	{"-- Step 1: Create talent_categories table\nCREATE TABLE IF NOT EXISTS talent_categories (\n    id SERIAL PRIMARY KEY,\n    category VARCHAR(100) NOT NULL UNIQUE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Step 2: Insert the talent categories\nINSERT INTO talent_categories (category) VALUES \n    ('Headliners'),\n    ('Vocalists'),\n    ('Drag & Variety'),\n    ('DJ''s'),\n    ('Piano Bar / Cabaret')\nON CONFLICT DO NOTHING;\n\n-- Step 3: Add talent_category_id column to talent table\nALTER TABLE talent \nADD COLUMN IF NOT EXISTS talent_category_id INTEGER;\n\n-- Step 4: Map existing categories to new talent_category_id\n-- Based on the current categories in the database, mapping them appropriately\nUPDATE talent \nSET talent_category_id = CASE \n    WHEN category = 'Broadway Legend' THEN (SELECT id FROM talent_categories WHERE category = 'Headliners')\n    WHEN category = 'Vocalists' THEN (SELECT id FROM talent_categories WHERE category = 'Vocalists')\n    WHEN category = 'Drag' THEN (SELECT id FROM talent_categories WHERE category = 'Drag & Variety')\n    WHEN category = 'Drag & Variety' THEN (SELECT id FROM talent_categories WHERE category = 'Drag & Variety')\n    WHEN category = 'DJs' THEN (SELECT id FROM talent_categories WHERE category = 'DJ''s')\n    WHEN category = 'Piano Bar' THEN (SELECT id FROM talent_categories WHERE category = 'Piano Bar / Cabaret')\n    WHEN category = 'Comedy' THEN (SELECT id FROM talent_categories WHERE category = 'Drag & Variety') -- Mapping Comedy to Drag & Variety\n    WHEN category = 'Productions' THEN (SELECT id FROM talent_categories WHERE category = 'Headliners') -- Mapping Productions to Headliners\n    ELSE (SELECT id FROM talent_categories WHERE category = 'Headliners') -- Default fallback\nEND\nWHERE talent_category_id IS NULL;\n\n-- Step 5: Add foreign key constraint\nALTER TABLE talent \nADD CONSTRAINT talent_talent_category_id_fkey \nFOREIGN KEY (talent_category_id) REFERENCES talent_categories(id);\n\n-- Step 6: Make talent_category_id NOT NULL after setting values\nALTER TABLE talent \nALTER COLUMN talent_category_id SET NOT NULL;\n\n-- Step 7: Create index on talent_category_id for better query performance\nCREATE INDEX IF NOT EXISTS talent_talent_category_id_idx ON talent(talent_category_id);\n\n-- Step 8: Create index on category name in talent_categories\nCREATE INDEX IF NOT EXISTS talent_categories_category_idx ON talent_categories(category);"}	004_create_talent_categories_table	bryhearnchi@gmail.com	\N
20250920105056	{"-- Step 1: Create location_types table\nCREATE TABLE IF NOT EXISTS location_types (\n    id SERIAL PRIMARY KEY,\n    type VARCHAR(50) NOT NULL UNIQUE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Step 2: Insert the location types\nINSERT INTO location_types (type) VALUES \n    ('Embarkation'),\n    ('Disembarkation'),\n    ('Port'),\n    ('Sea Day'),\n    ('Resort')\nON CONFLICT DO NOTHING;\n\n-- Step 3: Add location_type_id column to itinerary table\nALTER TABLE itinerary \nADD COLUMN IF NOT EXISTS location_type_id INTEGER;\n\n-- Step 4: Map itinerary entries to location types based on patterns\nUPDATE itinerary \nSET location_type_id = CASE \n    -- Sea Day patterns\n    WHEN port_name ILIKE '%day at sea%' THEN (SELECT id FROM location_types WHERE type = 'Sea Day')\n    WHEN port_name ILIKE '%sea day%' THEN (SELECT id FROM location_types WHERE type = 'Sea Day')\n    \n    -- Embarkation patterns (typically day 1 or contains 'Embarkation')\n    WHEN port_name ILIKE '%embarkation%' THEN (SELECT id FROM location_types WHERE type = 'Embarkation')\n    WHEN day = 1 AND port_name NOT ILIKE '%day at sea%' THEN (SELECT id FROM location_types WHERE type = 'Embarkation')\n    WHEN segment = 'pre' THEN (SELECT id FROM location_types WHERE type = 'Embarkation')\n    \n    -- Disembarkation patterns (last day or contains 'Disembarkation')\n    WHEN port_name ILIKE '%disembarkation%' THEN (SELECT id FROM location_types WHERE type = 'Disembarkation')\n    WHEN segment = 'post' THEN (SELECT id FROM location_types WHERE type = 'Disembarkation')\n    \n    -- Default to Port for all other entries\n    ELSE (SELECT id FROM location_types WHERE type = 'Port')\nEND\nWHERE location_type_id IS NULL;\n\n-- Step 5: For the last day of each trip, mark as Disembarkation if not already set\nWITH last_days AS (\n    SELECT trip_id, MAX(day) as last_day\n    FROM itinerary\n    GROUP BY trip_id\n)\nUPDATE itinerary i\nSET location_type_id = (SELECT id FROM location_types WHERE type = 'Disembarkation')\nFROM last_days ld\nWHERE i.trip_id = ld.trip_id \n  AND i.day = ld.last_day\n  AND i.port_name NOT ILIKE '%sea%'\n  AND i.location_type_id = (SELECT id FROM location_types WHERE type = 'Port');\n\n-- Step 6: Add foreign key constraint\nALTER TABLE itinerary \nADD CONSTRAINT itinerary_location_type_id_fkey \nFOREIGN KEY (location_type_id) REFERENCES location_types(id);\n\n-- Step 7: Make location_type_id NOT NULL after setting values\nALTER TABLE itinerary \nALTER COLUMN location_type_id SET NOT NULL;\n\n-- Step 8: Create index on location_type_id for better query performance\nCREATE INDEX IF NOT EXISTS itinerary_location_type_id_idx ON itinerary(location_type_id);"}	005_create_location_types_table	bryhearnchi@gmail.com	\N
20250921025111	{"-- Remove redundant columns from events table\n-- These will now come from party_themes or talent tables\nALTER TABLE events \nDROP COLUMN IF EXISTS deck,\nDROP COLUMN IF EXISTS description,\nDROP COLUMN IF EXISTS short_description,\nDROP COLUMN IF EXISTS image_url,\nDROP COLUMN IF EXISTS theme_description,\nDROP COLUMN IF EXISTS dress_code,\nDROP COLUMN IF EXISTS capacity,\nDROP COLUMN IF EXISTS requires_reservation;\n\n-- Drop the old party_id column and its foreign key constraint\nALTER TABLE events \nDROP CONSTRAINT IF EXISTS events_party_id_fkey,\nDROP COLUMN IF EXISTS party_id;\n\n-- Add index on party_theme_id for better query performance\nCREATE INDEX IF NOT EXISTS idx_events_party_theme_id ON events(party_theme_id);"}	012_cleanup_events_table_columns	bryhearnchi@gmail.com	\N
20250920110155	{"-- Step 1: Drop the foreign key constraints that reference trip_talent\n-- None found that reference this table\n\n-- Step 2: Drop indexes related to trip_talent\nDROP INDEX IF EXISTS trip_talent_trip_idx;\nDROP INDEX IF EXISTS trip_talent_talent_idx;\nDROP INDEX IF EXISTS cruise_talent_cruise_idx;\nDROP INDEX IF EXISTS cruise_talent_talent_idx;\n\n-- Step 3: Drop the trip_talent table (formerly cruise_talent)\nDROP TABLE IF EXISTS trip_talent CASCADE;\n\n-- Step 4: Also drop the old cruise_talent table if it still exists as a separate table\nDROP TABLE IF EXISTS cruise_talent CASCADE;\n\n-- Note: Talent associations are now managed through:\n-- 1. The talent_ids JSON field in the events table (current implementation)\n-- 2. The event_talent junction table (for future normalized implementation)\n-- \n-- To get all talent for a trip, query:\n-- SELECT DISTINCT jsonb_array_elements(talent_ids)::int as talent_id\n-- FROM events\n-- WHERE trip_id = ? AND talent_ids IS NOT NULL"}	006_remove_trip_talent_table	bryhearnchi@gmail.com	\N
20250920110402	{"-- Step 1: Ensure trip_talent table exists\nCREATE TABLE IF NOT EXISTS trip_talent (\n    trip_id INTEGER NOT NULL REFERENCES trips(id) ON DELETE CASCADE,\n    talent_id INTEGER NOT NULL REFERENCES talent(id) ON DELETE CASCADE,\n    role TEXT,\n    performance_count INTEGER,\n    notes TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (trip_id, talent_id)\n);\n\n-- Step 2: Recreate indexes\nCREATE INDEX IF NOT EXISTS trip_talent_trip_idx ON trip_talent(trip_id);\nCREATE INDEX IF NOT EXISTS trip_talent_talent_idx ON trip_talent(talent_id);\n\n-- Step 3: Restore known valid data for trip 1\nINSERT INTO trip_talent (trip_id, talent_id, role) \nSELECT 1, id, 'Featured Performer'\nFROM talent \nWHERE id <= 22\nON CONFLICT DO NOTHING;\n\n-- Documentation note:\n-- The trip_talent table is kept because:\n-- 1. Talent can be announced for a trip before specific events are scheduled\n-- 2. Some talent might be general cruise entertainment not tied to specific events\n-- 3. Provides a way to show \\"Featured Talent\\" for marketing purposes\n--\n-- The event_talent table exists but is currently unused (events use talent_ids JSON field)"}	007_restore_trip_talent_simplified	bryhearnchi@gmail.com	\N
20250920110502	{"-- Remove the unused event_talent table\n-- This table was never populated (0 records) and is redundant since:\n-- 1. Events use talent_ids JSON field for event-specific talent\n-- 2. trip_talent table handles trip-level talent associations\n\n-- Step 1: Drop foreign key constraints if any reference this table\n-- None found\n\n-- Step 2: Drop indexes\nDROP INDEX IF EXISTS event_talent_event_idx;\nDROP INDEX IF EXISTS event_talent_talent_idx;\nDROP INDEX IF EXISTS event_talent_unique;\n\n-- Step 3: Drop the event_talent table\nDROP TABLE IF EXISTS event_talent CASCADE;\n\n-- Documentation:\n-- Talent associations are now handled by:\n-- 1. trip_talent table - for trip-level talent (marketing, announcements)\n-- 2. events.talent_ids JSON field - for event-specific talent"}	008_remove_event_talent_table	bryhearnchi@gmail.com	\N
20250921010722	{"-- Migration to consolidate all image URLs to use single app-images bucket with organized folders\n-- Old structure: Multiple buckets (talent-images, port-images, party-images, cruise-images, event-images)\n-- New structure: Single app-images bucket with folders (talent, locations, events, trips, parties)\n\n-- IMPORTANT: Manual steps required in Supabase Dashboard:\n-- 1. Create new bucket: app-images (make it public)\n-- 2. In app-images bucket, create folders: talent, locations, events, trips, parties\n-- 3. Move all files from old buckets:\n--    talent-images/* → app-images/talent/\n--    port-images/* → app-images/locations/\n--    party-images/* → app-images/parties/\n--    event-images/* → app-images/events/\n--    cruise-images/* → app-images/trips/\n-- 4. After moving files, delete old buckets\n\n-- Step 1: Update talent profile images\nUPDATE talent \nSET profile_image_url = REGEXP_REPLACE(\n    profile_image_url,\n    'storage/v1/object/public/talent-images(/talent)?/',\n    'storage/v1/object/public/app-images/talent/',\n    'g'\n)\nWHERE profile_image_url LIKE '%supabase.co/storage%';\n\n-- Step 2: Update locations images (remove Cloudinary URLs)\nUPDATE locations \nSET image_url = NULL\nWHERE image_url LIKE '%cloudinary%';\n\n-- Update Supabase URLs for locations\nUPDATE locations \nSET image_url = REGEXP_REPLACE(\n    image_url,\n    'storage/v1/object/public/(port-images|destination-images|destinations)/',\n    'storage/v1/object/public/app-images/locations/',\n    'g'\n)\nWHERE image_url LIKE '%supabase.co/storage%';\n\n-- Step 3: Update events images\nUPDATE events \nSET image_url = REGEXP_REPLACE(\n    image_url,\n    'storage/v1/object/public/(party-images|event-images)/',\n    'storage/v1/object/public/app-images/events/',\n    'g'\n)\nWHERE image_url LIKE '%supabase.co/storage%';\n\n-- Step 4: Update trips hero images\nUPDATE trips \nSET hero_image_url = REGEXP_REPLACE(\n    hero_image_url,\n    'storage/v1/object/public/(cruise-images|trip-images)/',\n    'storage/v1/object/public/app-images/trips/',\n    'g'\n)\nWHERE hero_image_url LIKE '%supabase.co/storage%';\n\n-- Step 5: Update parties images\nUPDATE parties \nSET image_url = REGEXP_REPLACE(\n    image_url,\n    'storage/v1/object/public/party-images/',\n    'storage/v1/object/public/app-images/parties/',\n    'g'\n)\nWHERE image_url LIKE '%supabase.co/storage%';\n\n-- Step 6: Update itinerary port images\nUPDATE itinerary \nSET port_image_url = REGEXP_REPLACE(\n    port_image_url,\n    'storage/v1/object/public/(port-images|destination-images|destinations)/',\n    'storage/v1/object/public/app-images/locations/',\n    'g'\n)\nWHERE port_image_url LIKE '%supabase.co/storage%';\n\n-- Step 7: Update ships images\nUPDATE ships \nSET image_url = REGEXP_REPLACE(\n    image_url,\n    'storage/v1/object/public/(ship-images|cruise-images)/',\n    'storage/v1/object/public/app-images/trips/',\n    'g'\n)\nWHERE image_url LIKE '%supabase.co/storage%';"}	009_consolidate_storage_urls_simple	bryhearnchi@gmail.com	\N
20250921025007	{"-- Step 1: Create the new party_themes table\nCREATE TABLE IF NOT EXISTS party_themes (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL UNIQUE,\n    long_description TEXT,\n    short_description TEXT,\n    costume_ideas TEXT,\n    image_url TEXT,\n    amazon_shopping_list_url TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Step 2: Insert unique party themes from events table where type = 'party'\nINSERT INTO party_themes (name, long_description, short_description, image_url)\nSELECT DISTINCT\n    title as name,\n    description as long_description,\n    short_description,\n    image_url\nFROM events\nWHERE type = 'party'\nORDER BY title;\n\n-- Step 3: Add party_theme_id column to events table\nALTER TABLE events\nADD COLUMN IF NOT EXISTS party_theme_id INTEGER REFERENCES party_themes(id);\n\n-- Step 4: Associate each party event with its theme\nUPDATE events e\nSET party_theme_id = pt.id\nFROM party_themes pt\nWHERE e.type = 'party' AND e.title = pt.name;\n\n-- Step 5: Special handling for existing party_id associations\n-- Map Welcome Party (party_id 6 = Cocktails and Canapés)\nUPDATE events \nSET party_theme_id = (SELECT id FROM party_themes WHERE name = 'Welcome Party')\nWHERE id = 9 AND party_id = 6;\n\n-- Map Dog Tag T-Dance (party_id 5)\nUPDATE events \nSET party_theme_id = (SELECT id FROM party_themes WHERE name = 'Dog Tag T-Dance')\nWHERE id = 15 AND party_id = 5;\n\n-- Map White Party events (party_id 7)\nUPDATE events \nSET party_theme_id = (SELECT id FROM party_themes WHERE name = 'Virgin White Party')\nWHERE id = 59 AND party_id = 7;\n\nUPDATE events \nSET party_theme_id = (SELECT id FROM party_themes WHERE name = 'Off-White After party')\nWHERE id = 60 AND party_id = 7;"}	010_create_party_themes_table	bryhearnchi@gmail.com	\N
20250921025047	{"-- Add costume ideas for each party theme\nUPDATE party_themes SET \n    costume_ideas = CASE name\n        WHEN 'Virgin White Party' THEN 'All white outfits - be creative, sexy, irreverent, or simple. White shirts, pants, dresses, accessories. Add LED lights or glow elements for extra flair.'\n        WHEN 'Dog Tag T-Dance' THEN 'Military uniforms, camo prints, combat boots, tank tops, dog tags. Army green, khaki, military-inspired accessories.'\n        WHEN 'Empires' THEN 'Togas, Egyptian pharaohs, Cleopatra, Roman senators, Greek gods, Ottoman sultans. Golden accessories, laurel crowns, ancient jewelry.'\n        WHEN 'Greek Isles: Here We Go Again!' THEN 'Blue & white Greek island colors, sequins, platform boots, ABBA-inspired outfits, flowing fabrics, Mediterranean beach wear.'\n        WHEN 'Neon Playground' THEN 'Neon colors, glow sticks, UV reactive clothing, bright wigs, LED accessories, fluorescent body paint, cyber punk.'\n        WHEN 'Think Pink T-Dance' THEN 'All shades of pink, Barbie-inspired, tutus, pink wigs, flamingo accessories, rose gold, hot pink, pastel pink mix.'\n        WHEN 'Lost At Sea' THEN 'Pirates, mermaids, sailors, sea creatures, nautical stripes, captain hats, tropical cruise wear, shipwreck chic.'\n        WHEN 'UNITE' THEN 'National flags as capes or clothing, country colors, Olympic-inspired, international soccer jerseys, cultural traditional wear.'\n        WHEN 'Revival! Classic Disco T-Dance' THEN '70s disco fashion, bell bottoms, platform shoes, afro wigs, metallic fabrics, vintage band tees, John Travolta white suits.'\n        WHEN 'Off-White After party' THEN 'Off-white, cream, beige, tan, ivory. Relaxed late-night looks, comfortable but stylish.'\n        WHEN 'Welcome Party' THEN 'Casual cruise chic, tropical prints, resort wear, comfortable but stylish first night outfits.'\n        WHEN 'Sail-Away Party' THEN 'Nautical themes, sailor stripes, captain hats, deck party attire, sunset colors, breezy fabrics.'\n        WHEN 'Atlantis Classics' THEN 'Diva-inspired, glamorous gowns, sequins, tribute to music icons, vintage concert tees, dramatic accessories.'\n        WHEN 'Atlantis Night Club' THEN 'Club kid fashion, avant-garde, leather, mesh, metallic fabrics, platform boots, bold makeup.'\n        WHEN 'Last Dance' THEN 'Farewell glamour, your best outfit saved for last, memorable finale looks, anything goes.'\n        ELSE NULL\n    END,\n    amazon_shopping_list_url = CASE name\n        WHEN 'Virgin White Party' THEN 'https://www.amazon.com/shop/whitePartyOutfits'\n        WHEN 'Neon Playground' THEN 'https://www.amazon.com/shop/neonRaveGear'\n        WHEN 'Think Pink T-Dance' THEN 'https://www.amazon.com/shop/pinkPartyFashion'\n        ELSE NULL\n    END\nWHERE name IN (\n    'Virgin White Party', 'Dog Tag T-Dance', 'Empires', 'Greek Isles: Here We Go Again!',\n    'Neon Playground', 'Think Pink T-Dance', 'Lost At Sea', 'UNITE',\n    'Revival! Classic Disco T-Dance', 'Off-White After party', 'Welcome Party',\n    'Sail-Away Party', 'Atlantis Classics', 'Atlantis Night Club', 'Last Dance'\n);"}	011_add_costume_ideas_to_party_themes	bryhearnchi@gmail.com	\N
20250921035111	{"-- Drop the problematic policy with subquery\nDROP POLICY IF EXISTS \\"Service role can manage all profiles\\" ON profiles;\n\n-- Create optimized version without subquery\nCREATE POLICY \\"Service role can manage all profiles\\" ON profiles\n  FOR ALL \n  USING ((SELECT auth.role()) = 'service_role');"}	fix_profiles_rls_policy_performance	bryhearnchi@gmail.com	\N
20250921035124	{"-- Set secure search_path for all invitation-related functions\nALTER FUNCTION generate_invitation_token() SET search_path = public, pg_catalog;\nALTER FUNCTION cancel_invitation(uuid) SET search_path = public, pg_catalog;\nALTER FUNCTION create_user_invitation(varchar, varchar, user_role, text) SET search_path = public, pg_catalog;\nALTER FUNCTION resend_invitation(uuid) SET search_path = public, pg_catalog;\n\n-- Handle both versions of validate_invitation_token\nALTER FUNCTION validate_invitation_token(text) SET search_path = public, pg_catalog;\nALTER FUNCTION validate_invitation_token(text, text, text) SET search_path = public, pg_catalog;\n\nALTER FUNCTION consume_invitation(uuid, uuid) SET search_path = public, pg_catalog;\nALTER FUNCTION cleanup_expired_invitations() SET search_path = public, pg_catalog;\nALTER FUNCTION get_invitation_stats() SET search_path = public, pg_catalog;"}	secure_invitation_functions_search_path	bryhearnchi@gmail.com	\N
20250921035138	{"-- Remove duplicate indexes that are redundant (skip constraint-based index)\nDROP INDEX IF EXISTS idx_events_cruise_id;\nDROP INDEX IF EXISTS idx_itinerary_cruise_id;\nDROP INDEX IF EXISTS idx_trip_info_sections_cruise_id;\nDROP INDEX IF EXISTS idx_cruises_slug;\nDROP INDEX IF EXISTS idx_cruises_status;\n\n-- Note: ports_name_key is a unique constraint, not just an index, so we'll leave it"}	remove_duplicate_indexes_fixed	bryhearnchi@gmail.com	\N
20250921035153	{"-- Add optimized performance indexes\nCREATE INDEX IF NOT EXISTS trips_status_dates_idx \n  ON trips(trip_status_id, start_date, end_date);\n\n-- Create index without partial condition (since CURRENT_DATE is not immutable)\nCREATE INDEX IF NOT EXISTS events_date_range_idx \n  ON events(trip_id, date, type);"}	add_performance_indexes_corrected	bryhearnchi@gmail.com	\N
20250921035202	{"-- Fix foreign key constraint names to match new table names\nALTER TABLE trips \n  DROP CONSTRAINT IF EXISTS cruises_ship_id_fkey;\n\nALTER TABLE trips\n  ADD CONSTRAINT trips_ship_id_fkey \n  FOREIGN KEY (ship_id) REFERENCES ships(id);\n\nALTER TABLE trips\n  DROP CONSTRAINT IF EXISTS cruises_trip_type_id_fkey;\n\nALTER TABLE trips\n  ADD CONSTRAINT trips_trip_type_id_fkey \n  FOREIGN KEY (trip_type_id) REFERENCES trip_types(id);"}	fix_foreign_key_constraint_names	bryhearnchi@gmail.com	\N
20250921050550	{"-- Step 1: Drop the existing view that depends on the category column\nDROP VIEW IF EXISTS admin_dashboard_stats;\n\n-- Step 2: Recreate the view using talent_categories join\nCREATE OR REPLACE VIEW admin_dashboard_stats AS\nSELECT 'cruises'::text AS entity_type,\n    count(*) AS total_count,\n    count(*) FILTER (WHERE (trips.status = 'upcoming'::text)) AS metric_1,\n    count(*) FILTER (WHERE (trips.status = 'ongoing'::text)) AS metric_2,\n    count(*) FILTER (WHERE (trips.status = 'past'::text)) AS metric_3\nFROM trips\nUNION ALL\nSELECT 'events'::text AS entity_type,\n    count(*) AS total_count,\n    count(*) FILTER (WHERE (events.type = 'party'::text)) AS metric_1,\n    count(*) FILTER (WHERE (events.type = 'show'::text)) AS metric_2,\n    count(*) FILTER (WHERE (events.date >= (CURRENT_DATE - '30 days'::interval))) AS metric_3\nFROM events\nUNION ALL\nSELECT 'talent'::text AS entity_type,\n    count(*) AS total_count,\n    count(*) FILTER (WHERE (tc.category = 'Drag & Variety'::text)) AS metric_1,\n    count(*) FILTER (WHERE (tc.category = 'Headliners'::text)) AS metric_2,\n    count(*) FILTER (WHERE (tc.category = 'Vocalists'::text)) AS metric_3\nFROM talent t\nLEFT JOIN talent_categories tc ON t.talent_category_id = tc.id\nUNION ALL\nSELECT 'ships'::text AS entity_type,\n    count(*) AS total_count,\n    count(*) FILTER (WHERE ((ships.cruise_line)::text = 'Virgin Voyages'::text)) AS metric_1,\n    count(*) FILTER (WHERE ((ships.cruise_line)::text = 'Celebrity'::text)) AS metric_2,\n    count(*) FILTER (WHERE ((ships.cruise_line IS NOT NULL) AND ((ships.cruise_line)::text <> ALL ((ARRAY['Virgin Voyages'::character varying, 'Celebrity'::character varying])::text[])))) AS metric_3\nFROM ships;\n\n-- Step 3: Drop the old category column from talent table\nALTER TABLE talent DROP COLUMN IF EXISTS category;\n\n-- Step 4: Add index on talent_category_id for better join performance\nCREATE INDEX IF NOT EXISTS idx_talent_category_id ON talent(talent_category_id);"}	update_talent_category_system	bryhearnchi@gmail.com	\N
20250921070110	{"-- Create a view to map ports to locations for backward compatibility\nCREATE OR REPLACE VIEW ports AS\nSELECT \n  id,\n  name,\n  country,\n  coordinates,\n  description,\n  image_url,\n  created_at,\n  updated_at\nFROM locations;\n\n-- Create instead of triggers for INSERT, UPDATE, DELETE operations\nCREATE OR REPLACE FUNCTION redirect_ports_insert()\nRETURNS TRIGGER AS $$\nBEGIN\n  INSERT INTO locations (name, country, coordinates, description, image_url)\n  VALUES (NEW.name, NEW.country, NEW.coordinates, NEW.description, NEW.image_url)\n  RETURNING * INTO NEW;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE OR REPLACE FUNCTION redirect_ports_update()\nRETURNS TRIGGER AS $$\nBEGIN\n  UPDATE locations \n  SET \n    name = NEW.name,\n    country = NEW.country,\n    coordinates = NEW.coordinates,\n    description = NEW.description,\n    image_url = NEW.image_url,\n    updated_at = CURRENT_TIMESTAMP\n  WHERE id = NEW.id\n  RETURNING * INTO NEW;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE OR REPLACE FUNCTION redirect_ports_delete()\nRETURNS TRIGGER AS $$\nBEGIN\n  DELETE FROM locations WHERE id = OLD.id;\n  RETURN OLD;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Create the triggers\nDROP TRIGGER IF EXISTS ports_insert_trigger ON ports;\nCREATE TRIGGER ports_insert_trigger\n  INSTEAD OF INSERT ON ports\n  FOR EACH ROW\n  EXECUTE FUNCTION redirect_ports_insert();\n\nDROP TRIGGER IF EXISTS ports_update_trigger ON ports;\nCREATE TRIGGER ports_update_trigger\n  INSTEAD OF UPDATE ON ports\n  FOR EACH ROW\n  EXECUTE FUNCTION redirect_ports_update();\n\nDROP TRIGGER IF EXISTS ports_delete_trigger ON ports;\nCREATE TRIGGER ports_delete_trigger\n  INSTEAD OF DELETE ON ports\n  FOR EACH ROW\n  EXECUTE FUNCTION redirect_ports_delete();"}	create_ports_view	bryhearnchi@gmail.com	\N
20250921071215	{"-- Enable RLS on all necessary tables\nALTER TABLE locations ENABLE ROW LEVEL SECURITY;\nALTER TABLE trips ENABLE ROW LEVEL SECURITY;\nALTER TABLE talent ENABLE ROW LEVEL SECURITY;\nALTER TABLE party_themes ENABLE ROW LEVEL SECURITY;\nALTER TABLE events ENABLE ROW LEVEL SECURITY;\nALTER TABLE itinerary ENABLE ROW LEVEL SECURITY;\nALTER TABLE ships ENABLE ROW LEVEL SECURITY;\nALTER TABLE trip_info_sections ENABLE ROW LEVEL SECURITY;\nALTER TABLE trip_talent ENABLE ROW LEVEL SECURITY;\n\n-- ===========================================\n-- LOCATIONS TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass (full access for backend operations)\nCREATE POLICY \\"Service role bypass\\" ON locations\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON locations\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON locations\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- TRIPS TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON trips\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON trips\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON trips\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- TALENT TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON talent\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON talent\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON talent\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- PARTY_THEMES TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON party_themes\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON party_themes\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON party_themes\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- EVENTS TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON events\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON events\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON events\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- ITINERARY TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON itinerary\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON itinerary\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON itinerary\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- SHIPS TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON ships\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON ships\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON ships\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- TRIP_INFO_SECTIONS TABLE POLICIES\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON trip_info_sections\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON trip_info_sections\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON trip_info_sections\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);\n\n-- ===========================================\n-- TRIP_TALENT TABLE POLICIES (junction table)\n-- ===========================================\n\n-- Service role bypass\nCREATE POLICY \\"Service role bypass\\" ON trip_talent\n    FOR ALL\n    TO service_role\n    USING (true)\n    WITH CHECK (true);\n\n-- Admin/Content Manager write access\nCREATE POLICY \\"Admin full access\\" ON trip_talent\n    FOR ALL\n    TO authenticated\n    USING (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    )\n    WITH CHECK (\n        EXISTS (\n            SELECT 1 FROM profiles\n            WHERE profiles.id = auth.uid()\n            AND profiles.role IN ('admin', 'content_manager')\n        )\n    );\n\n-- Public read access\nCREATE POLICY \\"Public read access\\" ON trip_talent\n    FOR SELECT\n    TO anon, authenticated\n    USING (true);"}	add_rls_policies_for_all_tables	bryhearnchi@gmail.com	\N
20250921071640	{"-- ============================================\n-- CRITICAL SECURITY FIX MIGRATION\n-- Fixes privilege escalation and permission gaps\n-- ============================================\n\n-- 1. FIX PROFILES TABLE - PREVENT PRIVILEGE ESCALATION\n-- Drop existing vulnerable policies\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can insert their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can read own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Public profiles are viewable by everyone\\" ON profiles;\nDROP POLICY IF EXISTS \\"Service role can manage all profiles\\" ON profiles;\n\n-- Create secure policies for profiles table\n-- Allow users to view all profiles (for user listings)\nCREATE POLICY \\"Anyone can view profiles\\"\n  ON profiles FOR SELECT\n  TO public\n  USING (true);\n\n-- Allow users to insert their own profile (but NOT set role)\nCREATE POLICY \\"Users can create own profile\\"\n  ON profiles FOR INSERT\n  TO public\n  WITH CHECK (\n    id = auth.uid() \n    AND (role IS NULL OR role = 'user') -- Prevent setting admin role on creation\n  );\n\n-- Allow users to update their own profile EXCEPT role field\nCREATE POLICY \\"Users can update own profile except role\\"\n  ON profiles FOR UPDATE\n  TO public\n  USING (id = auth.uid())\n  WITH CHECK (\n    id = auth.uid()\n    AND (\n      -- Either role hasn't changed OR user is admin changing it\n      (role = (SELECT role FROM profiles WHERE id = auth.uid()))\n      OR \n      (EXISTS (\n        SELECT 1 FROM profiles \n        WHERE id = auth.uid() \n        AND role = 'admin'\n      ))\n    )\n  );\n\n-- Allow admins to update any profile including roles\nCREATE POLICY \\"Admins can manage all profiles\\"\n  ON profiles FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Service role bypass (properly configured)\nCREATE POLICY \\"Service role bypass profiles\\"\n  ON profiles FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\n-- 2. ENABLE AND SECURE INVITATIONS TABLE\nALTER TABLE invitations ENABLE ROW LEVEL SECURITY;\n\n-- Only admins can create invitations\nCREATE POLICY \\"Admins can create invitations\\"\n  ON invitations FOR INSERT\n  TO authenticated\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Only admins can view invitations\nCREATE POLICY \\"Admins can view invitations\\"\n  ON invitations FOR SELECT\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Only admins can update invitations\nCREATE POLICY \\"Admins can update invitations\\"\n  ON invitations FOR UPDATE\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Only admins can delete invitations\nCREATE POLICY \\"Admins can delete invitations\\"\n  ON invitations FOR DELETE\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Service role bypass for invitations\nCREATE POLICY \\"Service role bypass invitations\\"\n  ON invitations FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\n-- 3. ENABLE RLS ON LOOKUP TABLES (read-only for non-admins)\nALTER TABLE location_types ENABLE ROW LEVEL SECURITY;\nALTER TABLE talent_categories ENABLE ROW LEVEL SECURITY;\nALTER TABLE trip_status ENABLE ROW LEVEL SECURITY;\nALTER TABLE trip_types ENABLE ROW LEVEL SECURITY;\n\n-- Public read access for lookup tables\nCREATE POLICY \\"Public read location_types\\"\n  ON location_types FOR SELECT\n  TO public\n  USING (true);\n\nCREATE POLICY \\"Public read talent_categories\\"\n  ON talent_categories FOR SELECT\n  TO public\n  USING (true);\n\nCREATE POLICY \\"Public read trip_status\\"\n  ON trip_status FOR SELECT\n  TO public\n  USING (true);\n\nCREATE POLICY \\"Public read trip_types\\"\n  ON trip_types FOR SELECT\n  TO public\n  USING (true);\n\n-- Admin/content_manager write access for lookup tables\nCREATE POLICY \\"Admin manage location_types\\"\n  ON location_types FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"Admin manage talent_categories\\"\n  ON talent_categories FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"Admin manage trip_status\\"\n  ON trip_status FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"Admin manage trip_types\\"\n  ON trip_types FOR ALL\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role IN ('admin', 'content_manager')\n    )\n  );\n\n-- Service role bypass for lookup tables\nCREATE POLICY \\"Service role bypass location_types\\"\n  ON location_types FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\nCREATE POLICY \\"Service role bypass talent_categories\\"\n  ON talent_categories FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\nCREATE POLICY \\"Service role bypass trip_status\\"\n  ON trip_status FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\nCREATE POLICY \\"Service role bypass trip_types\\"\n  ON trip_types FOR ALL\n  TO service_role\n  USING (true)\n  WITH CHECK (true);\n\n-- 4. CREATE AUDIT LOG FOR SECURITY TRACKING\nCREATE TABLE IF NOT EXISTS security_audit_log (\n  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n  user_id UUID REFERENCES auth.users(id),\n  action TEXT NOT NULL,\n  table_name TEXT,\n  record_id TEXT,\n  old_data JSONB,\n  new_data JSONB,\n  ip_address INET,\n  user_agent TEXT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Enable RLS on audit log\nALTER TABLE security_audit_log ENABLE ROW LEVEL SECURITY;\n\n-- Only admins can view audit logs\nCREATE POLICY \\"Admins can view audit logs\\"\n  ON security_audit_log FOR SELECT\n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- Service role can insert audit logs\nCREATE POLICY \\"Service role can insert audit logs\\"\n  ON security_audit_log FOR INSERT\n  TO service_role\n  WITH CHECK (true);\n\n-- 5. CREATE TRIGGER TO LOG ROLE CHANGES\nCREATE OR REPLACE FUNCTION log_role_changes()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF OLD.role IS DISTINCT FROM NEW.role THEN\n    INSERT INTO security_audit_log (\n      user_id,\n      action,\n      table_name,\n      record_id,\n      old_data,\n      new_data\n    ) VALUES (\n      auth.uid(),\n      'ROLE_CHANGE',\n      'profiles',\n      NEW.id::TEXT,\n      jsonb_build_object('role', OLD.role),\n      jsonb_build_object('role', NEW.role)\n    );\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\nCREATE TRIGGER audit_role_changes\n  AFTER UPDATE ON profiles\n  FOR EACH ROW\n  EXECUTE FUNCTION log_role_changes();\n\n-- 6. ADD CHECK CONSTRAINT TO VALIDATE ROLES\nALTER TABLE profiles DROP CONSTRAINT IF EXISTS valid_role;\nALTER TABLE profiles ADD CONSTRAINT valid_role \n  CHECK (role IN ('user', 'admin', 'content_manager'));\n\n-- 7. ADD FUNCTION FOR SAFE ROLE UPDATES (admin only)\nCREATE OR REPLACE FUNCTION update_user_role(\n  target_user_id UUID,\n  new_role TEXT\n)\nRETURNS VOID AS $$\nBEGIN\n  -- Check if current user is admin\n  IF NOT EXISTS (\n    SELECT 1 FROM profiles \n    WHERE id = auth.uid() \n    AND role = 'admin'\n  ) THEN\n    RAISE EXCEPTION 'Only admins can update user roles';\n  END IF;\n\n  -- Validate new role\n  IF new_role NOT IN ('user', 'admin', 'content_manager') THEN\n    RAISE EXCEPTION 'Invalid role: %', new_role;\n  END IF;\n\n  -- Update the role\n  UPDATE profiles \n  SET role = new_role,\n      updated_at = NOW()\n  WHERE id = target_user_id;\n  \n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'User not found';\n  END IF;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;"}	fix_critical_security_vulnerabilities	bryhearnchi@gmail.com	\N
20250921071655	{"-- Fix Row Level Security Policies with Proper Permission Hierarchy\n\n-- =========================================\n-- 1. PROFILES TABLE - Fix admin access\n-- =========================================\n\n-- Drop existing problematic policies on profiles\nDROP POLICY IF EXISTS \\"Public profiles are viewable by everyone\\" ON profiles;\nDROP POLICY IF EXISTS \\"Service role can manage all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can insert their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can read own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\n\n-- Create new properly structured policies for profiles\n\n-- Service role bypass (always first)\nCREATE POLICY \\"Service role bypass\\" ON profiles\n  FOR ALL \n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\n-- Admins can do everything with all profiles\nCREATE POLICY \\"Admin full access\\" ON profiles\n  FOR ALL \n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\n-- Content managers can only read profiles\nCREATE POLICY \\"Content manager read access\\" ON profiles\n  FOR SELECT \n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\n-- Users can read all profiles (public directory)\nCREATE POLICY \\"Public read access\\" ON profiles\n  FOR SELECT \n  USING (true);\n\n-- Users can update their own profile only\nCREATE POLICY \\"Users update own profile\\" ON profiles\n  FOR UPDATE \n  TO authenticated\n  USING (id = auth.uid())\n  WITH CHECK (\n    id = auth.uid() \n    -- Prevent users from changing their own role unless they're admin\n    AND (\n      role = (SELECT role FROM profiles WHERE id = auth.uid())\n      OR EXISTS (\n        SELECT 1 FROM profiles \n        WHERE profiles.id = auth.uid() \n          AND profiles.role = 'admin'\n      )\n    )\n  );\n\n-- Users can insert their own profile during signup\nCREATE POLICY \\"Users insert own profile\\" ON profiles\n  FOR INSERT \n  TO authenticated\n  WITH CHECK (\n    id = auth.uid() \n    -- Default role should be null or 'user', not 'admin' or 'content_manager'\n    AND (role IS NULL OR role NOT IN ('admin', 'content_manager'))\n  );\n\n-- =========================================\n-- 2. CONTENT TABLES - Separate admin and content_manager\n-- =========================================\n\n-- LOCATIONS table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON locations;\nDROP POLICY IF EXISTS \\"Public read access\\" ON locations;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON locations;\n\nCREATE POLICY \\"Service role bypass\\" ON locations\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON locations\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON locations\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON locations\n  FOR SELECT USING (true);\n\n-- TRIPS table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON trips;\nDROP POLICY IF EXISTS \\"Public read access\\" ON trips;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON trips;\n\nCREATE POLICY \\"Service role bypass\\" ON trips\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON trips\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON trips\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON trips\n  FOR SELECT USING (true);\n\n-- TALENT table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON talent;\nDROP POLICY IF EXISTS \\"Public read access\\" ON talent;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON talent;\n\nCREATE POLICY \\"Service role bypass\\" ON talent\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON talent\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON talent\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON talent\n  FOR SELECT USING (true);\n\n-- PARTY_THEMES table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON party_themes;\nDROP POLICY IF EXISTS \\"Public read access\\" ON party_themes;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON party_themes;\n\nCREATE POLICY \\"Service role bypass\\" ON party_themes\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON party_themes\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON party_themes\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON party_themes\n  FOR SELECT USING (true);\n\n-- EVENTS table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON events;\nDROP POLICY IF EXISTS \\"Public read access\\" ON events;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON events;\n\nCREATE POLICY \\"Service role bypass\\" ON events\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON events\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON events\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON events\n  FOR SELECT USING (true);\n\n-- ITINERARY table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON itinerary;\nDROP POLICY IF EXISTS \\"Public read access\\" ON itinerary;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON itinerary;\n\nCREATE POLICY \\"Service role bypass\\" ON itinerary\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON itinerary\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON itinerary\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON itinerary\n  FOR SELECT USING (true);\n\n-- SHIPS table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON ships;\nDROP POLICY IF EXISTS \\"Public read access\\" ON ships;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON ships;\n\nCREATE POLICY \\"Service role bypass\\" ON ships\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON ships\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON ships\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON ships\n  FOR SELECT USING (true);\n\n-- TRIP_TALENT table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON trip_talent;\nDROP POLICY IF EXISTS \\"Public read access\\" ON trip_talent;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON trip_talent;\n\nCREATE POLICY \\"Service role bypass\\" ON trip_talent\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON trip_talent\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON trip_talent\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON trip_talent\n  FOR SELECT USING (true);\n\n-- TRIP_INFO_SECTIONS table\nDROP POLICY IF EXISTS \\"Admin full access\\" ON trip_info_sections;\nDROP POLICY IF EXISTS \\"Public read access\\" ON trip_info_sections;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON trip_info_sections;\n\nCREATE POLICY \\"Service role bypass\\" ON trip_info_sections\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON trip_info_sections\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON trip_info_sections\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON trip_info_sections\n  FOR SELECT USING (true);\n\n-- =========================================\n-- 3. INVITATIONS TABLE - Admin only\n-- =========================================\n\n-- First enable RLS if not already enabled\nALTER TABLE invitations ENABLE ROW LEVEL SECURITY;\n\n-- Drop any existing policies\nDROP POLICY IF EXISTS \\"Admin full access\\" ON invitations;\nDROP POLICY IF EXISTS \\"Public read access\\" ON invitations;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON invitations;\n\n-- Create admin-only policies\nCREATE POLICY \\"Service role bypass\\" ON invitations\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON invitations\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\n-- No public or content manager access to invitations\n\n-- =========================================\n-- 4. OTHER TABLES (read-only reference tables)\n-- =========================================\n\n-- TALENT_CATEGORIES table\nALTER TABLE talent_categories ENABLE ROW LEVEL SECURITY;\n\nDROP POLICY IF EXISTS \\"Admin full access\\" ON talent_categories;\nDROP POLICY IF EXISTS \\"Public read access\\" ON talent_categories;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON talent_categories;\n\nCREATE POLICY \\"Service role bypass\\" ON talent_categories\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON talent_categories\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager full access\\" ON talent_categories\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON talent_categories\n  FOR SELECT USING (true);\n\n-- LOCATION_TYPES table\nALTER TABLE location_types ENABLE ROW LEVEL SECURITY;\n\nDROP POLICY IF EXISTS \\"Admin full access\\" ON location_types;\nDROP POLICY IF EXISTS \\"Public read access\\" ON location_types;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON location_types;\n\nCREATE POLICY \\"Service role bypass\\" ON location_types\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON location_types\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON location_types\n  FOR SELECT USING (true);\n\n-- TRIP_TYPES table\nALTER TABLE trip_types ENABLE ROW LEVEL SECURITY;\n\nDROP POLICY IF EXISTS \\"Admin full access\\" ON trip_types;\nDROP POLICY IF EXISTS \\"Public read access\\" ON trip_types;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON trip_types;\n\nCREATE POLICY \\"Service role bypass\\" ON trip_types\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON trip_types\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON trip_types\n  FOR SELECT USING (true);\n\n-- TRIP_STATUS table\nALTER TABLE trip_status ENABLE ROW LEVEL SECURITY;\n\nDROP POLICY IF EXISTS \\"Admin full access\\" ON trip_status;\nDROP POLICY IF EXISTS \\"Public read access\\" ON trip_status;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON trip_status;\n\nCREATE POLICY \\"Service role bypass\\" ON trip_status\n  FOR ALL USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON trip_status\n  FOR ALL TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n        AND profiles.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON trip_status\n  FOR SELECT USING (true);"}	fix_rls_permission_hierarchy_v2	bryhearnchi@gmail.com	\N
20250921071704	{"-- Clean up duplicate and conflicting policies\n\n-- Remove old/duplicate policies on profiles\nDROP POLICY IF EXISTS \\"Admin full access\\" ON profiles;\nDROP POLICY IF EXISTS \\"Content manager read access\\" ON profiles;\nDROP POLICY IF EXISTS \\"Public read access\\" ON profiles;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users insert own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users update own profile\\" ON profiles;\n\n-- Remove old/duplicate policies on invitations\nDROP POLICY IF EXISTS \\"Admin full access\\" ON invitations;\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON invitations;\n\n-- Verify check constraint\nALTER TABLE profiles DROP CONSTRAINT IF EXISTS valid_role;\nALTER TABLE profiles ADD CONSTRAINT valid_role \n  CHECK (role IS NULL OR role IN ('user', 'admin', 'content_manager'));"}	cleanup_duplicate_policies	bryhearnchi@gmail.com	\N
20250921071716	{"-- Cleanup duplicate and old policies\n\n-- =========================================\n-- PROFILES TABLE - Remove old policies\n-- =========================================\nDROP POLICY IF EXISTS \\"Service role bypass profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Admins can manage all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Anyone can view profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can create own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile except role\\" ON profiles;\n\n-- =========================================\n-- INVITATIONS TABLE - Remove old policies\n-- =========================================\nDROP POLICY IF EXISTS \\"Admins can delete invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can update invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can create invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can view invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Service role bypass invitations\\" ON invitations;"}	cleanup_duplicate_policies	bryhearnchi@gmail.com	\N
20250921071722	{"-- Fix search_path security warnings for all functions\n\n-- Fix log_role_changes function\nCREATE OR REPLACE FUNCTION log_role_changes()\nRETURNS TRIGGER \nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  IF OLD.role IS DISTINCT FROM NEW.role THEN\n    INSERT INTO security_audit_log (\n      user_id,\n      action,\n      table_name,\n      record_id,\n      old_data,\n      new_data\n    ) VALUES (\n      auth.uid(),\n      'ROLE_CHANGE',\n      'profiles',\n      NEW.id::TEXT,\n      jsonb_build_object('role', OLD.role),\n      jsonb_build_object('role', NEW.role)\n    );\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Fix update_user_role function\nCREATE OR REPLACE FUNCTION update_user_role(\n  target_user_id UUID,\n  new_role TEXT\n)\nRETURNS VOID\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  -- Check if current user is admin\n  IF NOT EXISTS (\n    SELECT 1 FROM profiles \n    WHERE id = auth.uid() \n    AND role = 'admin'\n  ) THEN\n    RAISE EXCEPTION 'Only admins can update user roles';\n  END IF;\n\n  -- Validate new role\n  IF new_role NOT IN ('user', 'admin', 'content_manager') THEN\n    RAISE EXCEPTION 'Invalid role: %', new_role;\n  END IF;\n\n  -- Update the role\n  UPDATE profiles \n  SET role = new_role,\n      updated_at = NOW()\n  WHERE id = target_user_id;\n  \n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'User not found';\n  END IF;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Fix redirect_ports_insert if it exists\nDO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'redirect_ports_insert') THEN\n    CREATE OR REPLACE FUNCTION redirect_ports_insert()\n    RETURNS TRIGGER\n    SECURITY DEFINER\n    SET search_path = public\n    AS $func$\n    BEGIN\n      RETURN NEW;\n    END;\n    $func$ LANGUAGE plpgsql;\n  END IF;\nEND $$;\n\n-- Fix redirect_ports_update if it exists\nDO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'redirect_ports_update') THEN\n    CREATE OR REPLACE FUNCTION redirect_ports_update()\n    RETURNS TRIGGER\n    SECURITY DEFINER\n    SET search_path = public\n    AS $func$\n    BEGIN\n      RETURN NEW;\n    END;\n    $func$ LANGUAGE plpgsql;\n  END IF;\nEND $$;\n\n-- Fix redirect_ports_delete if it exists  \nDO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'redirect_ports_delete') THEN\n    CREATE OR REPLACE FUNCTION redirect_ports_delete()\n    RETURNS TRIGGER\n    SECURITY DEFINER\n    SET search_path = public\n    AS $func$\n    BEGIN\n      RETURN OLD;\n    END;\n    $func$ LANGUAGE plpgsql;\n  END IF;\nEND $$;"}	fix_function_search_paths	bryhearnchi@gmail.com	\N
20250921071751	{"-- ============================================\n-- RECREATE CRITICAL SECURITY POLICIES\n-- Profiles and Invitations tables need policies\n-- ============================================\n\n-- PROFILES TABLE POLICIES\n-- 1. Anyone can view profiles (for user listings)\nCREATE POLICY \\"Anyone can view profiles\\"\n  ON profiles FOR SELECT\n  USING (true);\n\n-- 2. Users can create their own profile (but NOT set admin role)\nCREATE POLICY \\"Users can create own profile\\"\n  ON profiles FOR INSERT\n  WITH CHECK (\n    id = auth.uid() \n    AND (role IS NULL OR role = 'user') -- Prevent setting admin/content_manager role on creation\n  );\n\n-- 3. Users can update their own profile EXCEPT role field\nCREATE POLICY \\"Users can update own profile except role\\"\n  ON profiles FOR UPDATE\n  USING (id = auth.uid())\n  WITH CHECK (\n    id = auth.uid()\n    AND (\n      -- Role must not change OR user must be admin\n      role = (SELECT role FROM profiles WHERE id = auth.uid())\n      OR \n      EXISTS (\n        SELECT 1 FROM profiles \n        WHERE id = auth.uid() \n        AND role = 'admin'\n      )\n    )\n  );\n\n-- 4. Admins can manage all profiles (including role changes)\nCREATE POLICY \\"Admins can manage all profiles\\"\n  ON profiles FOR ALL\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- 5. Service role bypass for profiles\nCREATE POLICY \\"Service role bypass profiles\\"\n  ON profiles FOR ALL\n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\n-- INVITATIONS TABLE POLICIES\n-- 1. Admins can view all invitations\nCREATE POLICY \\"Admins can view invitations\\"\n  ON invitations FOR SELECT\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- 2. Admins can create invitations\nCREATE POLICY \\"Admins can create invitations\\"\n  ON invitations FOR INSERT\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- 3. Admins can update invitations\nCREATE POLICY \\"Admins can update invitations\\"\n  ON invitations FOR UPDATE\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- 4. Admins can delete invitations\nCREATE POLICY \\"Admins can delete invitations\\"\n  ON invitations FOR DELETE\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE id = auth.uid() \n      AND role = 'admin'\n    )\n  );\n\n-- 5. Service role bypass for invitations\nCREATE POLICY \\"Service role bypass invitations\\"\n  ON invitations FOR ALL\n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');"}	recreate_critical_security_policies	bryhearnchi@gmail.com	\N
20250921071810	{"-- Force fix profiles and invitations RLS policies\n-- Disable and re-enable RLS to ensure clean state\n\n-- =========================================\n-- PROFILES TABLE - Complete Reset\n-- =========================================\nALTER TABLE profiles DISABLE ROW LEVEL SECURITY;\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\n\n-- Create correct policies for profiles\nCREATE POLICY \\"Service role bypass\\" ON profiles\n  FOR ALL \n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON profiles\n  FOR ALL \n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n        AND p.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n        AND p.role = 'admin'\n    )\n  );\n\nCREATE POLICY \\"Content manager read access\\" ON profiles\n  FOR SELECT \n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n        AND p.role = 'content_manager'\n    )\n  );\n\nCREATE POLICY \\"Public read access\\" ON profiles\n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Users update own profile\\" ON profiles\n  FOR UPDATE \n  TO authenticated\n  USING (id = auth.uid())\n  WITH CHECK (\n    id = auth.uid() \n    -- Prevent non-admins from changing roles\n    AND (\n      (role IS NOT DISTINCT FROM (SELECT role FROM profiles WHERE id = auth.uid()))\n      OR EXISTS (\n        SELECT 1 FROM profiles p\n        WHERE p.id = auth.uid() \n          AND p.role = 'admin'\n      )\n    )\n  );\n\nCREATE POLICY \\"Users insert own profile\\" ON profiles\n  FOR INSERT \n  TO authenticated\n  WITH CHECK (\n    id = auth.uid() \n    -- New users cannot assign themselves admin or content_manager roles\n    AND (role IS NULL OR role NOT IN ('admin', 'content_manager'))\n  );\n\n-- =========================================\n-- INVITATIONS TABLE - Complete Reset  \n-- =========================================\nALTER TABLE invitations DISABLE ROW LEVEL SECURITY;\nALTER TABLE invitations ENABLE ROW LEVEL SECURITY;\n\n-- Create admin-only policies\nCREATE POLICY \\"Service role bypass\\" ON invitations\n  FOR ALL \n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\nCREATE POLICY \\"Admin full access\\" ON invitations\n  FOR ALL \n  TO authenticated\n  USING (\n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n        AND p.role = 'admin'\n    )\n  )\n  WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n        AND p.role = 'admin'\n    )\n  );\n\n-- No other access to invitations table"}	force_fix_profiles_invitations_policies	bryhearnchi@gmail.com	\N
20250921071836	{"-- Final cleanup of all duplicate policies\n\n-- =========================================\n-- PROFILES TABLE - Remove ALL old policies first\n-- =========================================\nDROP POLICY IF EXISTS \\"Service role bypass profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Admins can manage all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Anyone can view profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can create own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile except role\\" ON profiles;\n\n-- =========================================\n-- INVITATIONS TABLE - Remove ALL old policies first\n-- =========================================\nDROP POLICY IF EXISTS \\"Admins can delete invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can update invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can create invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Admins can view invitations\\" ON invitations;\nDROP POLICY IF EXISTS \\"Service role bypass invitations\\" ON invitations;\n\n-- Verify the remaining policies are correct\nDO $$\nBEGIN\n    -- Check if we have the correct number of policies\n    RAISE NOTICE 'Profiles table now has % policies', (\n        SELECT COUNT(*) FROM pg_policies \n        WHERE schemaname = 'public' AND tablename = 'profiles'\n    );\n    \n    RAISE NOTICE 'Invitations table now has % policies', (\n        SELECT COUNT(*) FROM pg_policies \n        WHERE schemaname = 'public' AND tablename = 'invitations'\n    );\nEND $$;"}	final_cleanup_duplicate_policies	bryhearnchi@gmail.com	\N
20250921071841	{"-- Remove only duplicate service role policies\n\n-- Remove duplicate service role policies on profiles\nDROP POLICY IF EXISTS \\"Service role bypass\\" ON profiles;\n\n-- Remove duplicate service role policies on invitations  \nDROP POLICY IF EXISTS \\"Service role bypass\\" ON invitations;"}	remove_duplicate_policies_only	bryhearnchi@gmail.com	\N
20250921071909	{"-- Add missing service role bypass policies\n\n-- Check and add service role bypass for profiles if it doesn't exist\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies \n        WHERE schemaname = 'public' \n        AND tablename = 'profiles' \n        AND policyname = 'Service role bypass'\n    ) THEN\n        CREATE POLICY \\"Service role bypass\\" ON profiles\n            FOR ALL \n            USING (auth.role() = 'service_role')\n            WITH CHECK (auth.role() = 'service_role');\n        RAISE NOTICE 'Added Service role bypass policy to profiles table';\n    ELSE\n        RAISE NOTICE 'Service role bypass policy already exists on profiles table';\n    END IF;\nEND $$;\n\n-- Check and add service role bypass for invitations if it doesn't exist\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM pg_policies \n        WHERE schemaname = 'public' \n        AND tablename = 'invitations' \n        AND policyname = 'Service role bypass'\n    ) THEN\n        CREATE POLICY \\"Service role bypass\\" ON invitations\n            FOR ALL \n            USING (auth.role() = 'service_role')\n            WITH CHECK (auth.role() = 'service_role');\n        RAISE NOTICE 'Added Service role bypass policy to invitations table';\n    ELSE\n        RAISE NOTICE 'Service role bypass policy already exists on invitations table';\n    END IF;\nEND $$;"}	add_missing_service_role_policies	bryhearnchi@gmail.com	\N
20250921072620	{"-- Grant necessary permissions to service_role for admin operations\n-- This allows the service role to bypass RLS and perform admin operations\n\n-- Grant usage and create on public schema\nGRANT USAGE ON SCHEMA public TO service_role;\nGRANT CREATE ON SCHEMA public TO service_role;\n\n-- Grant all privileges on all tables in public schema\nGRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO service_role;\n\n-- Grant all privileges on all sequences in public schema  \nGRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO service_role;\n\n-- Ensure service_role can create and modify tables (for future operations)\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO service_role;\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;"}	grant_service_role_permissions	bryhearnchi@gmail.com	\N
20250921074435	{"-- Fix the ports view INSTEAD OF INSERT trigger to properly insert and return the row with ID\n\n-- First, drop the existing function\nDROP FUNCTION IF EXISTS redirect_ports_insert() CASCADE;\n\n-- Create the corrected INSERT trigger function\nCREATE OR REPLACE FUNCTION redirect_ports_insert()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nDECLARE\n    inserted_row locations%ROWTYPE;\nBEGIN\n    -- Insert into the locations table\n    INSERT INTO locations (\n        name,\n        country,\n        coordinates,\n        description,\n        image_url\n    ) VALUES (\n        NEW.name,\n        NEW.country,\n        NEW.coordinates,\n        NEW.description,\n        NEW.image_url\n    ) RETURNING * INTO inserted_row;\n    \n    -- Return the complete inserted row with the generated ID\n    RETURN inserted_row;\nEND;\n$function$;\n\n-- Recreate the INSTEAD OF INSERT trigger\nCREATE TRIGGER ports_insert_trigger\n    INSTEAD OF INSERT ON ports\n    FOR EACH ROW\n    EXECUTE FUNCTION redirect_ports_insert();\n\n-- Fix the UPDATE trigger function as well to ensure it properly handles updates\nCREATE OR REPLACE FUNCTION redirect_ports_update()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nDECLARE\n    updated_row locations%ROWTYPE;\nBEGIN\n    -- Update the locations table\n    UPDATE locations \n    SET \n        name = NEW.name,\n        country = NEW.country,\n        coordinates = NEW.coordinates,\n        description = NEW.description,\n        image_url = NEW.image_url,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE id = NEW.id\n    RETURNING * INTO updated_row;\n    \n    -- Return the updated row\n    RETURN updated_row;\nEND;\n$function$;\n\n-- Fix the DELETE trigger function as well\nCREATE OR REPLACE FUNCTION redirect_ports_delete()\nRETURNS TRIGGER\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nBEGIN\n    -- Delete from the locations table\n    DELETE FROM locations WHERE id = OLD.id;\n    \n    -- Return the deleted row\n    RETURN OLD;\nEND;\n$function$;"}	fix_ports_view_insert_trigger	bryhearnchi@gmail.com	\N
20250921074440	{"-- Fix the INSERT trigger function to properly insert into locations and return the new row with ID\nCREATE OR REPLACE FUNCTION public.redirect_ports_insert()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nDECLARE\n    inserted_row locations%ROWTYPE;\nBEGIN\n    -- Insert into the underlying locations table\n    INSERT INTO locations (\n        name,\n        country,\n        coordinates,\n        description,\n        image_url,\n        created_at,\n        updated_at\n    ) VALUES (\n        NEW.name,\n        NEW.country,\n        NEW.coordinates,\n        NEW.description,\n        NEW.image_url,\n        COALESCE(NEW.created_at, NOW()),\n        COALESCE(NEW.updated_at, NOW())\n    )\n    RETURNING * INTO inserted_row;\n    \n    -- Return the inserted row with the generated ID\n    NEW.id := inserted_row.id;\n    NEW.created_at := inserted_row.created_at;\n    NEW.updated_at := inserted_row.updated_at;\n    \n    RETURN NEW;\nEND;\n$function$;\n\n-- Fix the UPDATE trigger function to properly update locations\nCREATE OR REPLACE FUNCTION public.redirect_ports_update()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nBEGIN\n    -- Update the underlying locations table\n    UPDATE locations\n    SET\n        name = NEW.name,\n        country = NEW.country,\n        coordinates = NEW.coordinates,\n        description = NEW.description,\n        image_url = NEW.image_url,\n        updated_at = NOW()\n    WHERE id = OLD.id;\n    \n    -- Set the updated_at timestamp\n    NEW.updated_at := NOW();\n    \n    RETURN NEW;\nEND;\n$function$;\n\n-- Fix the DELETE trigger function to properly delete from locations\nCREATE OR REPLACE FUNCTION public.redirect_ports_delete()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nBEGIN\n    -- Delete from the underlying locations table\n    DELETE FROM locations\n    WHERE id = OLD.id;\n    \n    RETURN OLD;\nEND;\n$function$;"}	fix_ports_view_triggers	bryhearnchi@gmail.com	\N
20250921075129	{"-- Remove obsolete ports view and its associated trigger functions\n-- The ports view was created for backward compatibility but is no longer needed\n-- The application should use the locations table directly\n\n-- Drop the view first (CASCADE will also drop any dependent objects like triggers)\nDROP VIEW IF EXISTS public.ports CASCADE;\n\n-- Drop the redirect functions that were used for the view's triggers\nDROP FUNCTION IF EXISTS public.redirect_ports_insert() CASCADE;\nDROP FUNCTION IF EXISTS public.redirect_ports_update() CASCADE;\nDROP FUNCTION IF EXISTS public.redirect_ports_delete() CASCADE;\n\n-- Add a comment to document this change\nCOMMENT ON TABLE public.locations IS 'Primary table for storing all location data (ports, destinations, etc). Replaces the obsolete ports view.';"}	remove_obsolete_ports_view	bryhearnchi@gmail.com	\N
20250922124502	{"-- Fix profiles table infinite recursion\nDROP POLICY IF EXISTS \\"Profiles viewable by all\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\n\n-- Recreate without circular references\nCREATE POLICY \\"Profiles viewable by all\\" ON profiles\n  FOR SELECT USING (true);\n\nCREATE POLICY \\"Users can update own profile\\" ON profiles\n  FOR UPDATE USING (\n    auth.uid() IS NOT NULL AND auth.uid() = id\n  );\n\n-- Create a separate policy for admin users to update any profile\nCREATE POLICY \\"Admins can update any profile\\" ON profiles\n  FOR UPDATE USING (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles p\n      WHERE p.id = auth.uid() \n      AND p.role IN ('admin', 'super_admin')\n    )\n  );\n\n-- Ensure anonymous read on locations\nDROP POLICY IF EXISTS \\"Locations viewable by all\\" ON locations;\nCREATE POLICY \\"Locations viewable by all\\" ON locations\n  FOR SELECT USING (true);\n\n-- Ensure anonymous read on trips  \nDROP POLICY IF EXISTS \\"Trips viewable by all\\" ON trips;\nCREATE POLICY \\"Trips viewable by all\\" ON trips\n  FOR SELECT USING (true);\n\n-- Add admin policies for locations\nCREATE POLICY \\"Admins can insert locations\\" ON locations\n  FOR INSERT WITH CHECK (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );\n\nCREATE POLICY \\"Admins can update locations\\" ON locations\n  FOR UPDATE USING (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );\n\nCREATE POLICY \\"Admins can delete locations\\" ON locations\n  FOR DELETE USING (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );\n\n-- Add admin policies for trips\nCREATE POLICY \\"Admins can insert trips\\" ON trips\n  FOR INSERT WITH CHECK (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );\n\nCREATE POLICY \\"Admins can update trips\\" ON trips\n  FOR UPDATE USING (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );\n\nCREATE POLICY \\"Admins can delete trips\\" ON trips\n  FOR DELETE USING (\n    auth.uid() IS NOT NULL AND \n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'super_admin')\n    )\n  );"}	fix_rls_infinite_recursion_and_anonymous_access	bryhearnchi@gmail.com	\N
20250922125650	{"-- Rename itinerary columns for consistency with locations terminology\nALTER TABLE itinerary \n  RENAME COLUMN port_name TO location_name;\n\nALTER TABLE itinerary \n  RENAME COLUMN port_image_url TO location_image_url;"}	rename_itinerary_port_columns	bryhearnchi@gmail.com	\N
20250922010003	{"-- Fix anonymous access for locations and trips tables\n-- Drop existing policies that might be blocking access\nDROP POLICY IF EXISTS \\"Locations viewable by all\\" ON locations;\nDROP POLICY IF EXISTS \\"Trips viewable by all\\" ON trips;\n\n-- Create simple, permissive SELECT policies for anonymous users\nCREATE POLICY \\"Enable read access for all users\\" ON locations\n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Enable read access for all users\\" ON trips\n  FOR SELECT \n  USING (true);\n\n-- Ensure admin policies exist for modifications\nDROP POLICY IF EXISTS \\"Admin users can manage locations\\" ON locations;\nCREATE POLICY \\"Admin users can manage locations\\" ON locations\n  FOR ALL \n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role = 'admin'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Admin users can manage trips\\" ON trips;  \nCREATE POLICY \\"Admin users can manage trips\\" ON trips\n  FOR ALL \n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role = 'admin'\n    )\n  );"}	fix_anonymous_access_policies	bryhearnchi@gmail.com	\N
20250922010039	{"-- Clean up all existing policies on locations and trips\n-- Drop ALL policies first to avoid conflicts\nDO $$ \nBEGIN\n  -- Drop all policies on locations\n  DROP POLICY IF EXISTS \\"Enable read access for all users\\" ON locations;\n  DROP POLICY IF EXISTS \\"Admin users can manage locations\\" ON locations;\n  DROP POLICY IF EXISTS \\"Public read access\\" ON locations;\n  DROP POLICY IF EXISTS \\"Admins can insert locations\\" ON locations;\n  DROP POLICY IF EXISTS \\"Admins can update locations\\" ON locations;\n  DROP POLICY IF EXISTS \\"Admins can delete locations\\" ON locations;\n  DROP POLICY IF EXISTS \\"Service role bypass\\" ON locations;\n  DROP POLICY IF EXISTS \\"Admin full access\\" ON locations;\n  DROP POLICY IF EXISTS \\"Content manager full access\\" ON locations;\n  \n  -- Drop all policies on trips\n  DROP POLICY IF EXISTS \\"Enable read access for all users\\" ON trips;\n  DROP POLICY IF EXISTS \\"Admin users can manage trips\\" ON trips;\n  DROP POLICY IF EXISTS \\"Public read access\\" ON trips;\n  DROP POLICY IF EXISTS \\"Admins can insert trips\\" ON trips;\n  DROP POLICY IF EXISTS \\"Admins can update trips\\" ON trips;\n  DROP POLICY IF EXISTS \\"Admins can delete trips\\" ON trips;\n  DROP POLICY IF EXISTS \\"Service role bypass\\" ON trips;\n  DROP POLICY IF EXISTS \\"Admin full access\\" ON trips;\n  DROP POLICY IF EXISTS \\"Content manager full access\\" ON trips;\nEND $$;\n\n-- Create clean, simple policies for locations\nCREATE POLICY \\"public_read_locations\\" ON locations\n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"admin_write_locations\\" ON locations\n  FOR INSERT \n  WITH CHECK (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"admin_update_locations\\" ON locations\n  FOR UPDATE\n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"admin_delete_locations\\" ON locations\n  FOR DELETE\n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role = 'admin'\n    )\n  );\n\n-- Create clean, simple policies for trips  \nCREATE POLICY \\"public_read_trips\\" ON trips\n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"admin_write_trips\\" ON trips\n  FOR INSERT \n  WITH CHECK (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"admin_update_trips\\" ON trips\n  FOR UPDATE\n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role IN ('admin', 'content_manager')\n    )\n  );\n\nCREATE POLICY \\"admin_delete_trips\\" ON trips\n  FOR DELETE\n  USING (\n    auth.uid() IS NOT NULL AND\n    EXISTS (\n      SELECT 1 FROM profiles \n      WHERE profiles.id = auth.uid() \n      AND profiles.role = 'admin'\n    )\n  );"}	cleanup_rls_policies_for_locations_and_trips	bryhearnchi@gmail.com	\N
20250922015827	{"-- Drop the existing trigger to replace it\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;\n\n-- Create or replace the function with better error handling\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger AS $$\nBEGIN\n  -- Insert into profiles table, ignore if already exists\n  INSERT INTO public.profiles (\n    id,\n    email,\n    full_name,\n    username,\n    role,\n    is_active,\n    account_status,\n    created_at,\n    updated_at\n  )\n  VALUES (\n    NEW.id,\n    NEW.email,\n    COALESCE(NEW.raw_user_meta_data->>'full_name', ''),\n    COALESCE(NEW.raw_user_meta_data->>'username', NULL),\n    COALESCE(NEW.raw_user_meta_data->>'role', 'user'),\n    true,\n    'active',\n    NOW(),\n    NOW()\n  )\n  ON CONFLICT (id) DO NOTHING;\n  \n  RETURN NEW;\nEXCEPTION\n  WHEN OTHERS THEN\n    -- Log error but don't fail the user creation\n    RAISE WARNING 'Failed to create profile for user %: %', NEW.id, SQLERRM;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Recreate the trigger\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT ON auth.users\n  FOR EACH ROW \n  EXECUTE FUNCTION public.handle_new_user();"}	fix_user_creation_trigger	bryhearnchi@gmail.com	\N
20250922020652	{"-- Drop the old constraint that doesn't include 'viewer'\nALTER TABLE profiles DROP CONSTRAINT IF EXISTS valid_role;\n\n-- Add the updated constraint that includes 'viewer' as a valid role\nALTER TABLE profiles ADD CONSTRAINT valid_role \nCHECK ((role IS NULL) OR (role = ANY (ARRAY['user'::text, 'admin'::text, 'content_manager'::text, 'viewer'::text])));"}	update_valid_role_constraint_add_viewer	bryhearnchi@gmail.com	\N
20250922021021	{"-- Drop the problematic constraint that doesn't include 'user'\nALTER TABLE profiles DROP CONSTRAINT IF EXISTS profiles_role_check;\n\n-- The valid_role constraint is already correct and allows: NULL, 'user', 'admin', 'content_manager', 'viewer'\n-- So we just need to remove the conflicting constraint"}	fix_profiles_role_constraints	bryhearnchi@gmail.com	\N
20250922085153	{"-- Drop constraint that holds the duplicate index, then drop any leftover duplicate index\nDO $$\nBEGIN\n  IF EXISTS (\n    SELECT 1 FROM pg_constraint c\n    JOIN pg_class t ON t.oid = c.conrelid\n    JOIN pg_namespace n ON n.oid = t.relnamespace\n    WHERE n.nspname = 'public' AND t.relname = 'locations' AND c.conname = 'ports_name_key'\n  ) THEN\n    EXECUTE 'ALTER TABLE public.locations DROP CONSTRAINT ports_name_key';\n  END IF;\nEND $$;\n\n-- Try to drop now-redundant index if it exists (safe no-op if gone)\nDROP INDEX IF EXISTS public.ports_name_key;\n\n-- Talent duplicate index cleanup (safe no-op if one already removed)\nDROP INDEX IF EXISTS public.talent_talent_category_id_idx;"}	auth_security_hardening_phase1_fix_indexes	bryhearnchi@gmail.com	\N
20250922090007	{"-- Replace auth.role() with (select auth.role())\nDO $$\nDECLARE r RECORD;\nBEGIN\n  FOR r IN SELECT schemaname, tablename, policyname, cmd, qual::text AS using_raw, with_check::text AS with_check_raw FROM pg_policies WHERE schemaname='public' LOOP\n    IF r.using_raw IS NOT NULL AND r.using_raw LIKE '%auth.role()%'\n    THEN\n      EXECUTE format('ALTER POLICY %I ON %I.%I USING (%s)', r.policyname, r.schemaname, r.tablename, replace(r.using_raw, 'auth.role()', '(select auth.role())'));\n    END IF;\n    IF r.with_check_raw IS NOT NULL AND r.with_check_raw LIKE '%auth.role()%'\n    THEN\n      EXECUTE format('ALTER POLICY %I ON %I.%I WITH CHECK (%s)', r.policyname, r.schemaname, r.tablename, replace(r.with_check_raw, 'auth.role()', '(select auth.role())'));\n    END IF;\n  END LOOP;\nEND $$;"}	rls_hygiene_phase2_wrap_auth_calls	bryhearnchi@gmail.com	\N
20250923093502	{"-- Migration: Rename cruise terminology to trip terminology\n-- This migration is safe and can be run on production without data loss\n\n-- 1. Rename column cruise_updates_opt_in to trip_updates_opt_in in profiles table\nALTER TABLE profiles\nRENAME COLUMN cruise_updates_opt_in TO trip_updates_opt_in;\n\n-- 2. Rename index cruise_talent_talent_idx to trip_talent_talent_idx\n-- First, drop the old index if it exists\nDROP INDEX IF EXISTS cruise_talent_talent_idx;\n\n-- Create the new index with the correct name\nCREATE INDEX IF NOT EXISTS trip_talent_talent_idx\nON trip_talent (talent_id);\n\n-- Add a comment to document the change\nCOMMENT ON COLUMN profiles.trip_updates_opt_in IS 'Whether the user has opted in to receive trip-related updates';"}	rename_cruise_to_trip_terminology	bryhearnchi@gmail.com	\N
20250923095159	{"-- Migration: Add performance indexes for optimized queries (Corrected)\n-- Date: 2025-01-23\n-- Purpose: Phase 6 - Add missing indexes to improve query performance\n\n-- ============================================\n-- TRIPS TABLE INDEXES\n-- ============================================\n\n-- Unique index on slug for fast lookups (already exists but ensure it's there)\nCREATE UNIQUE INDEX IF NOT EXISTS idx_trips_slug ON trips(slug);\n\n-- Index on status for filtering\nCREATE INDEX IF NOT EXISTS idx_trips_status ON trips(status);\n\n-- Index on dates for time-based queries\nCREATE INDEX IF NOT EXISTS idx_trips_start_date ON trips(start_date);\nCREATE INDEX IF NOT EXISTS idx_trips_end_date ON trips(end_date);\n\n-- Composite index for status + dates (common query pattern)\nCREATE INDEX IF NOT EXISTS idx_trips_status_dates ON trips(status, start_date, end_date);\n\n-- ============================================\n-- EVENTS TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_events_trip_id ON events(trip_id);\n\n-- Index on type for filtering\nCREATE INDEX IF NOT EXISTS idx_events_type ON events(type);\n\n-- Index on date for time-based queries\nCREATE INDEX IF NOT EXISTS idx_events_date ON events(date);\n\n-- Composite index for trip + date (common query pattern)\nCREATE INDEX IF NOT EXISTS idx_events_trip_date ON events(trip_id, date, time);\n\n-- ============================================\n-- ITINERARY TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_itinerary_trip_id ON itinerary(trip_id);\n\n-- Index on order_index for sorting\nCREATE INDEX IF NOT EXISTS idx_itinerary_order ON itinerary(trip_id, order_index);\n\n-- Index on location_id for joins\nCREATE INDEX IF NOT EXISTS idx_itinerary_location_id ON itinerary(location_id);\n\n-- Index on location_type_id for filtering\nCREATE INDEX IF NOT EXISTS idx_itinerary_location_type_id ON itinerary(location_type_id);\n\n-- ============================================\n-- LOCATIONS TABLE INDEXES\n-- ============================================\n\n-- Index on country for filtering\nCREATE INDEX IF NOT EXISTS idx_locations_country ON locations(country);\n\n-- Index on name for search\nCREATE INDEX IF NOT EXISTS idx_locations_name ON locations(name);\n\n-- ============================================\n-- TALENT TABLE INDEXES\n-- ============================================\n\n-- Index on name for search queries\nCREATE INDEX IF NOT EXISTS idx_talent_name ON talent(name);\n\n-- Index on talent_category_id for filtering\nCREATE INDEX IF NOT EXISTS idx_talent_category_id ON talent(talent_category_id);\n\n-- Full text search index for talent bio and known_for\nCREATE INDEX IF NOT EXISTS idx_talent_search\nON talent USING gin(to_tsvector('english', coalesce(bio, '') || ' ' || coalesce(known_for, '')));\n\n-- ============================================\n-- TRIP_TALENT JUNCTION TABLE INDEXES\n-- ============================================\n\n-- Composite index for many-to-many lookups\nCREATE INDEX IF NOT EXISTS idx_trip_talent_composite ON trip_talent(trip_id, talent_id);\n\n-- Reverse index for talent lookups\nCREATE INDEX IF NOT EXISTS idx_trip_talent_reverse ON trip_talent(talent_id, trip_id);\n\n-- ============================================\n-- TRIP_INFO_SECTIONS TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_trip_info_sections_trip_id ON trip_info_sections(trip_id);\n\n-- Index on order_index for sorting\nCREATE INDEX IF NOT EXISTS idx_trip_info_sections_order ON trip_info_sections(trip_id, order_index);\n\n-- ============================================\n-- PROFILES TABLE INDEXES (Supabase Auth)\n-- ============================================\n\n-- Unique index on email for lookups (already exists but ensure it's there)\nCREATE UNIQUE INDEX IF NOT EXISTS idx_profiles_email ON profiles(email);\n\n-- Index on role for filtering\nCREATE INDEX IF NOT EXISTS idx_profiles_role ON profiles(role);\n\n-- Index on account_status for filtering\nCREATE INDEX IF NOT EXISTS idx_profiles_account_status ON profiles(account_status);\n\n-- Index on is_active for filtering\nCREATE INDEX IF NOT EXISTS idx_profiles_is_active ON profiles(is_active);\n\n-- ============================================\n-- SHIPS TABLE INDEXES\n-- ============================================\n\n-- Index on name for lookups\nCREATE INDEX IF NOT EXISTS idx_ships_name ON ships(name);\n\n-- Index on cruise_line for filtering\nCREATE INDEX IF NOT EXISTS idx_ships_cruise_line ON ships(cruise_line);\n\n-- ============================================\n-- PARTY_THEMES TABLE INDEXES\n-- ============================================\n\n-- Unique index on name for lookups (already exists but ensure it's there)\nCREATE UNIQUE INDEX IF NOT EXISTS idx_party_themes_name ON party_themes(name);\n\n-- ============================================\n-- ANALYZE TABLES FOR QUERY PLANNER\n-- ============================================\n\n-- Update statistics for query planner optimization\nANALYZE trips;\nANALYZE events;\nANALYZE itinerary;\nANALYZE locations;\nANALYZE talent;\nANALYZE trip_talent;\nANALYZE trip_info_sections;\nANALYZE profiles;\nANALYZE ships;\nANALYZE party_themes;\n\n-- ============================================\n-- MIGRATION COMPLETE\n-- ============================================\n\n-- Add comment to track migration\nCOMMENT ON SCHEMA public IS 'Phase 6 performance indexes applied (corrected) - 2025-01-23';"}	add_performance_indexes_corrected	bryhearnchi@gmail.com	\N
20250923101734	{"-- Migration: Add performance indexes for optimized queries (Corrected)\n-- Date: 2025-01-23\n-- Purpose: Phase 6 - Add missing indexes to improve query performance\n\n-- ============================================\n-- TRIPS TABLE INDEXES\n-- ============================================\n\n-- Unique index on slug for fast lookups (column exists)\nCREATE UNIQUE INDEX IF NOT EXISTS idx_trips_slug\nON trips(slug);\n\n-- Index on status for filtering\nCREATE INDEX IF NOT EXISTS idx_trips_status\nON trips(status);\n\n-- Index on dates for time-based queries\nCREATE INDEX IF NOT EXISTS idx_trips_start_date\nON trips(start_date);\n\nCREATE INDEX IF NOT EXISTS idx_trips_end_date\nON trips(end_date);\n\n-- Composite index for status + dates (common query pattern)\nCREATE INDEX IF NOT EXISTS idx_trips_status_dates\nON trips(status, start_date, end_date);\n\n-- ============================================\n-- EVENTS TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_events_trip_id\nON events(trip_id);\n\n-- Index on type for filtering\nCREATE INDEX IF NOT EXISTS idx_events_type\nON events(type);\n\n-- Index on date for time-based queries\nCREATE INDEX IF NOT EXISTS idx_events_date\nON events(date);\n\n-- Composite index for trip + date (common query pattern)\nCREATE INDEX IF NOT EXISTS idx_events_trip_date\nON events(trip_id, date, time);\n\n-- ============================================\n-- ITINERARY TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_itinerary_trip_id\nON itinerary(trip_id);\n\n-- Index on order_index for sorting\nCREATE INDEX IF NOT EXISTS idx_itinerary_order\nON itinerary(trip_id, order_index);\n\n-- Index on location_id for joins\nCREATE INDEX IF NOT EXISTS idx_itinerary_location_id\nON itinerary(location_id);\n\n-- ============================================\n-- LOCATIONS TABLE INDEXES\n-- ============================================\n\n-- Index on country for filtering\nCREATE INDEX IF NOT EXISTS idx_locations_country\nON locations(country);\n\n-- Index on name for lookups (no slug column exists)\nCREATE INDEX IF NOT EXISTS idx_locations_name\nON locations(name);\n\n-- ============================================\n-- TALENT TABLE INDEXES\n-- ============================================\n\n-- Index on name for search queries\nCREATE INDEX IF NOT EXISTS idx_talent_name\nON talent(name);\n\n-- Index on talent_category_id for filtering\nCREATE INDEX IF NOT EXISTS idx_talent_category_id\nON talent(talent_category_id);\n\n-- Full text search index for talent bio and known_for\nCREATE INDEX IF NOT EXISTS idx_talent_search\nON talent USING gin(to_tsvector('english', coalesce(bio, '') || ' ' || coalesce(known_for, '')));\n\n-- ============================================\n-- TRIP_TALENT JUNCTION TABLE INDEXES\n-- ============================================\n\n-- Composite index for many-to-many lookups\nCREATE INDEX IF NOT EXISTS idx_trip_talent_composite\nON trip_talent(trip_id, talent_id);\n\n-- Reverse index for talent lookups\nCREATE INDEX IF NOT EXISTS idx_trip_talent_reverse\nON trip_talent(talent_id, trip_id);\n\n-- ============================================\n-- TRIP_INFO_SECTIONS TABLE INDEXES\n-- ============================================\n\n-- Index on trip_id for foreign key lookups\nCREATE INDEX IF NOT EXISTS idx_trip_info_sections_trip_id\nON trip_info_sections(trip_id);\n\n-- Index on order_index for sorting\nCREATE INDEX IF NOT EXISTS idx_trip_info_sections_order\nON trip_info_sections(trip_id, order_index);\n\n-- ============================================\n-- PROFILES TABLE INDEXES (Supabase Auth)\n-- ============================================\n\n-- Index on email for lookups (column exists, already unique)\nCREATE INDEX IF NOT EXISTS idx_profiles_email_lookup\nON profiles(email);\n\n-- Index on role for filtering\nCREATE INDEX IF NOT EXISTS idx_profiles_role\nON profiles(role);\n\n-- Index on account_status for filtering\nCREATE INDEX IF NOT EXISTS idx_profiles_account_status\nON profiles(account_status);\n\n-- ============================================\n-- ANALYZE TABLES FOR QUERY PLANNER\n-- ============================================\n\n-- Update statistics for query planner optimization\nANALYZE trips;\nANALYZE events;\nANALYZE itinerary;\nANALYZE locations;\nANALYZE talent;\nANALYZE trip_talent;\nANALYZE trip_info_sections;\nANALYZE profiles;"}	add_performance_indexes_corrected	bryhearnchi@gmail.com	\N
20250926013815	{"-- Enable pg_trgm extension for trigram similarity search\nCREATE EXTENSION IF NOT EXISTS pg_trgm;"}	enable_trigram_extension	bryhearnchi@gmail.com	\N
20250926013824	{"-- Create specialized indexes for admin users search performance\n\n-- Trigram indexes for fuzzy text search (existing duplicates will be ignored)\nDROP INDEX IF EXISTS idx_profiles_username_trgm;\nDROP INDEX IF EXISTS idx_profiles_email_trgm;\nDROP INDEX IF EXISTS idx_profiles_full_name_trgm;\n\nCREATE INDEX idx_profiles_username_trgm ON profiles USING gin (username gin_trgm_ops);\nCREATE INDEX idx_profiles_email_trgm ON profiles USING gin (email gin_trgm_ops);  \nCREATE INDEX idx_profiles_full_name_trgm ON profiles USING gin (full_name gin_trgm_ops);\n\n-- Composite indexes for common filter combinations\nCREATE INDEX IF NOT EXISTS idx_profiles_active_role_created ON profiles (is_active, role, created_at DESC);\nCREATE INDEX IF NOT EXISTS idx_profiles_role_created ON profiles (role, created_at DESC);\nCREATE INDEX IF NOT EXISTS idx_profiles_active_created ON profiles (is_active, created_at DESC);\n\n-- Prefix search indexes for short search terms\nCREATE INDEX IF NOT EXISTS idx_profiles_username_prefix ON profiles (username text_pattern_ops);\nCREATE INDEX IF NOT EXISTS idx_profiles_email_prefix ON profiles (email text_pattern_ops);\nCREATE INDEX IF NOT EXISTS idx_profiles_full_name_prefix ON profiles (full_name text_pattern_ops);\n\n-- Combined text search index\nCREATE INDEX IF NOT EXISTS idx_profiles_search_text ON profiles USING gin (\n  (COALESCE(username, '') || ' ' || COALESCE(email, '') || ' ' || COALESCE(full_name, '')) gin_trgm_ops\n);"}	create_search_performance_indexes	bryhearnchi@gmail.com	\N
20250926013841	{"-- Create optimized search functions for admin users\n\n-- Function for optimized user search with ranking\nCREATE OR REPLACE FUNCTION search_profiles_optimized(\n  search_term TEXT DEFAULT NULL,\n  filter_role TEXT DEFAULT NULL,\n  filter_active BOOLEAN DEFAULT NULL,\n  page_limit INTEGER DEFAULT 20,\n  page_offset INTEGER DEFAULT 0\n)\nRETURNS TABLE (\n  id UUID,\n  username TEXT,\n  email TEXT,\n  full_name TEXT,\n  role TEXT,\n  is_active BOOLEAN,\n  account_status TEXT,\n  created_at TIMESTAMPTZ,\n  updated_at TIMESTAMPTZ,\n  last_sign_in_at TIMESTAMPTZ,\n  search_rank REAL\n) AS $$\nBEGIN\n  RETURN QUERY\n  SELECT \n    p.id,\n    p.username,\n    p.email,\n    p.full_name,\n    p.role,\n    p.is_active,\n    p.account_status,\n    p.created_at,\n    p.updated_at,\n    p.last_sign_in_at,\n    CASE \n      WHEN search_term IS NULL THEN 0::real\n      ELSE GREATEST(\n        similarity(COALESCE(p.username, ''), search_term),\n        similarity(COALESCE(p.email, ''), search_term),\n        similarity(COALESCE(p.full_name, ''), search_term)\n      )\n    END as search_rank\n  FROM profiles p\n  WHERE \n    (filter_role IS NULL OR p.role = filter_role)\n    AND (filter_active IS NULL OR p.is_active = filter_active)\n    AND (\n      search_term IS NULL \n      OR (\n        length(search_term) < 3 AND (\n          p.username ILIKE search_term || '%'\n          OR p.email ILIKE search_term || '%'\n          OR p.full_name ILIKE search_term || '%'\n        )\n      )\n      OR (\n        length(search_term) >= 3 AND (\n          p.username % search_term\n          OR p.email % search_term  \n          OR p.full_name % search_term\n          OR (COALESCE(p.username, '') || ' ' || COALESCE(p.email, '') || ' ' || COALESCE(p.full_name, '')) % search_term\n        )\n      )\n    )\n  ORDER BY \n    CASE WHEN search_term IS NULL THEN p.created_at END DESC,\n    CASE WHEN search_term IS NOT NULL THEN search_rank END DESC,\n    p.created_at DESC\n  LIMIT page_limit\n  OFFSET page_offset;\nEND;\n$$ LANGUAGE plpgsql STABLE;\n\n-- Function for fast count with estimation for large datasets\nCREATE OR REPLACE FUNCTION count_profiles_estimated(\n  search_term TEXT DEFAULT NULL,\n  filter_role TEXT DEFAULT NULL,\n  filter_active BOOLEAN DEFAULT NULL\n)\nRETURNS BIGINT AS $$\nDECLARE\n  result BIGINT;\n  total_rows BIGINT;\nBEGIN\n  -- For simple cases with no filters, use table statistics\n  IF search_term IS NULL AND filter_role IS NULL AND filter_active IS NULL THEN\n    SELECT COALESCE(reltuples::bigint, 0) INTO total_rows \n    FROM pg_class WHERE relname = 'profiles';\n    RETURN total_rows;\n  END IF;\n  \n  -- For filtered queries, use exact count (profiles table is expected to be small)\n  SELECT COUNT(*)\n  INTO result\n  FROM profiles p\n  WHERE \n    (filter_role IS NULL OR p.role = filter_role)\n    AND (filter_active IS NULL OR p.is_active = filter_active)\n    AND (\n      search_term IS NULL \n      OR (\n        length(search_term) < 3 AND (\n          p.username ILIKE search_term || '%'\n          OR p.email ILIKE search_term || '%'\n          OR p.full_name ILIKE search_term || '%'\n        )\n      )\n      OR (\n        length(search_term) >= 3 AND (\n          p.username % search_term\n          OR p.email % search_term  \n          OR p.full_name % search_term\n          OR (COALESCE(p.username, '') || ' ' || COALESCE(p.email, '') || ' ' || COALESCE(p.full_name, '')) % search_term\n        )\n      )\n    );\n    \n  RETURN COALESCE(result, 0);\nEND;\n$$ LANGUAGE plpgsql STABLE;\n\n-- Update table statistics for query planner\nANALYZE profiles;"}	create_optimized_search_functions	bryhearnchi@gmail.com	\N
20250926013957	{"-- Fix the return types to match the actual profiles table schema\nDROP FUNCTION IF EXISTS search_profiles_optimized;\n\nCREATE OR REPLACE FUNCTION search_profiles_optimized(\n  search_term TEXT DEFAULT NULL,\n  filter_role TEXT DEFAULT NULL,\n  filter_active BOOLEAN DEFAULT NULL,\n  page_limit INTEGER DEFAULT 20,\n  page_offset INTEGER DEFAULT 0\n)\nRETURNS TABLE (\n  id UUID,\n  username TEXT,\n  email TEXT,\n  full_name TEXT,\n  role TEXT,\n  is_active BOOLEAN,\n  account_status TEXT,\n  created_at TIMESTAMPTZ,\n  updated_at TIMESTAMPTZ,\n  last_sign_in_at TIMESTAMP, -- This is timestamp without timezone\n  search_rank REAL\n) AS $$\nBEGIN\n  RETURN QUERY\n  SELECT \n    p.id,\n    p.username,\n    p.email,\n    p.full_name,\n    p.role,\n    p.is_active,\n    p.account_status,\n    p.created_at,\n    p.updated_at,\n    p.last_sign_in_at,\n    CASE \n      WHEN search_term IS NULL THEN 0::real\n      ELSE GREATEST(\n        similarity(COALESCE(p.username, ''), search_term),\n        similarity(COALESCE(p.email, ''), search_term),\n        similarity(COALESCE(p.full_name, ''), search_term)\n      )\n    END as search_rank\n  FROM profiles p\n  WHERE \n    (filter_role IS NULL OR p.role = filter_role)\n    AND (filter_active IS NULL OR p.is_active = filter_active)\n    AND (\n      search_term IS NULL \n      OR (\n        length(search_term) < 3 AND (\n          p.username ILIKE search_term || '%'\n          OR p.email ILIKE search_term || '%'\n          OR p.full_name ILIKE search_term || '%'\n        )\n      )\n      OR (\n        length(search_term) >= 3 AND (\n          p.username % search_term\n          OR p.email % search_term  \n          OR p.full_name % search_term\n          OR (COALESCE(p.username, '') || ' ' || COALESCE(p.email, '') || ' ' || COALESCE(p.full_name, '')) % search_term\n        )\n      )\n    )\n  ORDER BY \n    CASE WHEN search_term IS NULL THEN p.created_at END DESC,\n    CASE WHEN search_term IS NOT NULL THEN search_rank END DESC,\n    p.created_at DESC\n  LIMIT page_limit\n  OFFSET page_offset;\nEND;\n$$ LANGUAGE plpgsql STABLE;"}	fix_search_function_return_types	bryhearnchi@gmail.com	\N
20250926102839	{"-- Add new JSONB fields for enhanced profile structure\nALTER TABLE profiles \nADD COLUMN name JSONB,\nADD COLUMN social_links JSONB;\n\n-- Migrate existing full_name data to new name structure\nUPDATE profiles \nSET name = jsonb_build_object(\n  'full', COALESCE(full_name, ''),\n  'first', CASE \n    WHEN full_name IS NOT NULL AND full_name != '' THEN \n      split_part(trim(full_name), ' ', 1)\n    ELSE ''\n  END,\n  'last', CASE \n    WHEN full_name IS NOT NULL AND full_name != '' AND array_length(string_to_array(trim(full_name), ' '), 1) > 1 THEN \n      split_part(trim(full_name), ' ', array_length(string_to_array(trim(full_name), ' '), 1))\n    ELSE ''\n  END,\n  'middle', '',\n  'suffix', '',\n  'preferred', ''\n)\nWHERE full_name IS NOT NULL;\n\n-- Set default empty name structure for NULL full_name records\nUPDATE profiles \nSET name = jsonb_build_object(\n  'full', '',\n  'first', '',\n  'last', '',\n  'middle', '',\n  'suffix', '',\n  'preferred', ''\n)\nWHERE full_name IS NULL;\n\n-- Initialize social_links as empty object\nUPDATE profiles \nSET social_links = jsonb_build_object(\n  'website', COALESCE(website, ''),\n  'instagram', '',\n  'twitter', '',\n  'linkedin', '',\n  'facebook', '',\n  'tiktok', '',\n  'youtube', ''\n);"}	enhance_profiles_structure	bryhearnchi@gmail.com	\N
20250929012323	{"ALTER TABLE locations DROP COLUMN coordinates;"}	remove_coordinates_column_from_locations	bryhearnchi@gmail.com	\N
20250929015508	{"ALTER TABLE locations \nADD COLUMN city VARCHAR,\nADD COLUMN state_province VARCHAR,\nADD COLUMN country_code VARCHAR(2);"}	add_standardized_location_fields_to_locations	bryhearnchi@gmail.com	\N
20250929015517	{"ALTER TABLE resorts \nADD COLUMN city VARCHAR,\nADD COLUMN state_province VARCHAR,\nADD COLUMN country VARCHAR,\nADD COLUMN country_code VARCHAR(2);"}	add_standardized_location_fields_to_resorts	bryhearnchi@gmail.com	\N
\.


--
-- Data for Name: secrets; Type: TABLE DATA; Schema: vault; Owner: supabase_admin
--

COPY vault.secrets (id, name, description, secret, key_id, nonce, created_at, updated_at) FROM stdin;
\.


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE SET; Schema: auth; Owner: supabase_auth_admin
--

SELECT pg_catalog.setval('auth.refresh_tokens_id_seq', 615, true);


--
-- Name: amenities_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.amenities_id_seq', 21, true);


--
-- Name: charter_companies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.charter_companies_id_seq', 2, true);


--
-- Name: event_talent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.event_talent_id_seq', 1, false);


--
-- Name: events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.events_id_seq', 1, false);


--
-- Name: itinerary_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.itinerary_id_seq', 1, false);


--
-- Name: location_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.location_types_id_seq', 5, true);


--
-- Name: locations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.locations_id_seq', 39, true);


--
-- Name: parties_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.parties_id_seq', 15, true);


--
-- Name: party_themes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.party_themes_id_seq', 16, true);


--
-- Name: resorts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.resorts_id_seq', 2, true);


--
-- Name: ships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.ships_id_seq', 3, true);


--
-- Name: talent_categories_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.talent_categories_id_seq', 5, true);


--
-- Name: talent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.talent_id_seq', 37, true);


--
-- Name: trip_info_sections_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.trip_info_sections_id_seq', 5, true);


--
-- Name: trip_section_assignments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.trip_section_assignments_id_seq', 4, true);


--
-- Name: trip_status_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.trip_status_id_seq', 3, true);


--
-- Name: trip_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.trip_types_id_seq', 2, true);


--
-- Name: trips_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.trips_id_seq', 4, true);


--
-- Name: venue_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.venue_types_id_seq', 6, true);


--
-- Name: venues_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.venues_id_seq', 28, true);


--
-- Name: subscription_id_seq; Type: SEQUENCE SET; Schema: realtime; Owner: supabase_admin
--

SELECT pg_catalog.setval('realtime.subscription_id_seq', 1, false);


--
-- Name: mfa_amr_claims amr_id_pk; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT amr_id_pk PRIMARY KEY (id);


--
-- Name: audit_log_entries audit_log_entries_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.audit_log_entries
    ADD CONSTRAINT audit_log_entries_pkey PRIMARY KEY (id);


--
-- Name: flow_state flow_state_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.flow_state
    ADD CONSTRAINT flow_state_pkey PRIMARY KEY (id);


--
-- Name: identities identities_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_pkey PRIMARY KEY (id);


--
-- Name: identities identities_provider_id_provider_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_provider_id_provider_unique UNIQUE (provider_id, provider);


--
-- Name: instances instances_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.instances
    ADD CONSTRAINT instances_pkey PRIMARY KEY (id);


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_authentication_method_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_authentication_method_pkey UNIQUE (session_id, authentication_method);


--
-- Name: mfa_challenges mfa_challenges_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_pkey PRIMARY KEY (id);


--
-- Name: mfa_factors mfa_factors_last_challenged_at_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_last_challenged_at_key UNIQUE (last_challenged_at);


--
-- Name: mfa_factors mfa_factors_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_pkey PRIMARY KEY (id);


--
-- Name: oauth_clients oauth_clients_client_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_client_id_key UNIQUE (client_id);


--
-- Name: oauth_clients oauth_clients_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_pkey PRIMARY KEY (id);


--
-- Name: one_time_tokens one_time_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_token_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_token_unique UNIQUE (token);


--
-- Name: saml_providers saml_providers_entity_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_entity_id_key UNIQUE (entity_id);


--
-- Name: saml_providers saml_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_pkey PRIMARY KEY (id);


--
-- Name: saml_relay_states saml_relay_states_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: sso_domains sso_domains_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_pkey PRIMARY KEY (id);


--
-- Name: sso_providers sso_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_providers
    ADD CONSTRAINT sso_providers_pkey PRIMARY KEY (id);


--
-- Name: users users_phone_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: amenities amenities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.amenities
    ADD CONSTRAINT amenities_pkey PRIMARY KEY (id);


--
-- Name: charter_companies charter_companies_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.charter_companies
    ADD CONSTRAINT charter_companies_name_key UNIQUE (name);


--
-- Name: charter_companies charter_companies_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.charter_companies
    ADD CONSTRAINT charter_companies_pkey PRIMARY KEY (id);


--
-- Name: trips cruises_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT cruises_pkey PRIMARY KEY (id);


--
-- Name: trips cruises_slug_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT cruises_slug_unique UNIQUE (slug);


--
-- Name: events events_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.events
    ADD CONSTRAINT events_pkey PRIMARY KEY (id);


--
-- Name: invitations invitations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invitations
    ADD CONSTRAINT invitations_pkey PRIMARY KEY (id);


--
-- Name: itinerary itinerary_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itinerary
    ADD CONSTRAINT itinerary_pkey PRIMARY KEY (id);


--
-- Name: location_types location_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location_types
    ADD CONSTRAINT location_types_pkey PRIMARY KEY (id);


--
-- Name: location_types location_types_type_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.location_types
    ADD CONSTRAINT location_types_type_key UNIQUE (type);


--
-- Name: party_themes party_themes_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.party_themes
    ADD CONSTRAINT party_themes_name_key UNIQUE (name);


--
-- Name: party_themes party_themes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.party_themes
    ADD CONSTRAINT party_themes_pkey PRIMARY KEY (id);


--
-- Name: locations ports_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.locations
    ADD CONSTRAINT ports_pkey PRIMARY KEY (id);


--
-- Name: profiles profiles_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_email_key UNIQUE (email);


--
-- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY (id);


--
-- Name: profiles profiles_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_username_key UNIQUE (username);


--
-- Name: resort_amenities resort_amenities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_amenities
    ADD CONSTRAINT resort_amenities_pkey PRIMARY KEY (resort_id, amenity_id);


--
-- Name: resort_venues resort_venues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_venues
    ADD CONSTRAINT resort_venues_pkey PRIMARY KEY (resort_id, venue_id);


--
-- Name: resorts resorts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resorts
    ADD CONSTRAINT resorts_pkey PRIMARY KEY (id);


--
-- Name: security_audit_log security_audit_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_audit_log
    ADD CONSTRAINT security_audit_log_pkey PRIMARY KEY (id);


--
-- Name: ship_amenities ship_amenities_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_amenities
    ADD CONSTRAINT ship_amenities_pkey PRIMARY KEY (ship_id, amenity_id);


--
-- Name: ship_venues ship_venues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_venues
    ADD CONSTRAINT ship_venues_pkey PRIMARY KEY (ship_id, venue_id);


--
-- Name: ships ships_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ships
    ADD CONSTRAINT ships_pkey PRIMARY KEY (id);


--
-- Name: talent_categories talent_categories_category_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.talent_categories
    ADD CONSTRAINT talent_categories_category_key UNIQUE (category);


--
-- Name: talent_categories talent_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.talent_categories
    ADD CONSTRAINT talent_categories_pkey PRIMARY KEY (id);


--
-- Name: talent talent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.talent
    ADD CONSTRAINT talent_pkey PRIMARY KEY (id);


--
-- Name: trip_info_sections trip_info_sections_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_info_sections
    ADD CONSTRAINT trip_info_sections_pkey PRIMARY KEY (id);


--
-- Name: trip_section_assignments trip_section_assignments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_section_assignments
    ADD CONSTRAINT trip_section_assignments_pkey PRIMARY KEY (id);


--
-- Name: trip_section_assignments trip_section_assignments_trip_id_section_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_section_assignments
    ADD CONSTRAINT trip_section_assignments_trip_id_section_id_key UNIQUE (trip_id, section_id);


--
-- Name: trip_status trip_status_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_status
    ADD CONSTRAINT trip_status_pkey PRIMARY KEY (id);


--
-- Name: trip_status trip_status_status_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_status
    ADD CONSTRAINT trip_status_status_key UNIQUE (status);


--
-- Name: trip_talent trip_talent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_talent
    ADD CONSTRAINT trip_talent_pkey PRIMARY KEY (trip_id, talent_id);


--
-- Name: trip_types trip_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_types
    ADD CONSTRAINT trip_types_pkey PRIMARY KEY (id);


--
-- Name: trip_types trip_types_trip_type_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_types
    ADD CONSTRAINT trip_types_trip_type_key UNIQUE (trip_type);


--
-- Name: venue_types venue_types_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venue_types
    ADD CONSTRAINT venue_types_name_key UNIQUE (name);


--
-- Name: venue_types venue_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venue_types
    ADD CONSTRAINT venue_types_pkey PRIMARY KEY (id);


--
-- Name: venues venues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venues
    ADD CONSTRAINT venues_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE ONLY realtime.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: subscription pk_subscription; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.subscription
    ADD CONSTRAINT pk_subscription PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: buckets_analytics buckets_analytics_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets_analytics
    ADD CONSTRAINT buckets_analytics_pkey PRIMARY KEY (id);


--
-- Name: buckets buckets_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets
    ADD CONSTRAINT buckets_pkey PRIMARY KEY (id);


--
-- Name: migrations migrations_name_key; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_name_key UNIQUE (name);


--
-- Name: migrations migrations_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: objects objects_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT objects_pkey PRIMARY KEY (id);


--
-- Name: prefixes prefixes_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT prefixes_pkey PRIMARY KEY (bucket_id, level, name);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_pkey PRIMARY KEY (id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_idempotency_key_key; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_idempotency_key_key UNIQUE (idempotency_key);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: audit_logs_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id);


--
-- Name: confirmation_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_current_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_new_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text);


--
-- Name: factor_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at);


--
-- Name: flow_state_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC);


--
-- Name: identities_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops);


--
-- Name: INDEX identities_email_idx; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.identities_email_idx IS 'Auth: Ensures indexed queries on the email column';


--
-- Name: identities_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id);


--
-- Name: idx_auth_code; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code);


--
-- Name: idx_user_id_auth_method; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method);


--
-- Name: mfa_challenge_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC);


--
-- Name: mfa_factors_user_friendly_name_unique; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text);


--
-- Name: mfa_factors_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id);


--
-- Name: oauth_clients_client_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_client_id_idx ON auth.oauth_clients USING btree (client_id);


--
-- Name: oauth_clients_deleted_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at);


--
-- Name: one_time_tokens_relates_to_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to);


--
-- Name: one_time_tokens_token_hash_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash);


--
-- Name: one_time_tokens_user_id_token_type_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type);


--
-- Name: reauthentication_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: recovery_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: refresh_tokens_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id);


--
-- Name: refresh_tokens_instance_id_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id);


--
-- Name: refresh_tokens_parent_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent);


--
-- Name: refresh_tokens_session_id_revoked_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked);


--
-- Name: refresh_tokens_updated_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC);


--
-- Name: saml_providers_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id);


--
-- Name: saml_relay_states_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC);


--
-- Name: saml_relay_states_for_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email);


--
-- Name: saml_relay_states_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id);


--
-- Name: sessions_not_after_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC);


--
-- Name: sessions_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id);


--
-- Name: sso_domains_domain_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain));


--
-- Name: sso_domains_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id);


--
-- Name: sso_providers_resource_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id));


--
-- Name: sso_providers_resource_id_pattern_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops);


--
-- Name: unique_phone_factor_per_user; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone);


--
-- Name: user_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at);


--
-- Name: users_email_partial_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false);


--
-- Name: INDEX users_email_partial_key; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.users_email_partial_key IS 'Auth: A partial unique index that applies only when is_sso_user is false';


--
-- Name: users_instance_id_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text));


--
-- Name: users_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id);


--
-- Name: users_is_anonymous_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous);


--
-- Name: amenities_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX amenities_name_idx ON public.amenities USING btree (name);


--
-- Name: cruises_ship_id_status_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cruises_ship_id_status_idx ON public.trips USING btree (ship_id, status) WHERE (ship_id IS NOT NULL);


--
-- Name: cruises_status_start_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX cruises_status_start_date_idx ON public.trips USING btree (status, start_date);


--
-- Name: events_admin_dashboard_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX events_admin_dashboard_idx ON public.events USING btree (trip_id, date DESC, type);


--
-- Name: events_date_range_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX events_date_range_idx ON public.events USING btree (trip_id, date, type);


--
-- Name: events_stats_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX events_stats_idx ON public.events USING btree (trip_id, type);


--
-- Name: events_trip_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX events_trip_idx ON public.events USING btree (trip_id);


--
-- Name: idx_events_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_events_date ON public.events USING btree (date);


--
-- Name: idx_events_party_theme_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_events_party_theme_id ON public.events USING btree (party_theme_id);


--
-- Name: idx_events_trip_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_events_trip_date ON public.events USING btree (trip_id, date, "time");


--
-- Name: idx_events_trip_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_events_trip_id ON public.events USING btree (trip_id);


--
-- Name: idx_events_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_events_type ON public.events USING btree (type);


--
-- Name: idx_invitations_used_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_invitations_used_by ON public.invitations USING btree (used_by) WHERE (used_by IS NOT NULL);


--
-- Name: idx_itinerary_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_itinerary_date ON public.itinerary USING btree (date);


--
-- Name: idx_itinerary_location_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_itinerary_location_id ON public.itinerary USING btree (location_id);


--
-- Name: idx_itinerary_location_type_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_itinerary_location_type_id ON public.itinerary USING btree (location_type_id);


--
-- Name: idx_itinerary_order; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_itinerary_order ON public.itinerary USING btree (trip_id, order_index);


--
-- Name: idx_itinerary_trip_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_itinerary_trip_id ON public.itinerary USING btree (trip_id);


--
-- Name: idx_locations_country; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_locations_country ON public.locations USING btree (country);


--
-- Name: idx_locations_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_locations_name ON public.locations USING btree (name);


--
-- Name: idx_party_themes_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_party_themes_name ON public.party_themes USING btree (name);


--
-- Name: idx_profiles_account_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_account_status ON public.profiles USING btree (account_status);


--
-- Name: idx_profiles_active_created; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_active_created ON public.profiles USING btree (is_active, created_at DESC);


--
-- Name: idx_profiles_active_role_created; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_active_role_created ON public.profiles USING btree (is_active, role, created_at DESC);


--
-- Name: idx_profiles_email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_email ON public.profiles USING btree (email);


--
-- Name: idx_profiles_email_lookup; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_email_lookup ON public.profiles USING btree (email);


--
-- Name: idx_profiles_email_prefix; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_email_prefix ON public.profiles USING btree (email text_pattern_ops);


--
-- Name: idx_profiles_email_trgm; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_email_trgm ON public.profiles USING gin (email public.gin_trgm_ops);


--
-- Name: idx_profiles_is_active; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_is_active ON public.profiles USING btree (is_active);


--
-- Name: idx_profiles_role; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_role ON public.profiles USING btree (role);


--
-- Name: idx_profiles_role_created; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_role_created ON public.profiles USING btree (role, created_at DESC);


--
-- Name: idx_profiles_username; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_username ON public.profiles USING btree (username);


--
-- Name: idx_profiles_username_prefix; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_username_prefix ON public.profiles USING btree (username text_pattern_ops);


--
-- Name: idx_profiles_username_trgm; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_profiles_username_trgm ON public.profiles USING gin (username public.gin_trgm_ops);


--
-- Name: idx_ships_cruise_line; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_ships_cruise_line ON public.ships USING btree (cruise_line);


--
-- Name: idx_ships_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_ships_name ON public.ships USING btree (name);


--
-- Name: idx_talent_category_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_talent_category_id ON public.talent USING btree (talent_category_id);


--
-- Name: idx_talent_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_talent_name ON public.talent USING btree (name);


--
-- Name: idx_talent_search; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_talent_search ON public.talent USING gin (to_tsvector('english'::regconfig, ((COALESCE(bio, ''::text) || ' '::text) || COALESCE(known_for, ''::text))));


--
-- Name: idx_trip_info_sections_trip_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trip_info_sections_trip_id ON public.trip_info_sections USING btree (trip_id);


--
-- Name: idx_trip_talent_composite; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trip_talent_composite ON public.trip_talent USING btree (trip_id, talent_id);


--
-- Name: idx_trip_talent_reverse; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trip_talent_reverse ON public.trip_talent USING btree (talent_id, trip_id);


--
-- Name: idx_trips_end_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trips_end_date ON public.trips USING btree (end_date);


--
-- Name: idx_trips_slug; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_trips_slug ON public.trips USING btree (slug);


--
-- Name: idx_trips_start_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trips_start_date ON public.trips USING btree (start_date);


--
-- Name: idx_trips_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trips_status ON public.trips USING btree (status);


--
-- Name: idx_trips_status_dates; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_trips_status_dates ON public.trips USING btree (status, start_date, end_date);


--
-- Name: invitation_active_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_active_idx ON public.invitations USING btree (email, used, expires_at);


--
-- Name: invitation_cleanup_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_cleanup_idx ON public.invitations USING btree (used, expires_at) WHERE (used = false);


--
-- Name: invitation_email_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_email_idx ON public.invitations USING btree (email);


--
-- Name: invitation_expires_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_expires_idx ON public.invitations USING btree (expires_at);


--
-- Name: invitation_inviter_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_inviter_idx ON public.invitations USING btree (invited_by);


--
-- Name: invitation_token_hash_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_token_hash_idx ON public.invitations USING btree (token_hash);


--
-- Name: invitation_used_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX invitation_used_idx ON public.invitations USING btree (used);


--
-- Name: itinerary_cruise_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX itinerary_cruise_date_idx ON public.itinerary USING btree (trip_id, date);


--
-- Name: itinerary_location_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX itinerary_location_idx ON public.itinerary USING btree (location_id);


--
-- Name: itinerary_location_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX itinerary_location_type_id_idx ON public.itinerary USING btree (location_type_id);


--
-- Name: itinerary_port_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX itinerary_port_id_idx ON public.itinerary USING btree (location_id) WHERE (location_id IS NOT NULL);


--
-- Name: itinerary_trip_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX itinerary_trip_idx ON public.itinerary USING btree (trip_id);


--
-- Name: locations_name_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX locations_name_unique ON public.locations USING btree (name);


--
-- Name: profiles_created_at_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX profiles_created_at_idx ON public.profiles USING btree (created_at);


--
-- Name: resort_amenities_amenity_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resort_amenities_amenity_id_idx ON public.resort_amenities USING btree (amenity_id);


--
-- Name: resort_amenities_resort_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resort_amenities_resort_id_idx ON public.resort_amenities USING btree (resort_id);


--
-- Name: resort_venues_resort_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resort_venues_resort_id_idx ON public.resort_venues USING btree (resort_id);


--
-- Name: resort_venues_venue_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resort_venues_venue_id_idx ON public.resort_venues USING btree (venue_id);


--
-- Name: resorts_location_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resorts_location_idx ON public.resorts USING btree (location);


--
-- Name: resorts_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX resorts_name_idx ON public.resorts USING btree (name);


--
-- Name: resorts_name_location_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX resorts_name_location_unique ON public.resorts USING btree (name, location);


--
-- Name: ship_amenities_amenity_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ship_amenities_amenity_id_idx ON public.ship_amenities USING btree (amenity_id);


--
-- Name: ship_amenities_ship_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ship_amenities_ship_id_idx ON public.ship_amenities USING btree (ship_id);


--
-- Name: ship_venues_ship_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ship_venues_ship_id_idx ON public.ship_venues USING btree (ship_id);


--
-- Name: ship_venues_venue_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ship_venues_venue_id_idx ON public.ship_venues USING btree (venue_id);


--
-- Name: ships_capacity_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ships_capacity_idx ON public.ships USING btree (capacity) WHERE (capacity IS NOT NULL);


--
-- Name: ships_cruise_line_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ships_cruise_line_idx ON public.ships USING btree (cruise_line);


--
-- Name: ships_name_cruise_line_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX ships_name_cruise_line_unique ON public.ships USING btree (name, cruise_line);


--
-- Name: ships_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ships_name_idx ON public.ships USING btree (name);


--
-- Name: talent_admin_search_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX talent_admin_search_idx ON public.talent USING gin (to_tsvector('english'::regconfig, ((name || ' '::text) || COALESCE(bio, ''::text))));


--
-- Name: talent_categories_category_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX talent_categories_category_idx ON public.talent_categories USING btree (category);


--
-- Name: trip_info_sections_section_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_info_sections_section_type_idx ON public.trip_info_sections USING btree (section_type);


--
-- Name: trip_info_trip_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_info_trip_idx ON public.trip_info_sections USING btree (trip_id);


--
-- Name: trip_section_assignments_order_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_section_assignments_order_idx ON public.trip_section_assignments USING btree (trip_id, order_index);


--
-- Name: trip_section_assignments_section_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_section_assignments_section_id_idx ON public.trip_section_assignments USING btree (section_id);


--
-- Name: trip_section_assignments_trip_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_section_assignments_trip_id_idx ON public.trip_section_assignments USING btree (trip_id);


--
-- Name: trip_talent_talent_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_talent_talent_idx ON public.trip_talent USING btree (talent_id);


--
-- Name: trip_talent_trip_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trip_talent_trip_idx ON public.trip_talent USING btree (trip_id);


--
-- Name: trips_resort_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_resort_id_idx ON public.trips USING btree (resort_id);


--
-- Name: trips_ship_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_ship_id_idx ON public.trips USING btree (ship_id);


--
-- Name: trips_slug_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_slug_idx ON public.trips USING btree (slug);


--
-- Name: trips_status_dates_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_status_dates_idx ON public.trips USING btree (trip_status_id, start_date, end_date);


--
-- Name: trips_status_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_status_idx ON public.trips USING btree (status);


--
-- Name: trips_trip_status_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_trip_status_id_idx ON public.trips USING btree (trip_status_id);


--
-- Name: trips_trip_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX trips_trip_type_id_idx ON public.trips USING btree (trip_type_id);


--
-- Name: venues_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX venues_name_idx ON public.venues USING btree (name);


--
-- Name: venues_venue_type_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX venues_venue_type_id_idx ON public.venues USING btree (venue_type_id);


--
-- Name: ix_realtime_subscription_entity; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE INDEX ix_realtime_subscription_entity ON realtime.subscription USING btree (entity);


--
-- Name: messages_inserted_at_topic_index; Type: INDEX; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE INDEX messages_inserted_at_topic_index ON ONLY realtime.messages USING btree (inserted_at DESC, topic) WHERE ((extension = 'broadcast'::text) AND (private IS TRUE));


--
-- Name: subscription_subscription_id_entity_filters_key; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE UNIQUE INDEX subscription_subscription_id_entity_filters_key ON realtime.subscription USING btree (subscription_id, entity, filters);


--
-- Name: bname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name);


--
-- Name: bucketid_objname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name);


--
-- Name: idx_multipart_uploads_list; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at);


--
-- Name: idx_name_bucket_level_unique; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE "C", bucket_id, level);


--
-- Name: idx_objects_bucket_id_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE "C");


--
-- Name: idx_objects_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level);


--
-- Name: idx_prefixes_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops);


--
-- Name: name_prefix_search; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops);


--
-- Name: objects_bucket_id_level_idx; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE "C");


--
-- Name: users on_auth_user_created; Type: TRIGGER; Schema: auth; Owner: supabase_auth_admin
--

CREATE TRIGGER on_auth_user_created AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();


--
-- Name: profiles audit_role_changes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER audit_role_changes AFTER UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION public.log_role_changes();


--
-- Name: charter_companies charter_companies_updated_at_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER charter_companies_updated_at_trigger BEFORE UPDATE ON public.charter_companies FOR EACH ROW EXECUTE FUNCTION public.update_charter_companies_updated_at();


--
-- Name: profiles update_profiles_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_profiles_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: trip_section_assignments update_trip_section_assignments_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_trip_section_assignments_updated_at BEFORE UPDATE ON public.trip_section_assignments FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: subscription tr_check_filters; Type: TRIGGER; Schema: realtime; Owner: supabase_admin
--

CREATE TRIGGER tr_check_filters BEFORE INSERT OR UPDATE ON realtime.subscription FOR EACH ROW EXECUTE FUNCTION realtime.subscription_check_filters();


--
-- Name: buckets enforce_bucket_name_length_trigger; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER enforce_bucket_name_length_trigger BEFORE INSERT OR UPDATE OF name ON storage.buckets FOR EACH ROW EXECUTE FUNCTION storage.enforce_bucket_name_length();


--
-- Name: objects objects_delete_delete_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_delete_delete_prefix AFTER DELETE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects objects_insert_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_insert_create_prefix BEFORE INSERT ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.objects_insert_prefix_trigger();


--
-- Name: objects objects_update_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_update_create_prefix BEFORE UPDATE ON storage.objects FOR EACH ROW WHEN (((new.name <> old.name) OR (new.bucket_id <> old.bucket_id))) EXECUTE FUNCTION storage.objects_update_prefix_trigger();


--
-- Name: prefixes prefixes_create_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_create_hierarchy BEFORE INSERT ON storage.prefixes FOR EACH ROW WHEN ((pg_trigger_depth() < 1)) EXECUTE FUNCTION storage.prefixes_insert_trigger();


--
-- Name: prefixes prefixes_delete_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_delete_hierarchy AFTER DELETE ON storage.prefixes FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects update_objects_updated_at; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER update_objects_updated_at BEFORE UPDATE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.update_updated_at_column();


--
-- Name: identities identities_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: mfa_challenges mfa_challenges_auth_factor_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_auth_factor_id_fkey FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE;


--
-- Name: mfa_factors mfa_factors_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: one_time_tokens one_time_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: refresh_tokens refresh_tokens_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: saml_providers saml_providers_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_flow_state_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_flow_state_id_fkey FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: sessions sessions_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: sso_domains sso_domains_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: events events_party_theme_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.events
    ADD CONSTRAINT events_party_theme_id_fkey FOREIGN KEY (party_theme_id) REFERENCES public.party_themes(id);


--
-- Name: events events_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.events
    ADD CONSTRAINT events_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id) ON DELETE CASCADE;


--
-- Name: invitations invitations_invited_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invitations
    ADD CONSTRAINT invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: invitations invitations_used_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invitations
    ADD CONSTRAINT invitations_used_by_fkey FOREIGN KEY (used_by) REFERENCES public.profiles(id) ON DELETE SET NULL;


--
-- Name: itinerary itinerary_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itinerary
    ADD CONSTRAINT itinerary_location_id_fkey FOREIGN KEY (location_id) REFERENCES public.locations(id) ON DELETE SET NULL;


--
-- Name: itinerary itinerary_location_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itinerary
    ADD CONSTRAINT itinerary_location_type_id_fkey FOREIGN KEY (location_type_id) REFERENCES public.location_types(id);


--
-- Name: itinerary itinerary_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itinerary
    ADD CONSTRAINT itinerary_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id) ON DELETE CASCADE;


--
-- Name: profiles profiles_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: resort_amenities resort_amenities_amenity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_amenities
    ADD CONSTRAINT resort_amenities_amenity_id_fkey FOREIGN KEY (amenity_id) REFERENCES public.amenities(id) ON DELETE CASCADE;


--
-- Name: resort_amenities resort_amenities_resort_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_amenities
    ADD CONSTRAINT resort_amenities_resort_id_fkey FOREIGN KEY (resort_id) REFERENCES public.resorts(id) ON DELETE CASCADE;


--
-- Name: resort_venues resort_venues_resort_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_venues
    ADD CONSTRAINT resort_venues_resort_id_fkey FOREIGN KEY (resort_id) REFERENCES public.resorts(id) ON DELETE CASCADE;


--
-- Name: resort_venues resort_venues_venue_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resort_venues
    ADD CONSTRAINT resort_venues_venue_id_fkey FOREIGN KEY (venue_id) REFERENCES public.venues(id) ON DELETE CASCADE;


--
-- Name: security_audit_log security_audit_log_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.security_audit_log
    ADD CONSTRAINT security_audit_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id);


--
-- Name: ship_amenities ship_amenities_amenity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_amenities
    ADD CONSTRAINT ship_amenities_amenity_id_fkey FOREIGN KEY (amenity_id) REFERENCES public.amenities(id) ON DELETE CASCADE;


--
-- Name: ship_amenities ship_amenities_ship_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_amenities
    ADD CONSTRAINT ship_amenities_ship_id_fkey FOREIGN KEY (ship_id) REFERENCES public.ships(id) ON DELETE CASCADE;


--
-- Name: ship_venues ship_venues_ship_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_venues
    ADD CONSTRAINT ship_venues_ship_id_fkey FOREIGN KEY (ship_id) REFERENCES public.ships(id) ON DELETE CASCADE;


--
-- Name: ship_venues ship_venues_venue_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ship_venues
    ADD CONSTRAINT ship_venues_venue_id_fkey FOREIGN KEY (venue_id) REFERENCES public.venues(id) ON DELETE CASCADE;


--
-- Name: talent talent_talent_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.talent
    ADD CONSTRAINT talent_talent_category_id_fkey FOREIGN KEY (talent_category_id) REFERENCES public.talent_categories(id);


--
-- Name: trip_section_assignments trip_section_assignments_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_section_assignments
    ADD CONSTRAINT trip_section_assignments_section_id_fkey FOREIGN KEY (section_id) REFERENCES public.trip_info_sections(id) ON DELETE CASCADE;


--
-- Name: trip_section_assignments trip_section_assignments_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_section_assignments
    ADD CONSTRAINT trip_section_assignments_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id) ON DELETE CASCADE;


--
-- Name: trip_talent trip_talent_talent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_talent
    ADD CONSTRAINT trip_talent_talent_id_fkey FOREIGN KEY (talent_id) REFERENCES public.talent(id) ON DELETE CASCADE;


--
-- Name: trip_talent trip_talent_trip_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trip_talent
    ADD CONSTRAINT trip_talent_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id) ON DELETE CASCADE;


--
-- Name: trips trips_charter_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT trips_charter_company_id_fkey FOREIGN KEY (charter_company_id) REFERENCES public.charter_companies(id) ON DELETE SET NULL;


--
-- Name: trips trips_resort_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT trips_resort_id_fkey FOREIGN KEY (resort_id) REFERENCES public.resorts(id) ON DELETE SET NULL;


--
-- Name: trips trips_ship_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT trips_ship_id_fkey FOREIGN KEY (ship_id) REFERENCES public.ships(id);


--
-- Name: trips trips_trip_status_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT trips_trip_status_id_fkey FOREIGN KEY (trip_status_id) REFERENCES public.trip_status(id);


--
-- Name: trips trips_trip_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.trips
    ADD CONSTRAINT trips_trip_type_id_fkey FOREIGN KEY (trip_type_id) REFERENCES public.trip_types(id);


--
-- Name: venues venues_venue_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.venues
    ADD CONSTRAINT venues_venue_type_id_fkey FOREIGN KEY (venue_type_id) REFERENCES public.venue_types(id) ON DELETE RESTRICT;


--
-- Name: objects objects_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT "objects_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: prefixes prefixes_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT "prefixes_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_upload_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE;


--
-- Name: audit_log_entries; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.audit_log_entries ENABLE ROW LEVEL SECURITY;

--
-- Name: flow_state; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.flow_state ENABLE ROW LEVEL SECURITY;

--
-- Name: identities; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.identities ENABLE ROW LEVEL SECURITY;

--
-- Name: instances; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.instances ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_amr_claims; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_amr_claims ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_challenges; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_challenges ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_factors; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_factors ENABLE ROW LEVEL SECURITY;

--
-- Name: one_time_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.one_time_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: refresh_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.refresh_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_relay_states; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_relay_states ENABLE ROW LEVEL SECURITY;

--
-- Name: schema_migrations; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.schema_migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: sessions; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sessions ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_domains; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_domains ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

--
-- Name: events Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.events TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: invitations Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.invitations TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles p
  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles p
  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text)))));


--
-- Name: itinerary Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.itinerary TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: location_types Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.location_types TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: party_themes Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.party_themes TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: ships Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.ships TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: talent Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.talent TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: talent_categories Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.talent_categories TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: trip_info_sections Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.trip_info_sections TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: trip_status Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.trip_status TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: trip_talent Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.trip_talent TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: trip_types Admin full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin full access" ON public.trip_types TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: location_types Admin manage location_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin manage location_types" ON public.location_types TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text]))))));


--
-- Name: talent_categories Admin manage talent_categories; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin manage talent_categories" ON public.talent_categories TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text]))))));


--
-- Name: trip_status Admin manage trip_status; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin manage trip_status" ON public.trip_status TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text]))))));


--
-- Name: trip_types Admin manage trip_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admin manage trip_types" ON public.trip_types TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text]))))));


--
-- Name: security_audit_log Admins can view audit logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can view audit logs" ON public.security_audit_log FOR SELECT TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text)))));


--
-- Name: events Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.events TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: itinerary Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.itinerary TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: party_themes Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.party_themes TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: ships Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.ships TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: talent Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.talent TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: talent_categories Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.talent_categories TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: trip_info_sections Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.trip_info_sections TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: trip_talent Content manager full access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Content manager full access" ON public.trip_talent TO authenticated USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'content_manager'::text)))));


--
-- Name: profiles Public profiles are viewable; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public profiles are viewable" ON public.profiles FOR SELECT USING (true);


--
-- Name: events Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.events FOR SELECT USING (true);


--
-- Name: itinerary Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.itinerary FOR SELECT USING (true);


--
-- Name: location_types Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.location_types FOR SELECT USING (true);


--
-- Name: party_themes Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.party_themes FOR SELECT USING (true);


--
-- Name: ships Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.ships FOR SELECT USING (true);


--
-- Name: talent Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.talent FOR SELECT USING (true);


--
-- Name: talent_categories Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.talent_categories FOR SELECT USING (true);


--
-- Name: trip_info_sections Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.trip_info_sections FOR SELECT USING (true);


--
-- Name: trip_status Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.trip_status FOR SELECT USING (true);


--
-- Name: trip_talent Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.trip_talent FOR SELECT USING (true);


--
-- Name: trip_types Public read access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read access" ON public.trip_types FOR SELECT USING (true);


--
-- Name: location_types Public read location_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read location_types" ON public.location_types FOR SELECT USING (true);


--
-- Name: talent_categories Public read talent_categories; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read talent_categories" ON public.talent_categories FOR SELECT USING (true);


--
-- Name: trip_status Public read trip_status; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read trip_status" ON public.trip_status FOR SELECT USING (true);


--
-- Name: trip_types Public read trip_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Public read trip_types" ON public.trip_types FOR SELECT USING (true);


--
-- Name: events Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.events USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: invitations Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.invitations USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: itinerary Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.itinerary USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: location_types Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.location_types USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: party_themes Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.party_themes USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: ships Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.ships USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: talent Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.talent USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: talent_categories Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.talent_categories USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: trip_info_sections Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.trip_info_sections USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: trip_status Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.trip_status USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: trip_talent Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.trip_talent USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: trip_types Service role bypass; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass" ON public.trip_types USING ((( SELECT auth.role() AS role) = 'service_role'::text)) WITH CHECK ((( SELECT auth.role() AS role) = 'service_role'::text));


--
-- Name: location_types Service role bypass location_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass location_types" ON public.location_types TO service_role USING (true) WITH CHECK (true);


--
-- Name: talent_categories Service role bypass talent_categories; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass talent_categories" ON public.talent_categories TO service_role USING (true) WITH CHECK (true);


--
-- Name: trip_status Service role bypass trip_status; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass trip_status" ON public.trip_status TO service_role USING (true) WITH CHECK (true);


--
-- Name: trip_types Service role bypass trip_types; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role bypass trip_types" ON public.trip_types TO service_role USING (true) WITH CHECK (true);


--
-- Name: security_audit_log Service role can insert audit logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Service role can insert audit logs" ON public.security_audit_log FOR INSERT TO service_role WITH CHECK (true);


--
-- Name: profiles Users can insert own profile; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can insert own profile" ON public.profiles FOR INSERT TO authenticated WITH CHECK ((auth.uid() = id));


--
-- Name: profiles Users can update own profile; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update own profile" ON public.profiles FOR UPDATE TO authenticated USING ((auth.uid() = id));


--
-- Name: locations admin_delete_locations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_delete_locations ON public.locations FOR DELETE USING (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))));


--
-- Name: trips admin_delete_trips; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_delete_trips ON public.trips FOR DELETE USING (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'admin'::text))))));


--
-- Name: locations admin_update_locations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_update_locations ON public.locations FOR UPDATE USING (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))));


--
-- Name: trips admin_update_trips; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_update_trips ON public.trips FOR UPDATE USING (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))));


--
-- Name: locations admin_write_locations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_write_locations ON public.locations FOR INSERT WITH CHECK (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))));


--
-- Name: trips admin_write_trips; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admin_write_trips ON public.trips FOR INSERT WITH CHECK (((auth.uid() IS NOT NULL) AND (EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'content_manager'::text])))))));


--
-- Name: charter_companies; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.charter_companies ENABLE ROW LEVEL SECURITY;

--
-- Name: charter_companies charter_companies_authenticated_read; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY charter_companies_authenticated_read ON public.charter_companies FOR SELECT USING ((auth.role() = 'authenticated'::text));


--
-- Name: charter_companies charter_companies_super_admin_write; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY charter_companies_super_admin_write ON public.charter_companies USING ((EXISTS ( SELECT 1
   FROM public.profiles
  WHERE ((profiles.id = auth.uid()) AND (profiles.role = 'super_admin'::text)))));


--
-- Name: events; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.events ENABLE ROW LEVEL SECURITY;

--
-- Name: invitations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.invitations ENABLE ROW LEVEL SECURITY;

--
-- Name: itinerary; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.itinerary ENABLE ROW LEVEL SECURITY;

--
-- Name: location_types; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.location_types ENABLE ROW LEVEL SECURITY;

--
-- Name: locations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.locations ENABLE ROW LEVEL SECURITY;

--
-- Name: party_themes; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.party_themes ENABLE ROW LEVEL SECURITY;

--
-- Name: profiles; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

--
-- Name: locations public_read_locations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY public_read_locations ON public.locations FOR SELECT USING (true);


--
-- Name: trips public_read_trips; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY public_read_trips ON public.trips FOR SELECT USING (true);


--
-- Name: security_audit_log; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.security_audit_log ENABLE ROW LEVEL SECURITY;

--
-- Name: ships; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.ships ENABLE ROW LEVEL SECURITY;

--
-- Name: talent; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.talent ENABLE ROW LEVEL SECURITY;

--
-- Name: talent_categories; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.talent_categories ENABLE ROW LEVEL SECURITY;

--
-- Name: trip_info_sections; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.trip_info_sections ENABLE ROW LEVEL SECURITY;

--
-- Name: trip_status; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.trip_status ENABLE ROW LEVEL SECURITY;

--
-- Name: trip_talent; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.trip_talent ENABLE ROW LEVEL SECURITY;

--
-- Name: trip_types; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.trip_types ENABLE ROW LEVEL SECURITY;

--
-- Name: trips; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.trips ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE realtime.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets_analytics; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets_analytics ENABLE ROW LEVEL SECURITY;

--
-- Name: migrations; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: objects; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

--
-- Name: prefixes; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.prefixes ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads_parts; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads_parts ENABLE ROW LEVEL SECURITY;

--
-- Name: supabase_realtime; Type: PUBLICATION; Schema: -; Owner: postgres
--

CREATE PUBLICATION supabase_realtime WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime OWNER TO postgres;

--
-- Name: supabase_realtime itinerary; Type: PUBLICATION TABLE; Schema: public; Owner: postgres
--

ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.itinerary;


--
-- Name: SCHEMA auth; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA auth TO anon;
GRANT USAGE ON SCHEMA auth TO authenticated;
GRANT USAGE ON SCHEMA auth TO service_role;
GRANT ALL ON SCHEMA auth TO supabase_auth_admin;
GRANT ALL ON SCHEMA auth TO dashboard_user;
GRANT USAGE ON SCHEMA auth TO postgres;


--
-- Name: SCHEMA extensions; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA extensions TO anon;
GRANT USAGE ON SCHEMA extensions TO authenticated;
GRANT USAGE ON SCHEMA extensions TO service_role;
GRANT ALL ON SCHEMA extensions TO dashboard_user;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT ALL ON SCHEMA public TO service_role;


--
-- Name: SCHEMA realtime; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA realtime TO postgres;
GRANT USAGE ON SCHEMA realtime TO anon;
GRANT USAGE ON SCHEMA realtime TO authenticated;
GRANT USAGE ON SCHEMA realtime TO service_role;
GRANT ALL ON SCHEMA realtime TO supabase_realtime_admin;


--
-- Name: SCHEMA storage; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA storage TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA storage TO anon;
GRANT USAGE ON SCHEMA storage TO authenticated;
GRANT USAGE ON SCHEMA storage TO service_role;
GRANT ALL ON SCHEMA storage TO supabase_storage_admin;
GRANT ALL ON SCHEMA storage TO dashboard_user;


--
-- Name: SCHEMA vault; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA vault TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA vault TO service_role;


--
-- Name: FUNCTION email(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.email() TO dashboard_user;


--
-- Name: FUNCTION jwt(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.jwt() TO postgres;
GRANT ALL ON FUNCTION auth.jwt() TO dashboard_user;


--
-- Name: FUNCTION role(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.role() TO dashboard_user;


--
-- Name: FUNCTION uid(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.uid() TO dashboard_user;


--
-- Name: FUNCTION armor(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO dashboard_user;


--
-- Name: FUNCTION armor(bytea, text[], text[]); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea, text[], text[]) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO dashboard_user;


--
-- Name: FUNCTION crypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.crypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION dearmor(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.dearmor(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO dashboard_user;


--
-- Name: FUNCTION decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION decrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION gen_random_bytes(integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_bytes(integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO dashboard_user;


--
-- Name: FUNCTION gen_random_uuid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_uuid() FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text, integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text, integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO dashboard_user;


--
-- Name: FUNCTION grant_pg_cron_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_cron_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO dashboard_user;


--
-- Name: FUNCTION grant_pg_graphql_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.grant_pg_graphql_access() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION grant_pg_net_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_net_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO dashboard_user;


--
-- Name: FUNCTION hmac(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION hmac(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO dashboard_user;


--
-- Name: FUNCTION pgp_armor_headers(text, OUT key text, OUT value text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO dashboard_user;


--
-- Name: FUNCTION pgp_key_id(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_key_id(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgrst_ddl_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_ddl_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION pgrst_drop_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_drop_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION set_graphql_placeholder(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.set_graphql_placeholder() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION uuid_generate_v1(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v1mc(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1mc() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v3(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v4(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v4() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v5(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_nil(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_nil() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_dns(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_dns() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_oid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_oid() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_url(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_url() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_x500(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_x500() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO dashboard_user;


--
-- Name: FUNCTION graphql("operationName" text, query text, variables jsonb, extensions jsonb); Type: ACL; Schema: graphql_public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO postgres;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO anon;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO authenticated;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO service_role;


--
-- Name: FUNCTION get_auth(p_usename text); Type: ACL; Schema: pgbouncer; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION pgbouncer.get_auth(p_usename text) FROM PUBLIC;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO pgbouncer;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO postgres;


--
-- Name: FUNCTION cancel_invitation(p_invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.cancel_invitation(p_invitation_id uuid) TO authenticated;


--
-- Name: FUNCTION consume_invitation(p_invitation_id uuid, p_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.consume_invitation(p_invitation_id uuid, p_user_id uuid) TO authenticated;


--
-- Name: FUNCTION create_user_invitation(p_email character varying, p_full_name character varying, p_role public.user_role, p_message text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_user_invitation(p_email character varying, p_full_name character varying, p_role public.user_role, p_message text) TO authenticated;


--
-- Name: FUNCTION resend_invitation(p_invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.resend_invitation(p_invitation_id uuid) TO authenticated;


--
-- Name: FUNCTION validate_invitation_token(p_token text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.validate_invitation_token(p_token text) TO anon;
GRANT ALL ON FUNCTION public.validate_invitation_token(p_token text) TO authenticated;


--
-- Name: FUNCTION apply_rls(wal jsonb, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO postgres;
GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO dashboard_user;


--
-- Name: FUNCTION build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO postgres;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO anon;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO service_role;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION "cast"(val text, type_ regtype); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO postgres;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO dashboard_user;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO anon;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO authenticated;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO service_role;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO supabase_realtime_admin;


--
-- Name: FUNCTION check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO postgres;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO anon;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO authenticated;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO service_role;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO supabase_realtime_admin;


--
-- Name: FUNCTION is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO postgres;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO anon;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO service_role;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION quote_wal2json(entity regclass); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO postgres;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO anon;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO authenticated;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO service_role;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO supabase_realtime_admin;


--
-- Name: FUNCTION send(payload jsonb, event text, topic text, private boolean); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO postgres;
GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO dashboard_user;


--
-- Name: FUNCTION subscription_check_filters(); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO postgres;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO dashboard_user;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO anon;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO authenticated;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO service_role;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO supabase_realtime_admin;


--
-- Name: FUNCTION to_regrole(role_name text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO postgres;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO anon;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO authenticated;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO service_role;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO supabase_realtime_admin;


--
-- Name: FUNCTION topic(); Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON FUNCTION realtime.topic() TO postgres;
GRANT ALL ON FUNCTION realtime.topic() TO dashboard_user;


--
-- Name: FUNCTION _crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO service_role;


--
-- Name: FUNCTION create_secret(new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: FUNCTION update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: TABLE audit_log_entries; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.audit_log_entries TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.audit_log_entries TO postgres;
GRANT SELECT ON TABLE auth.audit_log_entries TO postgres WITH GRANT OPTION;


--
-- Name: TABLE flow_state; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.flow_state TO postgres;
GRANT SELECT ON TABLE auth.flow_state TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.flow_state TO dashboard_user;


--
-- Name: TABLE identities; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.identities TO postgres;
GRANT SELECT ON TABLE auth.identities TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.identities TO dashboard_user;


--
-- Name: TABLE instances; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.instances TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.instances TO postgres;
GRANT SELECT ON TABLE auth.instances TO postgres WITH GRANT OPTION;


--
-- Name: TABLE mfa_amr_claims; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_amr_claims TO postgres;
GRANT SELECT ON TABLE auth.mfa_amr_claims TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_amr_claims TO dashboard_user;


--
-- Name: TABLE mfa_challenges; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_challenges TO postgres;
GRANT SELECT ON TABLE auth.mfa_challenges TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_challenges TO dashboard_user;


--
-- Name: TABLE mfa_factors; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_factors TO postgres;
GRANT SELECT ON TABLE auth.mfa_factors TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_factors TO dashboard_user;


--
-- Name: TABLE oauth_clients; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.oauth_clients TO postgres;
GRANT ALL ON TABLE auth.oauth_clients TO dashboard_user;


--
-- Name: TABLE one_time_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.one_time_tokens TO postgres;
GRANT SELECT ON TABLE auth.one_time_tokens TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.one_time_tokens TO dashboard_user;


--
-- Name: TABLE refresh_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.refresh_tokens TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.refresh_tokens TO postgres;
GRANT SELECT ON TABLE auth.refresh_tokens TO postgres WITH GRANT OPTION;


--
-- Name: SEQUENCE refresh_tokens_id_seq; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO dashboard_user;
GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO postgres;


--
-- Name: TABLE saml_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_providers TO postgres;
GRANT SELECT ON TABLE auth.saml_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_providers TO dashboard_user;


--
-- Name: TABLE saml_relay_states; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_relay_states TO postgres;
GRANT SELECT ON TABLE auth.saml_relay_states TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_relay_states TO dashboard_user;


--
-- Name: TABLE sessions; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sessions TO postgres;
GRANT SELECT ON TABLE auth.sessions TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sessions TO dashboard_user;


--
-- Name: TABLE sso_domains; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_domains TO postgres;
GRANT SELECT ON TABLE auth.sso_domains TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_domains TO dashboard_user;


--
-- Name: TABLE sso_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_providers TO postgres;
GRANT SELECT ON TABLE auth.sso_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_providers TO dashboard_user;


--
-- Name: TABLE users; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.users TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.users TO postgres;
GRANT SELECT ON TABLE auth.users TO postgres WITH GRANT OPTION;


--
-- Name: TABLE pg_stat_statements; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements TO dashboard_user;


--
-- Name: TABLE pg_stat_statements_info; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements_info FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO dashboard_user;


--
-- Name: SEQUENCE events_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.events_id_seq TO service_role;


--
-- Name: TABLE events; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.events TO service_role;


--
-- Name: TABLE ships; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.ships TO service_role;


--
-- Name: SEQUENCE talent_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.talent_id_seq TO service_role;


--
-- Name: TABLE talent; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.talent TO service_role;


--
-- Name: TABLE talent_categories; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.talent_categories TO service_role;


--
-- Name: SEQUENCE trips_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.trips_id_seq TO service_role;


--
-- Name: TABLE trips; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trips TO service_role;


--
-- Name: TABLE admin_dashboard_stats; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.admin_dashboard_stats TO service_role;


--
-- Name: TABLE amenities; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.amenities TO service_role;


--
-- Name: SEQUENCE amenities_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.amenities_id_seq TO service_role;


--
-- Name: TABLE charter_companies; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.charter_companies TO service_role;


--
-- Name: SEQUENCE charter_companies_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.charter_companies_id_seq TO service_role;


--
-- Name: SEQUENCE event_talent_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.event_talent_id_seq TO service_role;


--
-- Name: TABLE invitations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.invitations TO service_role;


--
-- Name: SEQUENCE itinerary_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.itinerary_id_seq TO service_role;


--
-- Name: TABLE itinerary; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.itinerary TO service_role;


--
-- Name: TABLE location_types; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.location_types TO service_role;


--
-- Name: SEQUENCE location_types_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.location_types_id_seq TO service_role;


--
-- Name: SEQUENCE locations_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.locations_id_seq TO service_role;


--
-- Name: TABLE locations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.locations TO service_role;


--
-- Name: SEQUENCE parties_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.parties_id_seq TO service_role;


--
-- Name: TABLE party_themes; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.party_themes TO service_role;


--
-- Name: SEQUENCE party_themes_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.party_themes_id_seq TO service_role;


--
-- Name: TABLE profiles; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.profiles TO anon;
GRANT SELECT,INSERT,UPDATE ON TABLE public.profiles TO authenticated;
GRANT ALL ON TABLE public.profiles TO service_role;


--
-- Name: TABLE resort_amenities; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.resort_amenities TO service_role;


--
-- Name: TABLE resort_venues; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.resort_venues TO service_role;


--
-- Name: TABLE resorts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.resorts TO service_role;


--
-- Name: SEQUENCE resorts_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.resorts_id_seq TO service_role;


--
-- Name: TABLE security_audit_log; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.security_audit_log TO service_role;


--
-- Name: TABLE ship_amenities; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.ship_amenities TO service_role;


--
-- Name: TABLE ship_venues; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.ship_venues TO service_role;


--
-- Name: SEQUENCE ships_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.ships_id_seq TO service_role;


--
-- Name: SEQUENCE talent_categories_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.talent_categories_id_seq TO service_role;


--
-- Name: SEQUENCE trip_info_sections_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.trip_info_sections_id_seq TO service_role;


--
-- Name: TABLE trip_info_sections; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trip_info_sections TO service_role;


--
-- Name: TABLE trip_section_assignments; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trip_section_assignments TO service_role;


--
-- Name: SEQUENCE trip_section_assignments_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.trip_section_assignments_id_seq TO service_role;


--
-- Name: TABLE trip_status; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trip_status TO service_role;


--
-- Name: SEQUENCE trip_status_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.trip_status_id_seq TO service_role;


--
-- Name: TABLE trip_talent; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trip_talent TO service_role;


--
-- Name: TABLE trip_types; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.trip_types TO service_role;


--
-- Name: SEQUENCE trip_types_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.trip_types_id_seq TO service_role;


--
-- Name: TABLE venue_types; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.venue_types TO service_role;


--
-- Name: SEQUENCE venue_types_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.venue_types_id_seq TO service_role;


--
-- Name: TABLE venues; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.venues TO service_role;


--
-- Name: SEQUENCE venues_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.venues_id_seq TO service_role;


--
-- Name: TABLE messages; Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON TABLE realtime.messages TO postgres;
GRANT ALL ON TABLE realtime.messages TO dashboard_user;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO anon;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO authenticated;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO service_role;


--
-- Name: TABLE schema_migrations; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.schema_migrations TO postgres;
GRANT ALL ON TABLE realtime.schema_migrations TO dashboard_user;
GRANT SELECT ON TABLE realtime.schema_migrations TO anon;
GRANT SELECT ON TABLE realtime.schema_migrations TO authenticated;
GRANT SELECT ON TABLE realtime.schema_migrations TO service_role;
GRANT ALL ON TABLE realtime.schema_migrations TO supabase_realtime_admin;


--
-- Name: TABLE subscription; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.subscription TO postgres;
GRANT ALL ON TABLE realtime.subscription TO dashboard_user;
GRANT SELECT ON TABLE realtime.subscription TO anon;
GRANT SELECT ON TABLE realtime.subscription TO authenticated;
GRANT SELECT ON TABLE realtime.subscription TO service_role;
GRANT ALL ON TABLE realtime.subscription TO supabase_realtime_admin;


--
-- Name: SEQUENCE subscription_id_seq; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO postgres;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO dashboard_user;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO anon;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO authenticated;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO service_role;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO supabase_realtime_admin;


--
-- Name: TABLE buckets; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets TO anon;
GRANT ALL ON TABLE storage.buckets TO authenticated;
GRANT ALL ON TABLE storage.buckets TO service_role;
GRANT ALL ON TABLE storage.buckets TO postgres WITH GRANT OPTION;


--
-- Name: TABLE buckets_analytics; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets_analytics TO service_role;
GRANT ALL ON TABLE storage.buckets_analytics TO authenticated;
GRANT ALL ON TABLE storage.buckets_analytics TO anon;


--
-- Name: TABLE objects; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.objects TO anon;
GRANT ALL ON TABLE storage.objects TO authenticated;
GRANT ALL ON TABLE storage.objects TO service_role;
GRANT ALL ON TABLE storage.objects TO postgres WITH GRANT OPTION;


--
-- Name: TABLE prefixes; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.prefixes TO service_role;
GRANT ALL ON TABLE storage.prefixes TO authenticated;
GRANT ALL ON TABLE storage.prefixes TO anon;


--
-- Name: TABLE s3_multipart_uploads; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO anon;


--
-- Name: TABLE s3_multipart_uploads_parts; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads_parts TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO anon;


--
-- Name: TABLE secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.secrets TO service_role;


--
-- Name: TABLE decrypted_secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.decrypted_secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.decrypted_secrets TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON SEQUENCES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON FUNCTIONS TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON TABLES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO service_role;


--
-- Name: issue_graphql_placeholder; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_graphql_placeholder ON sql_drop
         WHEN TAG IN ('DROP EXTENSION')
   EXECUTE FUNCTION extensions.set_graphql_placeholder();


ALTER EVENT TRIGGER issue_graphql_placeholder OWNER TO supabase_admin;

--
-- Name: issue_pg_cron_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_cron_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_cron_access();


ALTER EVENT TRIGGER issue_pg_cron_access OWNER TO supabase_admin;

--
-- Name: issue_pg_graphql_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_graphql_access ON ddl_command_end
         WHEN TAG IN ('CREATE FUNCTION')
   EXECUTE FUNCTION extensions.grant_pg_graphql_access();


ALTER EVENT TRIGGER issue_pg_graphql_access OWNER TO supabase_admin;

--
-- Name: issue_pg_net_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_net_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_net_access();


ALTER EVENT TRIGGER issue_pg_net_access OWNER TO supabase_admin;

--
-- Name: pgrst_ddl_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_ddl_watch ON ddl_command_end
   EXECUTE FUNCTION extensions.pgrst_ddl_watch();


ALTER EVENT TRIGGER pgrst_ddl_watch OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_drop_watch ON sql_drop
   EXECUTE FUNCTION extensions.pgrst_drop_watch();


ALTER EVENT TRIGGER pgrst_drop_watch OWNER TO supabase_admin;

--
-- PostgreSQL database dump complete
--

\unrestrict iyHyj1PZfhZddddIpmedwg8RUB6J2KY1vwhRHdebcOfnUpIVn5oQz7gWrEUg79L

